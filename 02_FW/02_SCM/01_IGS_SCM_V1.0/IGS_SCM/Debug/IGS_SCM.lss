
IGS_SCM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000210  00800100  00001fe2  00002076  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fe2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000d5c  00800310  00800310  00002286  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002286  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000022b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000022f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000025ef  00000000  00000000  0000244c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000391  00000000  00000000  00004a3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016cd  00000000  00000000  00004dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000558  00000000  00000000  0000649c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000091f  00000000  00000000  000069f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002aca  00000000  00000000  00007313  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00009ddd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a7 c0       	rjmp	.+334    	; 0x150 <__ctors_end>
       2:	00 00       	nop
       4:	c3 c0       	rjmp	.+390    	; 0x18c <__bad_interrupt>
       6:	00 00       	nop
       8:	c1 c0       	rjmp	.+386    	; 0x18c <__bad_interrupt>
       a:	00 00       	nop
       c:	bf c0       	rjmp	.+382    	; 0x18c <__bad_interrupt>
       e:	00 00       	nop
      10:	bd c0       	rjmp	.+378    	; 0x18c <__bad_interrupt>
      12:	00 00       	nop
      14:	bb c0       	rjmp	.+374    	; 0x18c <__bad_interrupt>
      16:	00 00       	nop
      18:	b9 c0       	rjmp	.+370    	; 0x18c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	0c 94 84 0f 	jmp	0x1f08	; 0x1f08 <__vector_7>
      20:	b5 c0       	rjmp	.+362    	; 0x18c <__bad_interrupt>
      22:	00 00       	nop
      24:	b3 c0       	rjmp	.+358    	; 0x18c <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__vector_10>
      2c:	af c0       	rjmp	.+350    	; 0x18c <__bad_interrupt>
      2e:	00 00       	nop
      30:	ad c0       	rjmp	.+346    	; 0x18c <__bad_interrupt>
      32:	00 00       	nop
      34:	ab c0       	rjmp	.+342    	; 0x18c <__bad_interrupt>
      36:	00 00       	nop
      38:	a9 c0       	rjmp	.+338    	; 0x18c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a7 c0       	rjmp	.+334    	; 0x18c <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 c4 0a 	jmp	0x1588	; 0x1588 <__vector_16>
      44:	a3 c0       	rjmp	.+326    	; 0x18c <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 85 0a 	jmp	0x150a	; 0x150a <__vector_18>
      4c:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <__vector_19>
      50:	0c 94 d2 0b 	jmp	0x17a4	; 0x17a4 <__vector_20>
      54:	9b c0       	rjmp	.+310    	; 0x18c <__bad_interrupt>
      56:	00 00       	nop
      58:	99 c0       	rjmp	.+306    	; 0x18c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	97 c0       	rjmp	.+302    	; 0x18c <__bad_interrupt>
      5e:	00 00       	nop
      60:	95 c0       	rjmp	.+298    	; 0x18c <__bad_interrupt>
      62:	00 00       	nop
      64:	93 c0       	rjmp	.+294    	; 0x18c <__bad_interrupt>
      66:	00 00       	nop
      68:	91 c0       	rjmp	.+290    	; 0x18c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	8f c0       	rjmp	.+286    	; 0x18c <__bad_interrupt>
      6e:	00 00       	nop
      70:	8d c0       	rjmp	.+282    	; 0x18c <__bad_interrupt>
      72:	00 00       	nop
      74:	8b c0       	rjmp	.+278    	; 0x18c <__bad_interrupt>
      76:	00 00       	nop
      78:	89 c0       	rjmp	.+274    	; 0x18c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	87 c0       	rjmp	.+270    	; 0x18c <__bad_interrupt>
      7e:	00 00       	nop
      80:	85 c0       	rjmp	.+266    	; 0x18c <__bad_interrupt>
      82:	00 00       	nop
      84:	83 c0       	rjmp	.+262    	; 0x18c <__bad_interrupt>
      86:	00 00       	nop
      88:	81 c0       	rjmp	.+258    	; 0x18c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	5e 0b       	sbc	r21, r30
      8e:	68 0b       	sbc	r22, r24
      90:	86 0b       	sbc	r24, r22
      92:	86 0b       	sbc	r24, r22
      94:	86 0b       	sbc	r24, r22
      96:	86 0b       	sbc	r24, r22
      98:	86 0b       	sbc	r24, r22
      9a:	86 0b       	sbc	r24, r22
      9c:	86 0b       	sbc	r24, r22
      9e:	86 0b       	sbc	r24, r22
      a0:	86 0b       	sbc	r24, r22
      a2:	86 0b       	sbc	r24, r22
      a4:	86 0b       	sbc	r24, r22
      a6:	86 0b       	sbc	r24, r22
      a8:	86 0b       	sbc	r24, r22
      aa:	86 0b       	sbc	r24, r22
      ac:	86 0b       	sbc	r24, r22
      ae:	86 0b       	sbc	r24, r22
      b0:	86 0b       	sbc	r24, r22
      b2:	86 0b       	sbc	r24, r22
      b4:	86 0b       	sbc	r24, r22
      b6:	86 0b       	sbc	r24, r22
      b8:	86 0b       	sbc	r24, r22
      ba:	86 0b       	sbc	r24, r22
      bc:	86 0b       	sbc	r24, r22
      be:	86 0b       	sbc	r24, r22
      c0:	86 0b       	sbc	r24, r22
      c2:	86 0b       	sbc	r24, r22
      c4:	86 0b       	sbc	r24, r22
      c6:	86 0b       	sbc	r24, r22
      c8:	86 0b       	sbc	r24, r22
      ca:	86 0b       	sbc	r24, r22
      cc:	0e 0b       	sbc	r16, r30
      ce:	18 0b       	sbc	r17, r24
      d0:	2c 0b       	sbc	r18, r28
      d2:	36 0b       	sbc	r19, r22
      d4:	40 0b       	sbc	r20, r16
      d6:	22 0b       	sbc	r18, r18
      d8:	4a 0b       	sbc	r20, r26
      da:	54 0b       	sbc	r21, r20
      dc:	86 0b       	sbc	r24, r22
      de:	86 0b       	sbc	r24, r22
      e0:	86 0b       	sbc	r24, r22
      e2:	86 0b       	sbc	r24, r22
      e4:	86 0b       	sbc	r24, r22
      e6:	86 0b       	sbc	r24, r22
      e8:	86 0b       	sbc	r24, r22
      ea:	86 0b       	sbc	r24, r22
      ec:	86 0b       	sbc	r24, r22
      ee:	86 0b       	sbc	r24, r22
      f0:	86 0b       	sbc	r24, r22
      f2:	86 0b       	sbc	r24, r22
      f4:	86 0b       	sbc	r24, r22
      f6:	86 0b       	sbc	r24, r22
      f8:	86 0b       	sbc	r24, r22
      fa:	86 0b       	sbc	r24, r22
      fc:	86 0b       	sbc	r24, r22
      fe:	86 0b       	sbc	r24, r22
     100:	86 0b       	sbc	r24, r22
     102:	86 0b       	sbc	r24, r22
     104:	86 0b       	sbc	r24, r22
     106:	86 0b       	sbc	r24, r22
     108:	86 0b       	sbc	r24, r22
     10a:	86 0b       	sbc	r24, r22
     10c:	86 0b       	sbc	r24, r22
     10e:	86 0b       	sbc	r24, r22
     110:	86 0b       	sbc	r24, r22
     112:	86 0b       	sbc	r24, r22
     114:	86 0b       	sbc	r24, r22
     116:	86 0b       	sbc	r24, r22
     118:	86 0b       	sbc	r24, r22
     11a:	86 0b       	sbc	r24, r22
     11c:	86 0b       	sbc	r24, r22
     11e:	86 0b       	sbc	r24, r22
     120:	86 0b       	sbc	r24, r22
     122:	86 0b       	sbc	r24, r22
     124:	86 0b       	sbc	r24, r22
     126:	86 0b       	sbc	r24, r22
     128:	86 0b       	sbc	r24, r22
     12a:	86 0b       	sbc	r24, r22
     12c:	86 0b       	sbc	r24, r22
     12e:	86 0b       	sbc	r24, r22
     130:	86 0b       	sbc	r24, r22
     132:	86 0b       	sbc	r24, r22
     134:	86 0b       	sbc	r24, r22
     136:	86 0b       	sbc	r24, r22
     138:	86 0b       	sbc	r24, r22
     13a:	86 0b       	sbc	r24, r22
     13c:	86 0b       	sbc	r24, r22
     13e:	86 0b       	sbc	r24, r22
     140:	86 0b       	sbc	r24, r22
     142:	86 0b       	sbc	r24, r22
     144:	86 0b       	sbc	r24, r22
     146:	86 0b       	sbc	r24, r22
     148:	86 0b       	sbc	r24, r22
     14a:	86 0b       	sbc	r24, r22
     14c:	7c 0b       	sbc	r23, r28
     14e:	72 0b       	sbc	r23, r18

00000150 <__ctors_end>:
     150:	11 24       	eor	r1, r1
     152:	1f be       	out	0x3f, r1	; 63
     154:	cf ef       	ldi	r28, 0xFF	; 255
     156:	d0 e1       	ldi	r29, 0x10	; 16
     158:	de bf       	out	0x3e, r29	; 62
     15a:	cd bf       	out	0x3d, r28	; 61

0000015c <__do_copy_data>:
     15c:	13 e0       	ldi	r17, 0x03	; 3
     15e:	a0 e0       	ldi	r26, 0x00	; 0
     160:	b1 e0       	ldi	r27, 0x01	; 1
     162:	e2 ee       	ldi	r30, 0xE2	; 226
     164:	ff e1       	ldi	r31, 0x1F	; 31
     166:	00 e0       	ldi	r16, 0x00	; 0
     168:	0b bf       	out	0x3b, r16	; 59
     16a:	02 c0       	rjmp	.+4      	; 0x170 <__do_copy_data+0x14>
     16c:	07 90       	elpm	r0, Z+
     16e:	0d 92       	st	X+, r0
     170:	a0 31       	cpi	r26, 0x10	; 16
     172:	b1 07       	cpc	r27, r17
     174:	d9 f7       	brne	.-10     	; 0x16c <__do_copy_data+0x10>

00000176 <__do_clear_bss>:
     176:	20 e1       	ldi	r18, 0x10	; 16
     178:	a0 e1       	ldi	r26, 0x10	; 16
     17a:	b3 e0       	ldi	r27, 0x03	; 3
     17c:	01 c0       	rjmp	.+2      	; 0x180 <.do_clear_bss_start>

0000017e <.do_clear_bss_loop>:
     17e:	1d 92       	st	X+, r1

00000180 <.do_clear_bss_start>:
     180:	ac 36       	cpi	r26, 0x6C	; 108
     182:	b2 07       	cpc	r27, r18
     184:	e1 f7       	brne	.-8      	; 0x17e <.do_clear_bss_loop>
     186:	b3 d7       	rcall	.+3942   	; 0x10ee <main>
     188:	0c 94 ef 0f 	jmp	0x1fde	; 0x1fde <_exit>

0000018c <__bad_interrupt>:
     18c:	39 cf       	rjmp	.-398    	; 0x0 <__vectors>

0000018e <crcsum>:
uint16_t
crcsum(volatile uint8_t* message, uint16_t length, unsigned short crc)
{
  uint16_t i;

  for(i = 0; i < length; i++)
     18e:	61 15       	cp	r22, r1
     190:	71 05       	cpc	r23, r1
     192:	a1 f0       	breq	.+40     	; 0x1bc <crcsum+0x2e>
     194:	dc 01       	movw	r26, r24
     196:	68 0f       	add	r22, r24
     198:	79 1f       	adc	r23, r25
  {
      CRC16(crc, message[i]);
     19a:	25 2f       	mov	r18, r21
     19c:	33 27       	eor	r19, r19
     19e:	9d 91       	ld	r25, X+
     1a0:	fa 01       	movw	r30, r20
     1a2:	e9 27       	eor	r30, r25
     1a4:	ff 27       	eor	r31, r31
     1a6:	ee 0f       	add	r30, r30
     1a8:	ff 1f       	adc	r31, r31
     1aa:	e0 5f       	subi	r30, 0xF0	; 240
     1ac:	fe 4f       	sbci	r31, 0xFE	; 254
     1ae:	40 81       	ld	r20, Z
     1b0:	51 81       	ldd	r21, Z+1	; 0x01
     1b2:	42 27       	eor	r20, r18
     1b4:	53 27       	eor	r21, r19
uint16_t
crcsum(volatile uint8_t* message, uint16_t length, unsigned short crc)
{
  uint16_t i;

  for(i = 0; i < length; i++)
     1b6:	a6 17       	cp	r26, r22
     1b8:	b7 07       	cpc	r27, r23
     1ba:	79 f7       	brne	.-34     	; 0x19a <crcsum+0xc>
  {
      CRC16(crc, message[i]);
  }
  return crc;
}
     1bc:	ca 01       	movw	r24, r20
     1be:	08 95       	ret

000001c0 <SCMTF_SetClock>:
#define SCM_FUNCTION_TASK_H_

void SCMTF_SetClock()
{
	//FUSE : CLKOPT Setting 과 함께 사용해야 함.
	XDIV &= ~(1<<XDIVEN);
     1c0:	8c b7       	in	r24, 0x3c	; 60
     1c2:	8f 77       	andi	r24, 0x7F	; 127
     1c4:	8c bf       	out	0x3c, r24	; 60
	XDIV |=(1<<XDIV6)|(1<<XDIV5)|(1<<XDIV4)|(1<<XDIV3)|(1<<XDIV2)|(1<<XDIV1)|(1<<XDIV0);
     1c6:	8c b7       	in	r24, 0x3c	; 60
     1c8:	8f 67       	ori	r24, 0x7F	; 127
     1ca:	8c bf       	out	0x3c, r24	; 60
	XDIV |= (1<<XDIVEN);
     1cc:	8c b7       	in	r24, 0x3c	; 60
     1ce:	80 68       	ori	r24, 0x80	; 128
     1d0:	8c bf       	out	0x3c, r24	; 60
     1d2:	08 95       	ret

000001d4 <SCMTF_PortInit>:

void SCMTF_PortInit()
{
	// Port Direction
	
	DDRB = (0<<DDB7)|(1<<DDB6)|(1<<DDB5)|(1<<DDB4)|(0<<DDB3)|(0<<DDB2)|(0<<DDB1)|(0<<DDB0);
     1d4:	90 e7       	ldi	r25, 0x70	; 112
     1d6:	97 bb       	out	0x17, r25	; 23
	DDRD = (0<<DDD7)|(0<<DDD6)|(0<<DDD5)|(1<<DDD4)|(1<<DDD3)|(0<<DDD2)|(0<<DDD1)|(0<<DDD0);
     1d8:	88 e1       	ldi	r24, 0x18	; 24
     1da:	81 bb       	out	0x11, r24	; 17
	DDRE = (1<<DDE7)|(0<<DDE6)|(0<<DDE5)|(1<<DDE4)|(0<<DDE3)|(1<<DDE2)|(1<<DDE1)|(0<<DDE0);
     1dc:	86 e9       	ldi	r24, 0x96	; 150
     1de:	82 b9       	out	0x02, r24	; 2
	DDRF = (0<<DDF7)|(0<<DDF6)|(0<<DDF5)|(0<<DDF4)|(0<<DDF3)|(0<<DDF2)|(0<<DDF1)|(0<<DDF0);
     1e0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRG |=(1<<DDG0)|(1<<DDG1); 
     1e4:	e4 e6       	ldi	r30, 0x64	; 100
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	83 60       	ori	r24, 0x03	; 3
     1ec:	80 83       	st	Z, r24
	
	PORTD = 0;
     1ee:	12 ba       	out	0x12, r1	; 18
	PORTB = (0<<PB7)|(1<<PB6)|(1<<PB5)|(1<<PB4)|(0<<PB3)|(0<<PB2)|(0<<PB1)|(0<<PB0);
     1f0:	98 bb       	out	0x18, r25	; 24
	PORTE = (0<<PE7)|(0<<PE6)|(0<<PE5)|(0<<PE4)|(0<<PE3)|(1<<PE2)|(0<<PE1)|(0<<PE0);
     1f2:	84 e0       	ldi	r24, 0x04	; 4
     1f4:	83 b9       	out	0x03, r24	; 3
	PORTF = (0<<PF7)|(0<<PF6)|(0<<PF5)|(0<<PF4)|(0<<PF3)|(0<<PF2)|(0<<PF1)|(0<<PF0);
     1f6:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     1fa:	08 95       	ret

000001fc <SCMTF_ExIntInit>:
	
}

void SCMTF_ExIntInit()
{
	EICRB = (1<<ISC61)|(0<<ISC60); // External Interrupt 6 / falling Edge
     1fc:	80 e2       	ldi	r24, 0x20	; 32
     1fe:	8a bf       	out	0x3a, r24	; 58
     200:	08 95       	ret

00000202 <SCMTF_ReadDipSwitchValueMYID>:

uint8_t SCMTF_ReadDipSwitchValueMYID()
{
	uint8_t dv;
	
	dv = (PINF & 0xF0);
     202:	e0 b1       	in	r30, 0x00	; 0
	dv = (dv >> 4);
			
	return G_dipSwitchTable[dv];
     204:	e2 95       	swap	r30
     206:	ef 70       	andi	r30, 0x0F	; 15
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	e0 50       	subi	r30, 0x00	; 0
     20c:	ff 4f       	sbci	r31, 0xFF	; 255
}
     20e:	80 81       	ld	r24, Z
     210:	08 95       	ret

00000212 <SCMTF_ReadDipSwitchValueMode>:

uint8_t SCMTF_ReadDipSwitchValueMode() // SCM Mode ON/OFF
{
     212:	81 e0       	ldi	r24, 0x01	; 1
     214:	02 99       	sbic	0x00, 2	; 0
     216:	80 e0       	ldi	r24, 0x00	; 0
	
	if(dv == 0)		
		return ON;
	else
		return OFF;
}
     218:	08 95       	ret

0000021a <SCMTF_ReadDipSwitchValueTest>:

uint8_t SCMTF_ReadDipSwitchValueTest()
{
     21a:	81 e0       	ldi	r24, 0x01	; 1
     21c:	01 99       	sbic	0x00, 1	; 0
     21e:	80 e0       	ldi	r24, 0x00	; 0
	
	if(dv == 0)		
		return ON;
	else
		return OFF;
}
     220:	08 95       	ret

00000222 <SCMTF_CheckOverCurrent>:

uint8_t SCMTF_CheckOverCurrent()
{
     222:	81 e0       	ldi	r24, 0x01	; 1
     224:	0d 9b       	sbis	0x01, 5	; 1
     226:	80 e0       	ldi	r24, 0x00	; 0
	
	if(pinvalue == mask)
		return HIGH;
	else
		return LOW;
}
     228:	08 95       	ret

0000022a <SCM485F_USART0Init>:
#define SCM_FUNCTION_485_H_

void SCM485F_USART0Init()
{
	uint32_t ubrr = MYUBRR;
	UBRR0H = (uint8_t)(ubrr >>8);
     22a:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (uint8_t)(ubrr);
     22e:	8c e0       	ldi	r24, 0x0C	; 12
     230:	89 b9       	out	0x09, r24	; 9

	UCSR0C=(0<<UMSEL0)|(0<<USBS0)|(1<<UCSZ01)|(1<<UCSZ00);
     232:	86 e0       	ldi	r24, 0x06	; 6
     234:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	UCSR0B=(1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0)|(0<<UCSZ02);
     238:	88 e9       	ldi	r24, 0x98	; 152
     23a:	8a b9       	out	0x0a, r24	; 10
     23c:	08 95       	ret

0000023e <SCM485F_RxCompleteTimerInit>:



void SCM485F_RxCompleteTimerInit()
{
	TCCR0 = (0<<CS02)|(0<<CS01)|(0<<CS00);
     23e:	13 be       	out	0x33, r1	; 51
	TIMSK |= (1<<TOIE0);
     240:	87 b7       	in	r24, 0x37	; 55
     242:	81 60       	ori	r24, 0x01	; 1
     244:	87 bf       	out	0x37, r24	; 55
	TCNT0 = 0;
     246:	12 be       	out	0x32, r1	; 50
     248:	08 95       	ret

0000024a <SCM485F_BufferInit>:
}

//initialize buffer
void SCM485F_BufferInit(volatile u8buf *buf)
{
	buf->index = 0;
     24a:	fc 01       	movw	r30, r24
     24c:	ee 51       	subi	r30, 0x1E	; 30
     24e:	fe 4f       	sbci	r31, 0xFE	; 254
     250:	11 82       	std	Z+1, r1	; 0x01
     252:	10 82       	st	Z, r1
	buf->length = 0;
     254:	32 97       	sbiw	r30, 0x02	; 2
     256:	11 82       	std	Z+1, r1	; 0x01
     258:	10 82       	st	Z, r1
     25a:	08 95       	ret

0000025c <SCM485F_OneByteWrite_485>:
}

uint8_t SCM485F_OneByteWrite_485(volatile u8buf *buf, uint8_t u8data)
{
	
	if(buf->index < MAX_BUF_SIZE)
     25c:	fc 01       	movw	r30, r24
     25e:	ee 51       	subi	r30, 0x1E	; 30
     260:	fe 4f       	sbci	r31, 0xFE	; 254
     262:	20 81       	ld	r18, Z
     264:	31 81       	ldd	r19, Z+1	; 0x01
     266:	20 3e       	cpi	r18, 0xE0	; 224
     268:	31 40       	sbci	r19, 0x01	; 1
     26a:	68 f4       	brcc	.+26     	; 0x286 <SCM485F_OneByteWrite_485+0x2a>
	{
		buf->buffer[buf->index] = u8data;
     26c:	20 81       	ld	r18, Z
     26e:	31 81       	ldd	r19, Z+1	; 0x01
     270:	dc 01       	movw	r26, r24
     272:	a2 0f       	add	r26, r18
     274:	b3 1f       	adc	r27, r19
     276:	6c 93       	st	X, r22
		buf->index++;
     278:	80 81       	ld	r24, Z
     27a:	91 81       	ldd	r25, Z+1	; 0x01
     27c:	01 96       	adiw	r24, 0x01	; 1
     27e:	91 83       	std	Z+1, r25	; 0x01
     280:	80 83       	st	Z, r24
		return WRITE_OK;
     282:	81 e0       	ldi	r24, 0x01	; 1
     284:	08 95       	ret
	}
	else 
		return WRITE_FAIL;
     286:	80 e0       	ldi	r24, 0x00	; 0
}
     288:	08 95       	ret

0000028a <SCM485F_OneByteRead_485>:

uint8_t SCM485F_OneByteRead_485(volatile u8buf *buf, volatile uint8_t *u8data)
{

	if(buf->index < buf->length )
     28a:	fc 01       	movw	r30, r24
     28c:	ee 51       	subi	r30, 0x1E	; 30
     28e:	fe 4f       	sbci	r31, 0xFE	; 254
     290:	40 81       	ld	r20, Z
     292:	51 81       	ldd	r21, Z+1	; 0x01
     294:	32 97       	sbiw	r30, 0x02	; 2
     296:	20 81       	ld	r18, Z
     298:	31 81       	ldd	r19, Z+1	; 0x01
     29a:	42 17       	cp	r20, r18
     29c:	53 07       	cpc	r21, r19
     29e:	70 f4       	brcc	.+28     	; 0x2bc <SCM485F_OneByteRead_485+0x32>
	{
		*u8data=buf->buffer[buf->index];
     2a0:	32 96       	adiw	r30, 0x02	; 2
     2a2:	a0 81       	ld	r26, Z
     2a4:	b1 81       	ldd	r27, Z+1	; 0x01
     2a6:	a8 0f       	add	r26, r24
     2a8:	b9 1f       	adc	r27, r25
     2aa:	2c 91       	ld	r18, X
     2ac:	db 01       	movw	r26, r22
     2ae:	2c 93       	st	X, r18
		buf->index++;
     2b0:	20 81       	ld	r18, Z
     2b2:	31 81       	ldd	r19, Z+1	; 0x01
     2b4:	2f 5f       	subi	r18, 0xFF	; 255
     2b6:	3f 4f       	sbci	r19, 0xFF	; 255
     2b8:	31 83       	std	Z+1, r19	; 0x01
     2ba:	20 83       	st	Z, r18
	}

	if(buf->index == buf->length)
     2bc:	fc 01       	movw	r30, r24
     2be:	ee 51       	subi	r30, 0x1E	; 30
     2c0:	fe 4f       	sbci	r31, 0xFE	; 254
     2c2:	40 81       	ld	r20, Z
     2c4:	51 81       	ldd	r21, Z+1	; 0x01
     2c6:	32 97       	sbiw	r30, 0x02	; 2
     2c8:	20 81       	ld	r18, Z
     2ca:	31 81       	ldd	r19, Z+1	; 0x01
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	42 17       	cp	r20, r18
     2d0:	53 07       	cpc	r21, r19
     2d2:	09 f0       	breq	.+2      	; 0x2d6 <SCM485F_OneByteRead_485+0x4c>
     2d4:	80 e0       	ldi	r24, 0x00	; 0
		return 1;
	else return 0;
}
     2d6:	08 95       	ret

000002d8 <SCM485F_packetBufInit>:

void SCM485F_packetBufInit()
{
	uint16_t i;
	G_485Packet.stx = 0;
     2d8:	ea e0       	ldi	r30, 0x0A	; 10
     2da:	fe e0       	ldi	r31, 0x0E	; 14
     2dc:	10 82       	st	Z, r1
     2de:	11 82       	std	Z+1, r1	; 0x01
     2e0:	12 82       	std	Z+2, r1	; 0x02
     2e2:	13 82       	std	Z+3, r1	; 0x03
	G_485Packet.scm_id = 0;
     2e4:	14 82       	std	Z+4, r1	; 0x04
	G_485Packet.data_type = 0;
     2e6:	15 82       	std	Z+5, r1	; 0x05
     2e8:	e2 e1       	ldi	r30, 0x12	; 18
     2ea:	fe e0       	ldi	r31, 0x0E	; 14
     2ec:	82 ef       	ldi	r24, 0xF2	; 242
     2ee:	9f e0       	ldi	r25, 0x0F	; 15
	for(i=0; i<MAX_BUF_SIZE; i++)
		G_485Packet.data[i] = 0;
     2f0:	11 92       	st	Z+, r1
{
	uint16_t i;
	G_485Packet.stx = 0;
	G_485Packet.scm_id = 0;
	G_485Packet.data_type = 0;
	for(i=0; i<MAX_BUF_SIZE; i++)
     2f2:	e8 17       	cp	r30, r24
     2f4:	f9 07       	cpc	r31, r25
     2f6:	e1 f7       	brne	.-8      	; 0x2f0 <SCM485F_packetBufInit+0x18>
		G_485Packet.data[i] = 0;
	G_485Packet.crc16 = 0;
     2f8:	10 92 f3 0f 	sts	0x0FF3, r1	; 0x800ff3 <G_485Packet+0x1e9>
     2fc:	10 92 f2 0f 	sts	0x0FF2, r1	; 0x800ff2 <G_485Packet+0x1e8>
     300:	08 95       	ret

00000302 <SCM485F_checkCRC16>:

uint16_t SCM485F_checkCRC16(volatile uint8_t *crcMessage, uint16_t length)
{
	uint16_t crc;

	crc = crcsum(crcMessage, length,  CRC_INIT);
     302:	4f ef       	ldi	r20, 0xFF	; 255
     304:	5f ef       	ldi	r21, 0xFF	; 255
     306:	43 cf       	rjmp	.-378    	; 0x18e <crcsum>
	return crc;
}
     308:	08 95       	ret

0000030a <SCM485F_getRxPacket>:

uint8_t SCM485F_getRxPacket()
{
     30a:	cf 93       	push	r28
	uint16_t i;
	uint16_t crc16;
	SCM485F_packetBufInit();
     30c:	df 93       	push	r29
	
	G_485Packet.stx = (uint32_t)G_rxBuf485.buffer[0];
     30e:	e4 df       	rcall	.-56     	; 0x2d8 <SCM485F_packetBufInit>
     310:	c1 ed       	ldi	r28, 0xD1	; 209
     312:	db e0       	ldi	r29, 0x0B	; 11
	G_485Packet.stx = (G_485Packet.stx << 8) | (uint32_t)G_rxBuf485.buffer[1];
     314:	38 81       	ld	r19, Y
	G_485Packet.stx = (G_485Packet.stx << 16) | (uint32_t)G_rxBuf485.buffer[2];
     316:	89 81       	ldd	r24, Y+1	; 0x01
     318:	2a 81       	ldd	r18, Y+2	; 0x02
     31a:	ea e0       	ldi	r30, 0x0A	; 10
     31c:	fe e0       	ldi	r31, 0x0E	; 14
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	a0 e0       	ldi	r26, 0x00	; 0
     322:	b0 e0       	ldi	r27, 0x00	; 0
     324:	93 2b       	or	r25, r19
     326:	dc 01       	movw	r26, r24
     328:	99 27       	eor	r25, r25
     32a:	88 27       	eor	r24, r24
     32c:	82 2b       	or	r24, r18
     32e:	80 83       	st	Z, r24
     330:	91 83       	std	Z+1, r25	; 0x01
     332:	a2 83       	std	Z+2, r26	; 0x02
	
	G_485Packet.scm_id = G_rxBuf485.buffer[3];
     334:	b3 83       	std	Z+3, r27	; 0x03
     336:	8b 81       	ldd	r24, Y+3	; 0x03
	G_485Packet.data_type = G_rxBuf485.buffer[4];
     338:	84 83       	std	Z+4, r24	; 0x04
     33a:	8c 81       	ldd	r24, Y+4	; 0x04
	G_485Packet.data_length = (uint16_t)G_rxBuf485.buffer[5];
     33c:	85 83       	std	Z+5, r24	; 0x05
	G_485Packet.data_length = (G_485Packet.data_length << 8) | (uint16_t)G_rxBuf485.buffer[6];
     33e:	8d 81       	ldd	r24, Y+5	; 0x05
     340:	6e 81       	ldd	r22, Y+6	; 0x06
     342:	70 e0       	ldi	r23, 0x00	; 0
     344:	78 2b       	or	r23, r24
     346:	77 83       	std	Z+7, r23	; 0x07
	
	if (G_485Packet.data_length > MAX_BUF_SIZE)
     348:	66 83       	std	Z+6, r22	; 0x06
     34a:	61 3e       	cpi	r22, 0xE1	; 225
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	78 07       	cpc	r23, r24
	{
		G_485Packet.data_length = MAX_BUF_SIZE;
     350:	48 f0       	brcs	.+18     	; 0x364 <SCM485F_getRxPacket+0x5a>
     352:	80 ee       	ldi	r24, 0xE0	; 224
     354:	91 e0       	ldi	r25, 0x01	; 1
     356:	90 93 11 0e 	sts	0x0E11, r25	; 0x800e11 <G_485Packet+0x7>
     35a:	80 93 10 0e 	sts	0x0E10, r24	; 0x800e10 <G_485Packet+0x6>
	}
	for(i=0; i<G_485Packet.data_length; i++)
     35e:	60 ee       	ldi	r22, 0xE0	; 224
     360:	71 e0       	ldi	r23, 0x01	; 1
     362:	03 c0       	rjmp	.+6      	; 0x36a <SCM485F_getRxPacket+0x60>
     364:	61 15       	cp	r22, r1
     366:	71 05       	cpc	r23, r1
     368:	69 f0       	breq	.+26     	; 0x384 <SCM485F_getRxPacket+0x7a>
     36a:	e2 e1       	ldi	r30, 0x12	; 18
     36c:	fe e0       	ldi	r31, 0x0E	; 14
     36e:	80 e0       	ldi	r24, 0x00	; 0
	G_485Packet.data[i] = G_rxBuf485.buffer[7+i];
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	dc 01       	movw	r26, r24
     374:	a8 52       	subi	r26, 0x28	; 40
     376:	b4 4f       	sbci	r27, 0xF4	; 244
     378:	2c 91       	ld	r18, X
	
	if (G_485Packet.data_length > MAX_BUF_SIZE)
	{
		G_485Packet.data_length = MAX_BUF_SIZE;
	}
	for(i=0; i<G_485Packet.data_length; i++)
     37a:	21 93       	st	Z+, r18
     37c:	01 96       	adiw	r24, 0x01	; 1
     37e:	86 17       	cp	r24, r22
     380:	97 07       	cpc	r25, r23
	G_485Packet.data[i] = G_rxBuf485.buffer[7+i];
	
	G_485Packet.crc16 = (uint16_t)G_rxBuf485.buffer[7+G_485Packet.data_length];
     382:	b8 f3       	brcs	.-18     	; 0x372 <SCM485F_getRxPacket+0x68>
     384:	fb 01       	movw	r30, r22
     386:	e8 52       	subi	r30, 0x28	; 40
     388:	f4 4f       	sbci	r31, 0xF4	; 244
	G_485Packet.crc16 = (G_485Packet.crc16 << 8) | (uint16_t)G_rxBuf485.buffer[7+G_485Packet.data_length +1];
     38a:	20 81       	ld	r18, Z
     38c:	fb 01       	movw	r30, r22
     38e:	e7 52       	subi	r30, 0x27	; 39
     390:	f4 4f       	sbci	r31, 0xF4	; 244
     392:	80 81       	ld	r24, Z
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	92 2b       	or	r25, r18
     398:	90 93 f3 0f 	sts	0x0FF3, r25	; 0x800ff3 <G_485Packet+0x1e9>
     39c:	80 93 f2 0f 	sts	0x0FF2, r24	; 0x800ff2 <G_485Packet+0x1e8>
	
	crc16 = crcsum(G_rxBuf485.buffer+3, G_485Packet.data_length+4,  CRC_INIT);
     3a0:	6c 5f       	subi	r22, 0xFC	; 252
     3a2:	7f 4f       	sbci	r23, 0xFF	; 255
     3a4:	4f ef       	ldi	r20, 0xFF	; 255
     3a6:	5f ef       	ldi	r21, 0xFF	; 255
     3a8:	84 ed       	ldi	r24, 0xD4	; 212
     3aa:	9b e0       	ldi	r25, 0x0B	; 11
	if(G_485Packet.stx != 0x000000)
     3ac:	f0 de       	rcall	.-544    	; 0x18e <crcsum>
     3ae:	40 91 0a 0e 	lds	r20, 0x0E0A	; 0x800e0a <G_485Packet>
     3b2:	50 91 0b 0e 	lds	r21, 0x0E0B	; 0x800e0b <G_485Packet+0x1>
     3b6:	60 91 0c 0e 	lds	r22, 0x0E0C	; 0x800e0c <G_485Packet+0x2>
     3ba:	70 91 0d 0e 	lds	r23, 0x0E0D	; 0x800e0d <G_485Packet+0x3>
     3be:	45 2b       	or	r20, r21
     3c0:	46 2b       	or	r20, r22
     3c2:	47 2b       	or	r20, r23
		return RS485_RX_STX_ERROR;
		
		if(G_485Packet.crc16 != crc16)
     3c4:	79 f4       	brne	.+30     	; 0x3e4 <SCM485F_getRxPacket+0xda>
     3c6:	20 91 f2 0f 	lds	r18, 0x0FF2	; 0x800ff2 <G_485Packet+0x1e8>
     3ca:	30 91 f3 0f 	lds	r19, 0x0FF3	; 0x800ff3 <G_485Packet+0x1e9>
     3ce:	82 17       	cp	r24, r18
     3d0:	93 07       	cpc	r25, r19
		return RS485_RX_CRC_ERROR;
	
	if(G_485Packet.scm_id != G_idDipValue)
     3d2:	51 f4       	brne	.+20     	; 0x3e8 <SCM485F_getRxPacket+0xde>
     3d4:	80 91 9b 08 	lds	r24, 0x089B	; 0x80089b <G_idDipValue>
     3d8:	90 91 0e 0e 	lds	r25, 0x0E0E	; 0x800e0e <G_485Packet+0x4>
     3dc:	98 13       	cpse	r25, r24
		return RS485_RX_INVALID_ID;
	


	return RS485_RX_OK;
     3de:	06 c0       	rjmp	.+12     	; 0x3ec <SCM485F_getRxPacket+0xe2>
     3e0:	83 e0       	ldi	r24, 0x03	; 3
	G_485Packet.crc16 = (uint16_t)G_rxBuf485.buffer[7+G_485Packet.data_length];
	G_485Packet.crc16 = (G_485Packet.crc16 << 8) | (uint16_t)G_rxBuf485.buffer[7+G_485Packet.data_length +1];
	
	crc16 = crcsum(G_rxBuf485.buffer+3, G_485Packet.data_length+4,  CRC_INIT);
	if(G_485Packet.stx != 0x000000)
		return RS485_RX_STX_ERROR;
     3e2:	05 c0       	rjmp	.+10     	; 0x3ee <SCM485F_getRxPacket+0xe4>
     3e4:	80 e0       	ldi	r24, 0x00	; 0
		
		if(G_485Packet.crc16 != crc16)
		return RS485_RX_CRC_ERROR;
     3e6:	03 c0       	rjmp	.+6      	; 0x3ee <SCM485F_getRxPacket+0xe4>
     3e8:	81 e0       	ldi	r24, 0x01	; 1
	
	if(G_485Packet.scm_id != G_idDipValue)
		return RS485_RX_INVALID_ID;
     3ea:	01 c0       	rjmp	.+2      	; 0x3ee <SCM485F_getRxPacket+0xe4>
	


	return RS485_RX_OK;
}
     3ec:	82 e0       	ldi	r24, 0x02	; 2
     3ee:	df 91       	pop	r29
     3f0:	cf 91       	pop	r28
     3f2:	08 95       	ret

000003f4 <SCM485F_makeTxPacket>:

void SCM485F_makeTxPacket(uint8_t data_type, uint16_t data_length, volatile uint8_t *data)
{
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	eb 01       	movw	r28, r22
	G_txBuf485.buffer[0] = 0x00;
     3fa:	e0 ec       	ldi	r30, 0xC0	; 192
     3fc:	f9 e0       	ldi	r31, 0x09	; 9
     3fe:	10 82       	st	Z, r1
	G_txBuf485.buffer[1] = 0x00;
     400:	11 82       	std	Z+1, r1	; 0x01
	G_txBuf485.buffer[2] = 0x00;
     402:	12 82       	std	Z+2, r1	; 0x02
	
	G_txBuf485.buffer[3] = G_idDipValue;
     404:	90 91 9b 08 	lds	r25, 0x089B	; 0x80089b <G_idDipValue>
     408:	93 83       	std	Z+3, r25	; 0x03
	G_txBuf485.buffer[4] = data_type;
     40a:	84 83       	std	Z+4, r24	; 0x04
	
	G_txBuf485.buffer[5] = (uint8_t)(data_length>>8);
     40c:	d5 83       	std	Z+5, r29	; 0x05
	G_txBuf485.buffer[6] = (uint8_t)(data_length & 0x00FF);
     40e:	66 83       	std	Z+6, r22	; 0x06
	
	if (data_length >= MAX_BUF_SIZE){
     410:	60 3e       	cpi	r22, 0xE0	; 224
     412:	71 40       	sbci	r23, 0x01	; 1
     414:	88 f1       	brcs	.+98     	; 0x478 <__FUSE_REGION_LENGTH__+0x78>
		data_length = MAX_BUF_SIZE;
     416:	c0 ee       	ldi	r28, 0xE0	; 224
     418:	d1 e0       	ldi	r29, 0x01	; 1
     41a:	80 e0       	ldi	r24, 0x00	; 0
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	fa 01       	movw	r30, r20
     420:	e8 0f       	add	r30, r24
     422:	f9 1f       	adc	r31, r25
	}
	if(data_length >0){
		for(uint16_t i = 0; i<data_length; i++)
			G_txBuf485.buffer[7+i] = data[i];
     424:	20 81       	ld	r18, Z
     426:	fc 01       	movw	r30, r24
     428:	e9 53       	subi	r30, 0x39	; 57
     42a:	f6 4f       	sbci	r31, 0xF6	; 246
     42c:	20 83       	st	Z, r18
	
	if (data_length >= MAX_BUF_SIZE){
		data_length = MAX_BUF_SIZE;
	}
	if(data_length >0){
		for(uint16_t i = 0; i<data_length; i++)
     42e:	01 96       	adiw	r24, 0x01	; 1
     430:	8c 17       	cp	r24, r28
     432:	9d 07       	cpc	r25, r29
     434:	a0 f3       	brcs	.-24     	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
			G_txBuf485.buffer[7+i] = data[i];
	}


	G_txBuf485.length = 7 + data_length+4;
     436:	ce 01       	movw	r24, r28
     438:	0b 96       	adiw	r24, 0x0b	; 11
     43a:	90 93 a1 0b 	sts	0x0BA1, r25	; 0x800ba1 <G_txBuf485+0x1e1>
     43e:	80 93 a0 0b 	sts	0x0BA0, r24	; 0x800ba0 <G_txBuf485+0x1e0>
	uint16_t crcLength = data_length + 4;
	uint16_t crc = crcsum(G_txBuf485.buffer+3, crcLength,  CRC_INIT);
     442:	be 01       	movw	r22, r28
     444:	6c 5f       	subi	r22, 0xFC	; 252
     446:	7f 4f       	sbci	r23, 0xFF	; 255
     448:	4f ef       	ldi	r20, 0xFF	; 255
     44a:	5f ef       	ldi	r21, 0xFF	; 255
     44c:	83 ec       	ldi	r24, 0xC3	; 195
     44e:	99 e0       	ldi	r25, 0x09	; 9
     450:	9e de       	rcall	.-708    	; 0x18e <crcsum>
	
	G_txBuf485.buffer[data_length + 7] = (uint8_t)(crc >> 8);
     452:	fe 01       	movw	r30, r28
     454:	e9 53       	subi	r30, 0x39	; 57
     456:	f6 4f       	sbci	r31, 0xF6	; 246
     458:	90 83       	st	Z, r25
	G_txBuf485.buffer[data_length + 8] = (uint8_t)(crc & 0x00ff);
     45a:	fe 01       	movw	r30, r28
     45c:	e8 53       	subi	r30, 0x38	; 56
     45e:	f6 4f       	sbci	r31, 0xF6	; 246
     460:	80 83       	st	Z, r24
	G_txBuf485.buffer[data_length + 9] = 0;
     462:	fe 01       	movw	r30, r28
     464:	e7 53       	subi	r30, 0x37	; 55
     466:	f6 4f       	sbci	r31, 0xF6	; 246
     468:	10 82       	st	Z, r1
	G_txBuf485.buffer[data_length + 10] = 0;
     46a:	c6 53       	subi	r28, 0x36	; 54
     46c:	d6 4f       	sbci	r29, 0xF6	; 246
     46e:	18 82       	st	Y, r1
	
	
	//TIMSK &= ~(1<<TOIE2);
	UCSR0B &= ~(1<<RXCIE0);
     470:	57 98       	cbi	0x0a, 7	; 10
	PORTE &= ~(1<<PE2);//PORTE = (0<<PE7)|(0<<PE6)|(0<<PE5)|(0<<PE4)|(0<<PE3)|(0<<PE2)|(0<<PE1)|(0<<PE0); // Tx : PE2 low / Rx : PE2 hi
     472:	1a 98       	cbi	0x03, 2	; 3
	UCSR0B |=  (1<<UDRIE0);
     474:	55 9a       	sbi	0x0a, 5	; 10
}
     476:	03 c0       	rjmp	.+6      	; 0x47e <__FUSE_REGION_LENGTH__+0x7e>
	G_txBuf485.buffer[6] = (uint8_t)(data_length & 0x00FF);
	
	if (data_length >= MAX_BUF_SIZE){
		data_length = MAX_BUF_SIZE;
	}
	if(data_length >0){
     478:	20 97       	sbiw	r28, 0x00	; 0
     47a:	e9 f2       	breq	.-70     	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
     47c:	ce cf       	rjmp	.-100    	; 0x41a <__FUSE_REGION_LENGTH__+0x1a>
	
	//TIMSK &= ~(1<<TOIE2);
	UCSR0B &= ~(1<<RXCIE0);
	PORTE &= ~(1<<PE2);//PORTE = (0<<PE7)|(0<<PE6)|(0<<PE5)|(0<<PE4)|(0<<PE3)|(0<<PE2)|(0<<PE1)|(0<<PE0); // Tx : PE2 low / Rx : PE2 hi
	UCSR0B |=  (1<<UDRIE0);
}
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <SCMPLCF_PLCTxTimerInit>:
#ifndef SCM_FUNCTION_PLC_H_
#define SCM_FUNCTION_PLC_H_

void SCMPLCF_PLCTxTimerInit()
{
	TCCR2 = (0<<CS22)|(0<<CS21)|(0<<CS20);
     484:	15 bc       	out	0x25, r1	; 37
	TIMSK |= (1<<TOIE2);
     486:	87 b7       	in	r24, 0x37	; 55
     488:	80 64       	ori	r24, 0x40	; 64
     48a:	87 bf       	out	0x37, r24	; 55
	TCNT2 = 0;
     48c:	14 bc       	out	0x24, r1	; 36
     48e:	08 95       	ret

00000490 <SCMPLCF_StatusUSMBuffInit>:
}

void SCMPLCF_StatusUSMBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_USM_SIZE; i++)
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	90 e0       	ldi	r25, 0x00	; 0
	{
		G_StatusBufUSMtoSCM[i] = 0;
     494:	fc 01       	movw	r30, r24
     496:	e8 5b       	subi	r30, 0xB8	; 184
     498:	f6 4f       	sbci	r31, 0xF6	; 246
     49a:	10 82       	st	Z, r1
		G_usmStatusBuffer[i] = 0;
     49c:	fc 01       	movw	r30, r24
     49e:	ec 50       	subi	r30, 0x0C	; 12
     4a0:	f0 4f       	sbci	r31, 0xF0	; 240
     4a2:	10 82       	st	Z, r1
		//G_preusmStatusBuffer[i] = 0;
		G_usmPLCInterruptF[i] = 0;
     4a4:	fc 01       	movw	r30, r24
     4a6:	ef 55       	subi	r30, 0x5F	; 95
     4a8:	f7 4f       	sbci	r31, 0xF7	; 247
     4aa:	10 82       	st	Z, r1
}

void SCMPLCF_StatusUSMBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_USM_SIZE; i++)
     4ac:	01 96       	adiw	r24, 0x01	; 1
     4ae:	88 37       	cpi	r24, 0x78	; 120
     4b0:	91 05       	cpc	r25, r1
     4b2:	81 f7       	brne	.-32     	; 0x494 <SCMPLCF_StatusUSMBuffInit+0x4>
		G_StatusBufUSMtoSCM[i] = 0;
		G_usmStatusBuffer[i] = 0;
		//G_preusmStatusBuffer[i] = 0;
		G_usmPLCInterruptF[i] = 0;
	}
	G_StatusBufUSMtoSCM[0]= G_totalUSMCnt;
     4b4:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
     4b8:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <G_StatusBufUSMtoSCM>
     4bc:	08 95       	ret

000004be <SCMPLCF_StatusLGMBuffInit>:
}
void SCMPLCF_StatusLGMBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_LGM_SIZE; i++)
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	90 e0       	ldi	r25, 0x00	; 0
	{
		G_StatusBufLGMtoSCM[i] = 0;
     4c2:	fc 01       	movw	r30, r24
     4c4:	e0 5e       	subi	r30, 0xE0	; 224
     4c6:	f6 4f       	sbci	r31, 0xF6	; 246
     4c8:	10 82       	st	Z, r1
		G_lgmStatusBuf[i] = 0;
     4ca:	fc 01       	movw	r30, r24
     4cc:	ec 55       	subi	r30, 0x5C	; 92
     4ce:	f4 4f       	sbci	r31, 0xF4	; 244
     4d0:	10 82       	st	Z, r1
	G_StatusBufUSMtoSCM[0]= G_totalUSMCnt;
}
void SCMPLCF_StatusLGMBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_LGM_SIZE; i++)
     4d2:	01 96       	adiw	r24, 0x01	; 1
     4d4:	88 32       	cpi	r24, 0x28	; 40
     4d6:	91 05       	cpc	r25, r1
     4d8:	a1 f7       	brne	.-24     	; 0x4c2 <SCMPLCF_StatusLGMBuffInit+0x4>
	{
		G_StatusBufLGMtoSCM[i] = 0;
		G_lgmStatusBuf[i] = 0;
	}
	G_StatusBufLGMtoSCM[0]= G_totalLGMCnt;
     4da:	80 91 99 08 	lds	r24, 0x0899	; 0x800899 <G_totalLGMCnt>
     4de:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <G_StatusBufLGMtoSCM>
     4e2:	08 95       	ret

000004e4 <SCMPLCF_lgmStatusBuffInit>:
}

void SCMPLCF_lgmStatusBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_LGM_SIZE; i++)
     4e4:	80 e0       	ldi	r24, 0x00	; 0
     4e6:	90 e0       	ldi	r25, 0x00	; 0
	{
		G_lgmStatusCnt[i] = 0;
     4e8:	fc 01       	movw	r30, r24
     4ea:	ea 54       	subi	r30, 0x4A	; 74
     4ec:	f2 4f       	sbci	r31, 0xF2	; 242
     4ee:	10 82       	st	Z, r1
}

void SCMPLCF_lgmStatusBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_LGM_SIZE; i++)
     4f0:	01 96       	adiw	r24, 0x01	; 1
     4f2:	88 32       	cpi	r24, 0x28	; 40
     4f4:	91 05       	cpc	r25, r1
     4f6:	c1 f7       	brne	.-16     	; 0x4e8 <SCMPLCF_lgmStatusBuffInit+0x4>
	{
		G_lgmStatusCnt[i] = 0;
	}
}
     4f8:	08 95       	ret

000004fa <SCMPLCF_lgmTotalCntBuffInit>:

void SCMPLCF_lgmTotalCntBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_LGM_SIZE; i++)
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	90 e0       	ldi	r25, 0x00	; 0
	{
		G_lgmTotalCnt[i] = 0;
     4fe:	fc 01       	movw	r30, r24
     500:	e1 52       	subi	r30, 0x21	; 33
     502:	f2 4f       	sbci	r31, 0xF2	; 242
     504:	10 82       	st	Z, r1
}

void SCMPLCF_lgmTotalCntBuffInit()
{
	uint16_t i;
	for(i=0; i<MAX_LGM_SIZE; i++)
     506:	01 96       	adiw	r24, 0x01	; 1
     508:	88 32       	cpi	r24, 0x28	; 40
     50a:	91 05       	cpc	r25, r1
     50c:	c1 f7       	brne	.-16     	; 0x4fe <SCMPLCF_lgmTotalCntBuffInit+0x4>
	{
		G_lgmTotalCnt[i] = 0;
	}
}
     50e:	08 95       	ret

00000510 <SCMPLCF_SendMessageAddPacket>:

void SCMPLCF_SendMessageAddPacket(PLCTxAddPacket message)
{
     510:	2f 92       	push	r2
     512:	3f 92       	push	r3
     514:	4f 92       	push	r4
     516:	5f 92       	push	r5
     518:	6f 92       	push	r6
     51a:	7f 92       	push	r7
     51c:	8f 92       	push	r8
     51e:	9f 92       	push	r9
     520:	af 92       	push	r10
     522:	bf 92       	push	r11
     524:	cf 92       	push	r12
     526:	df 92       	push	r13
     528:	ef 92       	push	r14
     52a:	ff 92       	push	r15
     52c:	0f 93       	push	r16
     52e:	1f 93       	push	r17
     530:	cf 93       	push	r28
     532:	df 93       	push	r29
     534:	cd b7       	in	r28, 0x3d	; 61
     536:	de b7       	in	r29, 0x3e	; 62
     538:	e0 97       	sbiw	r28, 0x30	; 48
     53a:	0f b6       	in	r0, 0x3f	; 63
     53c:	f8 94       	cli
     53e:	de bf       	out	0x3e, r29	; 62
     540:	0f be       	out	0x3f, r0	; 63
     542:	cd bf       	out	0x3d, r28	; 61
     544:	4e a7       	std	Y+46, r20	; 0x2e
     546:	49 83       	std	Y+1, r20	; 0x01
     548:	5f a7       	std	Y+47, r21	; 0x2f
     54a:	5a 83       	std	Y+2, r21	; 0x02
     54c:	68 ab       	std	Y+48, r22	; 0x30
     54e:	6b 83       	std	Y+3, r22	; 0x03
     550:	7c 83       	std	Y+4, r23	; 0x04
     552:	8d 83       	std	Y+5, r24	; 0x05
	uint8_t mask = 0x01;
	uint8_t bitvalue;
	
	PLC_TX_BIT(0,PLC_TX_DELAY,mask,bitvalue);
     554:	94 e8       	ldi	r25, 0x84	; 132
     556:	93 b9       	out	0x03, r25	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     558:	e9 e2       	ldi	r30, 0x29	; 41
     55a:	f2 e0       	ldi	r31, 0x02	; 2
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	f1 f7       	brne	.-4      	; 0x55c <SCMPLCF_SendMessageAddPacket+0x4c>
     560:	00 c0       	rjmp	.+0      	; 0x562 <SCMPLCF_SendMessageAddPacket+0x52>
     562:	00 00       	nop
	
	PLC_TX_BIT(0,PLC_TX_DELAY,message.type,bitvalue);
     564:	40 fb       	bst	r20, 0
     566:	88 24       	eor	r8, r8
     568:	80 f8       	bld	r8, 0
     56a:	91 2c       	mov	r9, r1
     56c:	96 94       	lsr	r9
     56e:	98 2c       	mov	r9, r8
     570:	88 24       	eor	r8, r8
     572:	97 94       	ror	r9
     574:	87 94       	ror	r8
     576:	98 2d       	mov	r25, r8
     578:	94 60       	ori	r25, 0x04	; 4
     57a:	93 b9       	out	0x03, r25	; 3
     57c:	e9 e2       	ldi	r30, 0x29	; 41
     57e:	f2 e0       	ldi	r31, 0x02	; 2
     580:	31 97       	sbiw	r30, 0x01	; 1
     582:	f1 f7       	brne	.-4      	; 0x580 <SCMPLCF_SendMessageAddPacket+0x70>
     584:	00 c0       	rjmp	.+0      	; 0x586 <SCMPLCF_SendMessageAddPacket+0x76>
     586:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.type,bitvalue);
     588:	41 fb       	bst	r20, 1
     58a:	aa 24       	eor	r10, r10
     58c:	a0 f8       	bld	r10, 0
     58e:	b1 2c       	mov	r11, r1
     590:	b6 94       	lsr	r11
     592:	ba 2c       	mov	r11, r10
     594:	aa 24       	eor	r10, r10
     596:	b7 94       	ror	r11
     598:	a7 94       	ror	r10
     59a:	9a 2d       	mov	r25, r10
     59c:	94 60       	ori	r25, 0x04	; 4
     59e:	93 b9       	out	0x03, r25	; 3
     5a0:	e9 e2       	ldi	r30, 0x29	; 41
     5a2:	f2 e0       	ldi	r31, 0x02	; 2
     5a4:	31 97       	sbiw	r30, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <SCMPLCF_SendMessageAddPacket+0x94>
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <SCMPLCF_SendMessageAddPacket+0x9a>
     5aa:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.type,bitvalue);
     5ac:	42 fb       	bst	r20, 2
     5ae:	cc 24       	eor	r12, r12
     5b0:	c0 f8       	bld	r12, 0
     5b2:	d1 2c       	mov	r13, r1
     5b4:	d6 94       	lsr	r13
     5b6:	dc 2c       	mov	r13, r12
     5b8:	cc 24       	eor	r12, r12
     5ba:	d7 94       	ror	r13
     5bc:	c7 94       	ror	r12
     5be:	9c 2d       	mov	r25, r12
     5c0:	94 60       	ori	r25, 0x04	; 4
     5c2:	93 b9       	out	0x03, r25	; 3
     5c4:	e9 e2       	ldi	r30, 0x29	; 41
     5c6:	f2 e0       	ldi	r31, 0x02	; 2
     5c8:	31 97       	sbiw	r30, 0x01	; 1
     5ca:	f1 f7       	brne	.-4      	; 0x5c8 <SCMPLCF_SendMessageAddPacket+0xb8>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <SCMPLCF_SendMessageAddPacket+0xbe>
     5ce:	00 00       	nop

	PLC_TX_BIT(0,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     5d0:	50 fb       	bst	r21, 0
     5d2:	ee 24       	eor	r14, r14
     5d4:	e0 f8       	bld	r14, 0
     5d6:	f1 2c       	mov	r15, r1
     5d8:	f6 94       	lsr	r15
     5da:	fe 2c       	mov	r15, r14
     5dc:	ee 24       	eor	r14, r14
     5de:	f7 94       	ror	r15
     5e0:	e7 94       	ror	r14
     5e2:	9e 2d       	mov	r25, r14
     5e4:	94 60       	ori	r25, 0x04	; 4
     5e6:	93 b9       	out	0x03, r25	; 3
     5e8:	e9 e2       	ldi	r30, 0x29	; 41
     5ea:	f2 e0       	ldi	r31, 0x02	; 2
     5ec:	31 97       	sbiw	r30, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <SCMPLCF_SendMessageAddPacket+0xdc>
     5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <SCMPLCF_SendMessageAddPacket+0xe2>
     5f2:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     5f4:	51 fb       	bst	r21, 1
     5f6:	00 27       	eor	r16, r16
     5f8:	00 f9       	bld	r16, 0
     5fa:	10 e0       	ldi	r17, 0x00	; 0
     5fc:	16 95       	lsr	r17
     5fe:	10 2f       	mov	r17, r16
     600:	00 27       	eor	r16, r16
     602:	17 95       	ror	r17
     604:	07 95       	ror	r16
     606:	04 60       	ori	r16, 0x04	; 4
     608:	03 b9       	out	0x03, r16	; 3
     60a:	e9 e2       	ldi	r30, 0x29	; 41
     60c:	f2 e0       	ldi	r31, 0x02	; 2
     60e:	31 97       	sbiw	r30, 0x01	; 1
     610:	f1 f7       	brne	.-4      	; 0x60e <SCMPLCF_SendMessageAddPacket+0xfe>
     612:	00 c0       	rjmp	.+0      	; 0x614 <SCMPLCF_SendMessageAddPacket+0x104>
     614:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     616:	52 fb       	bst	r21, 2
     618:	aa 27       	eor	r26, r26
     61a:	a0 f9       	bld	r26, 0
     61c:	b0 e0       	ldi	r27, 0x00	; 0
     61e:	b6 95       	lsr	r27
     620:	ba 2f       	mov	r27, r26
     622:	aa 27       	eor	r26, r26
     624:	b7 95       	ror	r27
     626:	a7 95       	ror	r26
     628:	a4 60       	ori	r26, 0x04	; 4
     62a:	a3 b9       	out	0x03, r26	; 3
     62c:	e9 e2       	ldi	r30, 0x29	; 41
     62e:	f2 e0       	ldi	r31, 0x02	; 2
     630:	31 97       	sbiw	r30, 0x01	; 1
     632:	f1 f7       	brne	.-4      	; 0x630 <SCMPLCF_SendMessageAddPacket+0x120>
     634:	00 c0       	rjmp	.+0      	; 0x636 <SCMPLCF_SendMessageAddPacket+0x126>
     636:	00 00       	nop
	PLC_TX_BIT(3,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     638:	53 fb       	bst	r21, 3
     63a:	ee 27       	eor	r30, r30
     63c:	e0 f9       	bld	r30, 0
     63e:	f0 e0       	ldi	r31, 0x00	; 0
     640:	f6 95       	lsr	r31
     642:	fe 2f       	mov	r31, r30
     644:	ee 27       	eor	r30, r30
     646:	f7 95       	ror	r31
     648:	e7 95       	ror	r30
     64a:	e4 60       	ori	r30, 0x04	; 4
     64c:	e3 b9       	out	0x03, r30	; 3
     64e:	e9 e2       	ldi	r30, 0x29	; 41
     650:	f2 e0       	ldi	r31, 0x02	; 2
     652:	31 97       	sbiw	r30, 0x01	; 1
     654:	f1 f7       	brne	.-4      	; 0x652 <SCMPLCF_SendMessageAddPacket+0x142>
     656:	00 c0       	rjmp	.+0      	; 0x658 <SCMPLCF_SendMessageAddPacket+0x148>
     658:	00 00       	nop
	PLC_TX_BIT(4,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     65a:	54 fb       	bst	r21, 4
     65c:	22 27       	eor	r18, r18
     65e:	20 f9       	bld	r18, 0
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	36 95       	lsr	r19
     664:	32 2f       	mov	r19, r18
     666:	22 27       	eor	r18, r18
     668:	37 95       	ror	r19
     66a:	27 95       	ror	r18
     66c:	24 60       	ori	r18, 0x04	; 4
     66e:	23 b9       	out	0x03, r18	; 3
     670:	e9 e2       	ldi	r30, 0x29	; 41
     672:	f2 e0       	ldi	r31, 0x02	; 2
     674:	31 97       	sbiw	r30, 0x01	; 1
     676:	f1 f7       	brne	.-4      	; 0x674 <SCMPLCF_SendMessageAddPacket+0x164>
     678:	00 c0       	rjmp	.+0      	; 0x67a <SCMPLCF_SendMessageAddPacket+0x16a>
     67a:	00 00       	nop
	PLC_TX_BIT(5,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     67c:	55 fb       	bst	r21, 5
     67e:	66 24       	eor	r6, r6
     680:	60 f8       	bld	r6, 0
     682:	71 2c       	mov	r7, r1
     684:	93 01       	movw	r18, r6
     686:	36 95       	lsr	r19
     688:	32 2f       	mov	r19, r18
     68a:	22 27       	eor	r18, r18
     68c:	37 95       	ror	r19
     68e:	27 95       	ror	r18
     690:	92 2f       	mov	r25, r18
     692:	94 60       	ori	r25, 0x04	; 4
     694:	93 b9       	out	0x03, r25	; 3
     696:	e9 e2       	ldi	r30, 0x29	; 41
     698:	f2 e0       	ldi	r31, 0x02	; 2
     69a:	31 97       	sbiw	r30, 0x01	; 1
     69c:	f1 f7       	brne	.-4      	; 0x69a <SCMPLCF_SendMessageAddPacket+0x18a>
     69e:	00 c0       	rjmp	.+0      	; 0x6a0 <SCMPLCF_SendMessageAddPacket+0x190>
     6a0:	00 00       	nop
	PLC_TX_BIT(6,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     6a2:	56 fb       	bst	r21, 6
     6a4:	ff 27       	eor	r31, r31
     6a6:	f0 f9       	bld	r31, 0
     6a8:	fe 83       	std	Y+6, r31	; 0x06
     6aa:	1f 82       	std	Y+7, r1	; 0x07
     6ac:	2e 81       	ldd	r18, Y+6	; 0x06
     6ae:	3f 81       	ldd	r19, Y+7	; 0x07
     6b0:	36 95       	lsr	r19
     6b2:	32 2f       	mov	r19, r18
     6b4:	22 27       	eor	r18, r18
     6b6:	37 95       	ror	r19
     6b8:	27 95       	ror	r18
     6ba:	24 60       	ori	r18, 0x04	; 4
     6bc:	23 b9       	out	0x03, r18	; 3
     6be:	e9 e2       	ldi	r30, 0x29	; 41
     6c0:	f2 e0       	ldi	r31, 0x02	; 2
     6c2:	31 97       	sbiw	r30, 0x01	; 1
     6c4:	f1 f7       	brne	.-4      	; 0x6c2 <SCMPLCF_SendMessageAddPacket+0x1b2>
     6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <SCMPLCF_SendMessageAddPacket+0x1b8>
     6c8:	00 00       	nop
	PLC_TX_BIT(7,PLC_TX_DELAY,message.SerialNumber[0],bitvalue);
     6ca:	55 1f       	adc	r21, r21
     6cc:	55 27       	eor	r21, r21
     6ce:	55 1f       	adc	r21, r21
     6d0:	25 2f       	mov	r18, r21
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	36 95       	lsr	r19
     6d6:	32 2f       	mov	r19, r18
     6d8:	22 27       	eor	r18, r18
     6da:	37 95       	ror	r19
     6dc:	27 95       	ror	r18
     6de:	24 60       	ori	r18, 0x04	; 4
     6e0:	23 b9       	out	0x03, r18	; 3
     6e2:	e9 e2       	ldi	r30, 0x29	; 41
     6e4:	f2 e0       	ldi	r31, 0x02	; 2
     6e6:	31 97       	sbiw	r30, 0x01	; 1
     6e8:	f1 f7       	brne	.-4      	; 0x6e6 <SCMPLCF_SendMessageAddPacket+0x1d6>
     6ea:	00 c0       	rjmp	.+0      	; 0x6ec <SCMPLCF_SendMessageAddPacket+0x1dc>
     6ec:	00 00       	nop
	
	PLC_TX_BIT(0,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     6ee:	f6 2f       	mov	r31, r22
     6f0:	f1 70       	andi	r31, 0x01	; 1
     6f2:	f8 87       	std	Y+8, r31	; 0x08
     6f4:	19 86       	std	Y+9, r1	; 0x09
     6f6:	28 85       	ldd	r18, Y+8	; 0x08
     6f8:	39 85       	ldd	r19, Y+9	; 0x09
     6fa:	36 95       	lsr	r19
     6fc:	32 2f       	mov	r19, r18
     6fe:	22 27       	eor	r18, r18
     700:	37 95       	ror	r19
     702:	27 95       	ror	r18
     704:	24 60       	ori	r18, 0x04	; 4
     706:	23 b9       	out	0x03, r18	; 3
     708:	e9 e2       	ldi	r30, 0x29	; 41
     70a:	f2 e0       	ldi	r31, 0x02	; 2
     70c:	31 97       	sbiw	r30, 0x01	; 1
     70e:	f1 f7       	brne	.-4      	; 0x70c <SCMPLCF_SendMessageAddPacket+0x1fc>
     710:	00 c0       	rjmp	.+0      	; 0x712 <SCMPLCF_SendMessageAddPacket+0x202>
     712:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     714:	61 fb       	bst	r22, 1
     716:	ff 27       	eor	r31, r31
     718:	f0 f9       	bld	r31, 0
     71a:	fa 87       	std	Y+10, r31	; 0x0a
     71c:	1b 86       	std	Y+11, r1	; 0x0b
     71e:	2a 85       	ldd	r18, Y+10	; 0x0a
     720:	3b 85       	ldd	r19, Y+11	; 0x0b
     722:	36 95       	lsr	r19
     724:	32 2f       	mov	r19, r18
     726:	22 27       	eor	r18, r18
     728:	37 95       	ror	r19
     72a:	27 95       	ror	r18
     72c:	24 60       	ori	r18, 0x04	; 4
     72e:	23 b9       	out	0x03, r18	; 3
     730:	e9 e2       	ldi	r30, 0x29	; 41
     732:	f2 e0       	ldi	r31, 0x02	; 2
     734:	31 97       	sbiw	r30, 0x01	; 1
     736:	f1 f7       	brne	.-4      	; 0x734 <SCMPLCF_SendMessageAddPacket+0x224>
     738:	00 c0       	rjmp	.+0      	; 0x73a <SCMPLCF_SendMessageAddPacket+0x22a>
     73a:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     73c:	62 fb       	bst	r22, 2
     73e:	ff 27       	eor	r31, r31
     740:	f0 f9       	bld	r31, 0
     742:	fc 87       	std	Y+12, r31	; 0x0c
     744:	1d 86       	std	Y+13, r1	; 0x0d
     746:	2c 85       	ldd	r18, Y+12	; 0x0c
     748:	3d 85       	ldd	r19, Y+13	; 0x0d
     74a:	36 95       	lsr	r19
     74c:	32 2f       	mov	r19, r18
     74e:	22 27       	eor	r18, r18
     750:	37 95       	ror	r19
     752:	27 95       	ror	r18
     754:	24 60       	ori	r18, 0x04	; 4
     756:	23 b9       	out	0x03, r18	; 3
     758:	e9 e2       	ldi	r30, 0x29	; 41
     75a:	f2 e0       	ldi	r31, 0x02	; 2
     75c:	31 97       	sbiw	r30, 0x01	; 1
     75e:	f1 f7       	brne	.-4      	; 0x75c <SCMPLCF_SendMessageAddPacket+0x24c>
     760:	00 c0       	rjmp	.+0      	; 0x762 <SCMPLCF_SendMessageAddPacket+0x252>
     762:	00 00       	nop
	PLC_TX_BIT(3,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     764:	63 fb       	bst	r22, 3
     766:	ff 27       	eor	r31, r31
     768:	f0 f9       	bld	r31, 0
     76a:	fe 87       	std	Y+14, r31	; 0x0e
     76c:	1f 86       	std	Y+15, r1	; 0x0f
     76e:	2e 85       	ldd	r18, Y+14	; 0x0e
     770:	3f 85       	ldd	r19, Y+15	; 0x0f
     772:	36 95       	lsr	r19
     774:	32 2f       	mov	r19, r18
     776:	22 27       	eor	r18, r18
     778:	37 95       	ror	r19
     77a:	27 95       	ror	r18
     77c:	24 60       	ori	r18, 0x04	; 4
     77e:	23 b9       	out	0x03, r18	; 3
     780:	e9 e2       	ldi	r30, 0x29	; 41
     782:	f2 e0       	ldi	r31, 0x02	; 2
     784:	31 97       	sbiw	r30, 0x01	; 1
     786:	f1 f7       	brne	.-4      	; 0x784 <SCMPLCF_SendMessageAddPacket+0x274>
     788:	00 c0       	rjmp	.+0      	; 0x78a <SCMPLCF_SendMessageAddPacket+0x27a>
     78a:	00 00       	nop
	PLC_TX_BIT(4,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     78c:	64 fb       	bst	r22, 4
     78e:	ff 27       	eor	r31, r31
     790:	f0 f9       	bld	r31, 0
     792:	f8 8b       	std	Y+16, r31	; 0x10
     794:	19 8a       	std	Y+17, r1	; 0x11
     796:	28 89       	ldd	r18, Y+16	; 0x10
     798:	39 89       	ldd	r19, Y+17	; 0x11
     79a:	36 95       	lsr	r19
     79c:	32 2f       	mov	r19, r18
     79e:	22 27       	eor	r18, r18
     7a0:	37 95       	ror	r19
     7a2:	27 95       	ror	r18
     7a4:	24 60       	ori	r18, 0x04	; 4
     7a6:	23 b9       	out	0x03, r18	; 3
     7a8:	e9 e2       	ldi	r30, 0x29	; 41
     7aa:	f2 e0       	ldi	r31, 0x02	; 2
     7ac:	31 97       	sbiw	r30, 0x01	; 1
     7ae:	f1 f7       	brne	.-4      	; 0x7ac <SCMPLCF_SendMessageAddPacket+0x29c>
     7b0:	00 c0       	rjmp	.+0      	; 0x7b2 <SCMPLCF_SendMessageAddPacket+0x2a2>
     7b2:	00 00       	nop
	PLC_TX_BIT(5,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     7b4:	65 fb       	bst	r22, 5
     7b6:	ff 27       	eor	r31, r31
     7b8:	f0 f9       	bld	r31, 0
     7ba:	fa 8b       	std	Y+18, r31	; 0x12
     7bc:	1b 8a       	std	Y+19, r1	; 0x13
     7be:	2a 89       	ldd	r18, Y+18	; 0x12
     7c0:	3b 89       	ldd	r19, Y+19	; 0x13
     7c2:	36 95       	lsr	r19
     7c4:	32 2f       	mov	r19, r18
     7c6:	22 27       	eor	r18, r18
     7c8:	37 95       	ror	r19
     7ca:	27 95       	ror	r18
     7cc:	24 60       	ori	r18, 0x04	; 4
     7ce:	23 b9       	out	0x03, r18	; 3
     7d0:	e9 e2       	ldi	r30, 0x29	; 41
     7d2:	f2 e0       	ldi	r31, 0x02	; 2
     7d4:	31 97       	sbiw	r30, 0x01	; 1
     7d6:	f1 f7       	brne	.-4      	; 0x7d4 <SCMPLCF_SendMessageAddPacket+0x2c4>
     7d8:	00 c0       	rjmp	.+0      	; 0x7da <SCMPLCF_SendMessageAddPacket+0x2ca>
     7da:	00 00       	nop
	PLC_TX_BIT(6,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     7dc:	66 fb       	bst	r22, 6
     7de:	ff 27       	eor	r31, r31
     7e0:	f0 f9       	bld	r31, 0
     7e2:	fc 8b       	std	Y+20, r31	; 0x14
     7e4:	1d 8a       	std	Y+21, r1	; 0x15
     7e6:	2c 89       	ldd	r18, Y+20	; 0x14
     7e8:	3d 89       	ldd	r19, Y+21	; 0x15
     7ea:	36 95       	lsr	r19
     7ec:	32 2f       	mov	r19, r18
     7ee:	22 27       	eor	r18, r18
     7f0:	37 95       	ror	r19
     7f2:	27 95       	ror	r18
     7f4:	24 60       	ori	r18, 0x04	; 4
     7f6:	23 b9       	out	0x03, r18	; 3
     7f8:	e9 e2       	ldi	r30, 0x29	; 41
     7fa:	f2 e0       	ldi	r31, 0x02	; 2
     7fc:	31 97       	sbiw	r30, 0x01	; 1
     7fe:	f1 f7       	brne	.-4      	; 0x7fc <SCMPLCF_SendMessageAddPacket+0x2ec>
     800:	00 c0       	rjmp	.+0      	; 0x802 <SCMPLCF_SendMessageAddPacket+0x2f2>
     802:	00 00       	nop
	PLC_TX_BIT(7,PLC_TX_DELAY,message.SerialNumber[1],bitvalue);
     804:	66 1f       	adc	r22, r22
     806:	66 27       	eor	r22, r22
     808:	66 1f       	adc	r22, r22
     80a:	26 2f       	mov	r18, r22
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	36 95       	lsr	r19
     810:	32 2f       	mov	r19, r18
     812:	22 27       	eor	r18, r18
     814:	37 95       	ror	r19
     816:	27 95       	ror	r18
     818:	24 60       	ori	r18, 0x04	; 4
     81a:	23 b9       	out	0x03, r18	; 3
     81c:	e9 e2       	ldi	r30, 0x29	; 41
     81e:	f2 e0       	ldi	r31, 0x02	; 2
     820:	31 97       	sbiw	r30, 0x01	; 1
     822:	f1 f7       	brne	.-4      	; 0x820 <SCMPLCF_SendMessageAddPacket+0x310>
     824:	00 c0       	rjmp	.+0      	; 0x826 <SCMPLCF_SendMessageAddPacket+0x316>
     826:	00 00       	nop
	
	PLC_TX_BIT(0,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     828:	f7 2f       	mov	r31, r23
     82a:	f1 70       	andi	r31, 0x01	; 1
     82c:	fe 8b       	std	Y+22, r31	; 0x16
     82e:	1f 8a       	std	Y+23, r1	; 0x17
     830:	2e 89       	ldd	r18, Y+22	; 0x16
     832:	3f 89       	ldd	r19, Y+23	; 0x17
     834:	36 95       	lsr	r19
     836:	32 2f       	mov	r19, r18
     838:	22 27       	eor	r18, r18
     83a:	37 95       	ror	r19
     83c:	27 95       	ror	r18
     83e:	24 60       	ori	r18, 0x04	; 4
     840:	23 b9       	out	0x03, r18	; 3
     842:	e9 e2       	ldi	r30, 0x29	; 41
     844:	f2 e0       	ldi	r31, 0x02	; 2
     846:	31 97       	sbiw	r30, 0x01	; 1
     848:	f1 f7       	brne	.-4      	; 0x846 <SCMPLCF_SendMessageAddPacket+0x336>
     84a:	00 c0       	rjmp	.+0      	; 0x84c <SCMPLCF_SendMessageAddPacket+0x33c>
     84c:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     84e:	71 fb       	bst	r23, 1
     850:	ff 27       	eor	r31, r31
     852:	f0 f9       	bld	r31, 0
     854:	f8 8f       	std	Y+24, r31	; 0x18
     856:	19 8e       	std	Y+25, r1	; 0x19
     858:	28 8d       	ldd	r18, Y+24	; 0x18
     85a:	39 8d       	ldd	r19, Y+25	; 0x19
     85c:	36 95       	lsr	r19
     85e:	32 2f       	mov	r19, r18
     860:	22 27       	eor	r18, r18
     862:	37 95       	ror	r19
     864:	27 95       	ror	r18
     866:	24 60       	ori	r18, 0x04	; 4
     868:	23 b9       	out	0x03, r18	; 3
     86a:	e9 e2       	ldi	r30, 0x29	; 41
     86c:	f2 e0       	ldi	r31, 0x02	; 2
     86e:	31 97       	sbiw	r30, 0x01	; 1
     870:	f1 f7       	brne	.-4      	; 0x86e <SCMPLCF_SendMessageAddPacket+0x35e>
     872:	00 c0       	rjmp	.+0      	; 0x874 <SCMPLCF_SendMessageAddPacket+0x364>
     874:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     876:	72 fb       	bst	r23, 2
     878:	ff 27       	eor	r31, r31
     87a:	f0 f9       	bld	r31, 0
     87c:	fa 8f       	std	Y+26, r31	; 0x1a
     87e:	1b 8e       	std	Y+27, r1	; 0x1b
     880:	2a 8d       	ldd	r18, Y+26	; 0x1a
     882:	3b 8d       	ldd	r19, Y+27	; 0x1b
     884:	36 95       	lsr	r19
     886:	32 2f       	mov	r19, r18
     888:	22 27       	eor	r18, r18
     88a:	37 95       	ror	r19
     88c:	27 95       	ror	r18
     88e:	24 60       	ori	r18, 0x04	; 4
     890:	23 b9       	out	0x03, r18	; 3
     892:	e9 e2       	ldi	r30, 0x29	; 41
     894:	f2 e0       	ldi	r31, 0x02	; 2
     896:	31 97       	sbiw	r30, 0x01	; 1
     898:	f1 f7       	brne	.-4      	; 0x896 <SCMPLCF_SendMessageAddPacket+0x386>
     89a:	00 c0       	rjmp	.+0      	; 0x89c <SCMPLCF_SendMessageAddPacket+0x38c>
     89c:	00 00       	nop
	PLC_TX_BIT(3,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     89e:	73 fb       	bst	r23, 3
     8a0:	ff 27       	eor	r31, r31
     8a2:	f0 f9       	bld	r31, 0
     8a4:	fc 8f       	std	Y+28, r31	; 0x1c
     8a6:	1d 8e       	std	Y+29, r1	; 0x1d
     8a8:	2c 8d       	ldd	r18, Y+28	; 0x1c
     8aa:	3d 8d       	ldd	r19, Y+29	; 0x1d
     8ac:	36 95       	lsr	r19
     8ae:	32 2f       	mov	r19, r18
     8b0:	22 27       	eor	r18, r18
     8b2:	37 95       	ror	r19
     8b4:	27 95       	ror	r18
     8b6:	24 60       	ori	r18, 0x04	; 4
     8b8:	23 b9       	out	0x03, r18	; 3
     8ba:	e9 e2       	ldi	r30, 0x29	; 41
     8bc:	f2 e0       	ldi	r31, 0x02	; 2
     8be:	31 97       	sbiw	r30, 0x01	; 1
     8c0:	f1 f7       	brne	.-4      	; 0x8be <SCMPLCF_SendMessageAddPacket+0x3ae>
     8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <SCMPLCF_SendMessageAddPacket+0x3b4>
     8c4:	00 00       	nop
	PLC_TX_BIT(4,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     8c6:	74 fb       	bst	r23, 4
     8c8:	ff 27       	eor	r31, r31
     8ca:	f0 f9       	bld	r31, 0
     8cc:	fe 8f       	std	Y+30, r31	; 0x1e
     8ce:	1f 8e       	std	Y+31, r1	; 0x1f
     8d0:	2e 8d       	ldd	r18, Y+30	; 0x1e
     8d2:	3f 8d       	ldd	r19, Y+31	; 0x1f
     8d4:	36 95       	lsr	r19
     8d6:	32 2f       	mov	r19, r18
     8d8:	22 27       	eor	r18, r18
     8da:	37 95       	ror	r19
     8dc:	27 95       	ror	r18
     8de:	24 60       	ori	r18, 0x04	; 4
     8e0:	23 b9       	out	0x03, r18	; 3
     8e2:	e9 e2       	ldi	r30, 0x29	; 41
     8e4:	f2 e0       	ldi	r31, 0x02	; 2
     8e6:	31 97       	sbiw	r30, 0x01	; 1
     8e8:	f1 f7       	brne	.-4      	; 0x8e6 <SCMPLCF_SendMessageAddPacket+0x3d6>
     8ea:	00 c0       	rjmp	.+0      	; 0x8ec <SCMPLCF_SendMessageAddPacket+0x3dc>
     8ec:	00 00       	nop
	PLC_TX_BIT(5,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     8ee:	75 fb       	bst	r23, 5
     8f0:	ff 27       	eor	r31, r31
     8f2:	f0 f9       	bld	r31, 0
     8f4:	f8 a3       	std	Y+32, r31	; 0x20
     8f6:	19 a2       	std	Y+33, r1	; 0x21
     8f8:	28 a1       	ldd	r18, Y+32	; 0x20
     8fa:	39 a1       	ldd	r19, Y+33	; 0x21
     8fc:	36 95       	lsr	r19
     8fe:	32 2f       	mov	r19, r18
     900:	22 27       	eor	r18, r18
     902:	37 95       	ror	r19
     904:	27 95       	ror	r18
     906:	24 60       	ori	r18, 0x04	; 4
     908:	23 b9       	out	0x03, r18	; 3
     90a:	e9 e2       	ldi	r30, 0x29	; 41
     90c:	f2 e0       	ldi	r31, 0x02	; 2
     90e:	31 97       	sbiw	r30, 0x01	; 1
     910:	f1 f7       	brne	.-4      	; 0x90e <SCMPLCF_SendMessageAddPacket+0x3fe>
     912:	00 c0       	rjmp	.+0      	; 0x914 <SCMPLCF_SendMessageAddPacket+0x404>
     914:	00 00       	nop
	PLC_TX_BIT(6,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     916:	76 fb       	bst	r23, 6
     918:	ff 27       	eor	r31, r31
     91a:	f0 f9       	bld	r31, 0
     91c:	fa a3       	std	Y+34, r31	; 0x22
     91e:	1b a2       	std	Y+35, r1	; 0x23
     920:	2a a1       	ldd	r18, Y+34	; 0x22
     922:	3b a1       	ldd	r19, Y+35	; 0x23
     924:	36 95       	lsr	r19
     926:	32 2f       	mov	r19, r18
     928:	22 27       	eor	r18, r18
     92a:	37 95       	ror	r19
     92c:	27 95       	ror	r18
     92e:	24 60       	ori	r18, 0x04	; 4
     930:	23 b9       	out	0x03, r18	; 3
     932:	e9 e2       	ldi	r30, 0x29	; 41
     934:	f2 e0       	ldi	r31, 0x02	; 2
     936:	31 97       	sbiw	r30, 0x01	; 1
     938:	f1 f7       	brne	.-4      	; 0x936 <SCMPLCF_SendMessageAddPacket+0x426>
     93a:	00 c0       	rjmp	.+0      	; 0x93c <SCMPLCF_SendMessageAddPacket+0x42c>
     93c:	00 00       	nop
	PLC_TX_BIT(7,PLC_TX_DELAY,message.SerialNumber[2],bitvalue);
     93e:	77 1f       	adc	r23, r23
     940:	77 27       	eor	r23, r23
     942:	77 1f       	adc	r23, r23
     944:	27 2f       	mov	r18, r23
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	36 95       	lsr	r19
     94a:	32 2f       	mov	r19, r18
     94c:	22 27       	eor	r18, r18
     94e:	37 95       	ror	r19
     950:	27 95       	ror	r18
     952:	24 60       	ori	r18, 0x04	; 4
     954:	23 b9       	out	0x03, r18	; 3
     956:	e9 e2       	ldi	r30, 0x29	; 41
     958:	f2 e0       	ldi	r31, 0x02	; 2
     95a:	31 97       	sbiw	r30, 0x01	; 1
     95c:	f1 f7       	brne	.-4      	; 0x95a <SCMPLCF_SendMessageAddPacket+0x44a>
     95e:	00 c0       	rjmp	.+0      	; 0x960 <SCMPLCF_SendMessageAddPacket+0x450>
     960:	00 00       	nop


	PLC_TX_BIT(0,PLC_TX_DELAY,message.controlID,bitvalue);
     962:	f8 2f       	mov	r31, r24
     964:	f1 70       	andi	r31, 0x01	; 1
     966:	fc a3       	std	Y+36, r31	; 0x24
     968:	1d a2       	std	Y+37, r1	; 0x25
     96a:	2c a1       	ldd	r18, Y+36	; 0x24
     96c:	3d a1       	ldd	r19, Y+37	; 0x25
     96e:	36 95       	lsr	r19
     970:	32 2f       	mov	r19, r18
     972:	22 27       	eor	r18, r18
     974:	37 95       	ror	r19
     976:	27 95       	ror	r18
     978:	24 60       	ori	r18, 0x04	; 4
     97a:	23 b9       	out	0x03, r18	; 3
     97c:	e9 e2       	ldi	r30, 0x29	; 41
     97e:	f2 e0       	ldi	r31, 0x02	; 2
     980:	31 97       	sbiw	r30, 0x01	; 1
     982:	f1 f7       	brne	.-4      	; 0x980 <SCMPLCF_SendMessageAddPacket+0x470>
     984:	00 c0       	rjmp	.+0      	; 0x986 <SCMPLCF_SendMessageAddPacket+0x476>
     986:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.controlID,bitvalue);
     988:	81 fb       	bst	r24, 1
     98a:	ff 27       	eor	r31, r31
     98c:	f0 f9       	bld	r31, 0
     98e:	fe a3       	std	Y+38, r31	; 0x26
     990:	1f a2       	std	Y+39, r1	; 0x27
     992:	2e a1       	ldd	r18, Y+38	; 0x26
     994:	3f a1       	ldd	r19, Y+39	; 0x27
     996:	36 95       	lsr	r19
     998:	32 2f       	mov	r19, r18
     99a:	22 27       	eor	r18, r18
     99c:	37 95       	ror	r19
     99e:	27 95       	ror	r18
     9a0:	24 60       	ori	r18, 0x04	; 4
     9a2:	23 b9       	out	0x03, r18	; 3
     9a4:	e9 e2       	ldi	r30, 0x29	; 41
     9a6:	f2 e0       	ldi	r31, 0x02	; 2
     9a8:	31 97       	sbiw	r30, 0x01	; 1
     9aa:	f1 f7       	brne	.-4      	; 0x9a8 <SCMPLCF_SendMessageAddPacket+0x498>
     9ac:	00 c0       	rjmp	.+0      	; 0x9ae <SCMPLCF_SendMessageAddPacket+0x49e>
     9ae:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.controlID,bitvalue);
     9b0:	82 fb       	bst	r24, 2
     9b2:	ff 27       	eor	r31, r31
     9b4:	f0 f9       	bld	r31, 0
     9b6:	f8 a7       	std	Y+40, r31	; 0x28
     9b8:	19 a6       	std	Y+41, r1	; 0x29
     9ba:	28 a5       	ldd	r18, Y+40	; 0x28
     9bc:	39 a5       	ldd	r19, Y+41	; 0x29
     9be:	36 95       	lsr	r19
     9c0:	32 2f       	mov	r19, r18
     9c2:	22 27       	eor	r18, r18
     9c4:	37 95       	ror	r19
     9c6:	27 95       	ror	r18
     9c8:	24 60       	ori	r18, 0x04	; 4
     9ca:	23 b9       	out	0x03, r18	; 3
     9cc:	e9 e2       	ldi	r30, 0x29	; 41
     9ce:	f2 e0       	ldi	r31, 0x02	; 2
     9d0:	31 97       	sbiw	r30, 0x01	; 1
     9d2:	f1 f7       	brne	.-4      	; 0x9d0 <SCMPLCF_SendMessageAddPacket+0x4c0>
     9d4:	00 c0       	rjmp	.+0      	; 0x9d6 <SCMPLCF_SendMessageAddPacket+0x4c6>
     9d6:	00 00       	nop
	PLC_TX_BIT(3,PLC_TX_DELAY,message.controlID,bitvalue);
     9d8:	83 fb       	bst	r24, 3
     9da:	ff 27       	eor	r31, r31
     9dc:	f0 f9       	bld	r31, 0
     9de:	fa a7       	std	Y+42, r31	; 0x2a
     9e0:	1b a6       	std	Y+43, r1	; 0x2b
     9e2:	2a a5       	ldd	r18, Y+42	; 0x2a
     9e4:	3b a5       	ldd	r19, Y+43	; 0x2b
     9e6:	36 95       	lsr	r19
     9e8:	32 2f       	mov	r19, r18
     9ea:	22 27       	eor	r18, r18
     9ec:	37 95       	ror	r19
     9ee:	27 95       	ror	r18
     9f0:	24 60       	ori	r18, 0x04	; 4
     9f2:	23 b9       	out	0x03, r18	; 3
     9f4:	e9 e2       	ldi	r30, 0x29	; 41
     9f6:	f2 e0       	ldi	r31, 0x02	; 2
     9f8:	31 97       	sbiw	r30, 0x01	; 1
     9fa:	f1 f7       	brne	.-4      	; 0x9f8 <SCMPLCF_SendMessageAddPacket+0x4e8>
     9fc:	00 c0       	rjmp	.+0      	; 0x9fe <SCMPLCF_SendMessageAddPacket+0x4ee>
     9fe:	00 00       	nop
	PLC_TX_BIT(4,PLC_TX_DELAY,message.controlID,bitvalue);
     a00:	84 fb       	bst	r24, 4
     a02:	ff 27       	eor	r31, r31
     a04:	f0 f9       	bld	r31, 0
     a06:	fc a7       	std	Y+44, r31	; 0x2c
     a08:	1d a6       	std	Y+45, r1	; 0x2d
     a0a:	2c a5       	ldd	r18, Y+44	; 0x2c
     a0c:	3d a5       	ldd	r19, Y+45	; 0x2d
     a0e:	36 95       	lsr	r19
     a10:	32 2f       	mov	r19, r18
     a12:	22 27       	eor	r18, r18
     a14:	37 95       	ror	r19
     a16:	27 95       	ror	r18
     a18:	24 60       	ori	r18, 0x04	; 4
     a1a:	23 b9       	out	0x03, r18	; 3
     a1c:	e9 e2       	ldi	r30, 0x29	; 41
     a1e:	f2 e0       	ldi	r31, 0x02	; 2
     a20:	31 97       	sbiw	r30, 0x01	; 1
     a22:	f1 f7       	brne	.-4      	; 0xa20 <SCMPLCF_SendMessageAddPacket+0x510>
     a24:	00 c0       	rjmp	.+0      	; 0xa26 <SCMPLCF_SendMessageAddPacket+0x516>
     a26:	00 00       	nop
	PLC_TX_BIT(5,PLC_TX_DELAY,message.controlID,bitvalue);
     a28:	85 fb       	bst	r24, 5
     a2a:	44 24       	eor	r4, r4
     a2c:	40 f8       	bld	r4, 0
     a2e:	51 2c       	mov	r5, r1
     a30:	92 01       	movw	r18, r4
     a32:	36 95       	lsr	r19
     a34:	32 2f       	mov	r19, r18
     a36:	22 27       	eor	r18, r18
     a38:	37 95       	ror	r19
     a3a:	27 95       	ror	r18
     a3c:	24 60       	ori	r18, 0x04	; 4
     a3e:	23 b9       	out	0x03, r18	; 3
     a40:	e9 e2       	ldi	r30, 0x29	; 41
     a42:	f2 e0       	ldi	r31, 0x02	; 2
     a44:	31 97       	sbiw	r30, 0x01	; 1
     a46:	f1 f7       	brne	.-4      	; 0xa44 <SCMPLCF_SendMessageAddPacket+0x534>
     a48:	00 c0       	rjmp	.+0      	; 0xa4a <SCMPLCF_SendMessageAddPacket+0x53a>
     a4a:	00 00       	nop
	PLC_TX_BIT(6,PLC_TX_DELAY,message.controlID,bitvalue);
     a4c:	86 fb       	bst	r24, 6
     a4e:	22 24       	eor	r2, r2
     a50:	20 f8       	bld	r2, 0
     a52:	31 2c       	mov	r3, r1
     a54:	91 01       	movw	r18, r2
     a56:	36 95       	lsr	r19
     a58:	32 2f       	mov	r19, r18
     a5a:	22 27       	eor	r18, r18
     a5c:	37 95       	ror	r19
     a5e:	27 95       	ror	r18
     a60:	24 60       	ori	r18, 0x04	; 4
     a62:	23 b9       	out	0x03, r18	; 3
     a64:	e9 e2       	ldi	r30, 0x29	; 41
     a66:	f2 e0       	ldi	r31, 0x02	; 2
     a68:	31 97       	sbiw	r30, 0x01	; 1
     a6a:	f1 f7       	brne	.-4      	; 0xa68 <SCMPLCF_SendMessageAddPacket+0x558>
     a6c:	00 c0       	rjmp	.+0      	; 0xa6e <SCMPLCF_SendMessageAddPacket+0x55e>
     a6e:	00 00       	nop
	PLC_TX_BIT(7,PLC_TX_DELAY,message.controlID,bitvalue);
     a70:	88 1f       	adc	r24, r24
     a72:	88 27       	eor	r24, r24
     a74:	88 1f       	adc	r24, r24
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	96 95       	lsr	r25
     a7a:	98 2f       	mov	r25, r24
     a7c:	88 27       	eor	r24, r24
     a7e:	97 95       	ror	r25
     a80:	87 95       	ror	r24
     a82:	84 60       	ori	r24, 0x04	; 4
     a84:	83 b9       	out	0x03, r24	; 3
     a86:	89 e2       	ldi	r24, 0x29	; 41
     a88:	92 e0       	ldi	r25, 0x02	; 2
     a8a:	01 97       	sbiw	r24, 0x01	; 1
     a8c:	f1 f7       	brne	.-4      	; 0xa8a <SCMPLCF_SendMessageAddPacket+0x57a>
     a8e:	00 c0       	rjmp	.+0      	; 0xa90 <SCMPLCF_SendMessageAddPacket+0x580>
     a90:	00 00       	nop
	
	PORTE = (0<<PE7)|(0<<PE6)|(0<<PE5)|(0<<PE4)|(0<<PE3)|(1<<PE2)|(0<<PE1)|(0<<PE0);  // 485 Rx On
     a92:	84 e0       	ldi	r24, 0x04	; 4
     a94:	83 b9       	out	0x03, r24	; 3

}
     a96:	e0 96       	adiw	r28, 0x30	; 48
     a98:	0f b6       	in	r0, 0x3f	; 63
     a9a:	f8 94       	cli
     a9c:	de bf       	out	0x3e, r29	; 62
     a9e:	0f be       	out	0x3f, r0	; 63
     aa0:	cd bf       	out	0x3d, r28	; 61
     aa2:	df 91       	pop	r29
     aa4:	cf 91       	pop	r28
     aa6:	1f 91       	pop	r17
     aa8:	0f 91       	pop	r16
     aaa:	ff 90       	pop	r15
     aac:	ef 90       	pop	r14
     aae:	df 90       	pop	r13
     ab0:	cf 90       	pop	r12
     ab2:	bf 90       	pop	r11
     ab4:	af 90       	pop	r10
     ab6:	9f 90       	pop	r9
     ab8:	8f 90       	pop	r8
     aba:	7f 90       	pop	r7
     abc:	6f 90       	pop	r6
     abe:	5f 90       	pop	r5
     ac0:	4f 90       	pop	r4
     ac2:	3f 90       	pop	r3
     ac4:	2f 90       	pop	r2
     ac6:	08 95       	ret

00000ac8 <SCMPLCF_SendMessageCntlPacket>:

void SCMPLCF_SendMessageCntlPacket(PLCTxCntlPacket message)
{
     ac8:	2f 92       	push	r2
     aca:	3f 92       	push	r3
     acc:	4f 92       	push	r4
     ace:	5f 92       	push	r5
     ad0:	6f 92       	push	r6
     ad2:	7f 92       	push	r7
     ad4:	8f 92       	push	r8
     ad6:	9f 92       	push	r9
     ad8:	af 92       	push	r10
     ada:	bf 92       	push	r11
     adc:	cf 92       	push	r12
     ade:	df 92       	push	r13
     ae0:	ef 92       	push	r14
     ae2:	ff 92       	push	r15
     ae4:	0f 93       	push	r16
     ae6:	1f 93       	push	r17
     ae8:	cf 93       	push	r28
     aea:	df 93       	push	r29
     aec:	cd b7       	in	r28, 0x3d	; 61
     aee:	de b7       	in	r29, 0x3e	; 62
     af0:	63 97       	sbiw	r28, 0x13	; 19
     af2:	0f b6       	in	r0, 0x3f	; 63
     af4:	f8 94       	cli
     af6:	de bf       	out	0x3e, r29	; 62
     af8:	0f be       	out	0x3f, r0	; 63
     afa:	cd bf       	out	0x3d, r28	; 61
	uint8_t mask = 0x01;
	uint8_t bitvalue;

	PLC_TX_BIT(0,PLC_TX_DELAY,mask,bitvalue);
     afc:	24 e8       	ldi	r18, 0x84	; 132
     afe:	23 b9       	out	0x03, r18	; 3
     b00:	e9 e2       	ldi	r30, 0x29	; 41
     b02:	f2 e0       	ldi	r31, 0x02	; 2
     b04:	31 97       	sbiw	r30, 0x01	; 1
     b06:	f1 f7       	brne	.-4      	; 0xb04 <SCMPLCF_SendMessageCntlPacket+0x3c>
     b08:	00 c0       	rjmp	.+0      	; 0xb0a <SCMPLCF_SendMessageCntlPacket+0x42>
     b0a:	00 00       	nop
	
	PLC_TX_BIT(0,PLC_TX_DELAY,message.type,bitvalue);
     b0c:	60 fb       	bst	r22, 0
     b0e:	aa 24       	eor	r10, r10
     b10:	a0 f8       	bld	r10, 0
     b12:	b1 2c       	mov	r11, r1
     b14:	b6 94       	lsr	r11
     b16:	ba 2c       	mov	r11, r10
     b18:	aa 24       	eor	r10, r10
     b1a:	b7 94       	ror	r11
     b1c:	a7 94       	ror	r10
     b1e:	fa 2d       	mov	r31, r10
     b20:	f4 60       	ori	r31, 0x04	; 4
     b22:	f3 b9       	out	0x03, r31	; 3
     b24:	e9 e2       	ldi	r30, 0x29	; 41
     b26:	f2 e0       	ldi	r31, 0x02	; 2
     b28:	31 97       	sbiw	r30, 0x01	; 1
     b2a:	f1 f7       	brne	.-4      	; 0xb28 <SCMPLCF_SendMessageCntlPacket+0x60>
     b2c:	00 c0       	rjmp	.+0      	; 0xb2e <SCMPLCF_SendMessageCntlPacket+0x66>
     b2e:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.type,bitvalue);
     b30:	61 fb       	bst	r22, 1
     b32:	cc 24       	eor	r12, r12
     b34:	c0 f8       	bld	r12, 0
     b36:	d1 2c       	mov	r13, r1
     b38:	d6 94       	lsr	r13
     b3a:	dc 2c       	mov	r13, r12
     b3c:	cc 24       	eor	r12, r12
     b3e:	d7 94       	ror	r13
     b40:	c7 94       	ror	r12
     b42:	fc 2d       	mov	r31, r12
     b44:	f4 60       	ori	r31, 0x04	; 4
     b46:	f3 b9       	out	0x03, r31	; 3
     b48:	e9 e2       	ldi	r30, 0x29	; 41
     b4a:	f2 e0       	ldi	r31, 0x02	; 2
     b4c:	31 97       	sbiw	r30, 0x01	; 1
     b4e:	f1 f7       	brne	.-4      	; 0xb4c <SCMPLCF_SendMessageCntlPacket+0x84>
     b50:	00 c0       	rjmp	.+0      	; 0xb52 <SCMPLCF_SendMessageCntlPacket+0x8a>
     b52:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.type,bitvalue);
     b54:	62 fb       	bst	r22, 2
     b56:	ee 24       	eor	r14, r14
     b58:	e0 f8       	bld	r14, 0
     b5a:	f1 2c       	mov	r15, r1
     b5c:	f6 94       	lsr	r15
     b5e:	fe 2c       	mov	r15, r14
     b60:	ee 24       	eor	r14, r14
     b62:	f7 94       	ror	r15
     b64:	e7 94       	ror	r14
     b66:	6e 2d       	mov	r22, r14
     b68:	64 60       	ori	r22, 0x04	; 4
     b6a:	63 b9       	out	0x03, r22	; 3
     b6c:	e9 e2       	ldi	r30, 0x29	; 41
     b6e:	f2 e0       	ldi	r31, 0x02	; 2
     b70:	31 97       	sbiw	r30, 0x01	; 1
     b72:	f1 f7       	brne	.-4      	; 0xb70 <SCMPLCF_SendMessageCntlPacket+0xa8>
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <SCMPLCF_SendMessageCntlPacket+0xae>
     b76:	00 00       	nop

	PLC_TX_BIT(0,PLC_TX_DELAY,message.controlID,bitvalue);
     b78:	07 2f       	mov	r16, r23
     b7a:	01 70       	andi	r16, 0x01	; 1
     b7c:	10 e0       	ldi	r17, 0x00	; 0
     b7e:	16 95       	lsr	r17
     b80:	10 2f       	mov	r17, r16
     b82:	00 27       	eor	r16, r16
     b84:	17 95       	ror	r17
     b86:	07 95       	ror	r16
     b88:	04 60       	ori	r16, 0x04	; 4
     b8a:	03 b9       	out	0x03, r16	; 3
     b8c:	e9 e2       	ldi	r30, 0x29	; 41
     b8e:	f2 e0       	ldi	r31, 0x02	; 2
     b90:	31 97       	sbiw	r30, 0x01	; 1
     b92:	f1 f7       	brne	.-4      	; 0xb90 <SCMPLCF_SendMessageCntlPacket+0xc8>
     b94:	00 c0       	rjmp	.+0      	; 0xb96 <SCMPLCF_SendMessageCntlPacket+0xce>
     b96:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.controlID,bitvalue);
     b98:	71 fb       	bst	r23, 1
     b9a:	ff 27       	eor	r31, r31
     b9c:	f0 f9       	bld	r31, 0
     b9e:	fa 8b       	std	Y+18, r31	; 0x12
     ba0:	1b 8a       	std	Y+19, r1	; 0x13
     ba2:	2a 89       	ldd	r18, Y+18	; 0x12
     ba4:	3b 89       	ldd	r19, Y+19	; 0x13
     ba6:	36 95       	lsr	r19
     ba8:	32 2f       	mov	r19, r18
     baa:	22 27       	eor	r18, r18
     bac:	37 95       	ror	r19
     bae:	27 95       	ror	r18
     bb0:	3b 8b       	std	Y+19, r19	; 0x13
     bb2:	2a 8b       	std	Y+18, r18	; 0x12
     bb4:	24 60       	ori	r18, 0x04	; 4
     bb6:	23 b9       	out	0x03, r18	; 3
     bb8:	e9 e2       	ldi	r30, 0x29	; 41
     bba:	f2 e0       	ldi	r31, 0x02	; 2
     bbc:	31 97       	sbiw	r30, 0x01	; 1
     bbe:	f1 f7       	brne	.-4      	; 0xbbc <SCMPLCF_SendMessageCntlPacket+0xf4>
     bc0:	00 c0       	rjmp	.+0      	; 0xbc2 <SCMPLCF_SendMessageCntlPacket+0xfa>
     bc2:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.controlID,bitvalue);
     bc4:	72 fb       	bst	r23, 2
     bc6:	aa 27       	eor	r26, r26
     bc8:	a0 f9       	bld	r26, 0
     bca:	b0 e0       	ldi	r27, 0x00	; 0
     bcc:	b6 95       	lsr	r27
     bce:	ba 2f       	mov	r27, r26
     bd0:	aa 27       	eor	r26, r26
     bd2:	b7 95       	ror	r27
     bd4:	a7 95       	ror	r26
     bd6:	a4 60       	ori	r26, 0x04	; 4
     bd8:	a3 b9       	out	0x03, r26	; 3
     bda:	e9 e2       	ldi	r30, 0x29	; 41
     bdc:	f2 e0       	ldi	r31, 0x02	; 2
     bde:	31 97       	sbiw	r30, 0x01	; 1
     be0:	f1 f7       	brne	.-4      	; 0xbde <SCMPLCF_SendMessageCntlPacket+0x116>
     be2:	00 c0       	rjmp	.+0      	; 0xbe4 <SCMPLCF_SendMessageCntlPacket+0x11c>
     be4:	00 00       	nop
	PLC_TX_BIT(3,PLC_TX_DELAY,message.controlID,bitvalue);
     be6:	73 fb       	bst	r23, 3
     be8:	ee 27       	eor	r30, r30
     bea:	e0 f9       	bld	r30, 0
     bec:	f0 e0       	ldi	r31, 0x00	; 0
     bee:	f6 95       	lsr	r31
     bf0:	fe 2f       	mov	r31, r30
     bf2:	ee 27       	eor	r30, r30
     bf4:	f7 95       	ror	r31
     bf6:	e7 95       	ror	r30
     bf8:	e4 60       	ori	r30, 0x04	; 4
     bfa:	e3 b9       	out	0x03, r30	; 3
     bfc:	e9 e2       	ldi	r30, 0x29	; 41
     bfe:	f2 e0       	ldi	r31, 0x02	; 2
     c00:	31 97       	sbiw	r30, 0x01	; 1
     c02:	f1 f7       	brne	.-4      	; 0xc00 <SCMPLCF_SendMessageCntlPacket+0x138>
     c04:	00 c0       	rjmp	.+0      	; 0xc06 <SCMPLCF_SendMessageCntlPacket+0x13e>
     c06:	00 00       	nop
	PLC_TX_BIT(4,PLC_TX_DELAY,message.controlID,bitvalue);
     c08:	74 fb       	bst	r23, 4
     c0a:	44 27       	eor	r20, r20
     c0c:	40 f9       	bld	r20, 0
     c0e:	50 e0       	ldi	r21, 0x00	; 0
     c10:	56 95       	lsr	r21
     c12:	54 2f       	mov	r21, r20
     c14:	44 27       	eor	r20, r20
     c16:	57 95       	ror	r21
     c18:	47 95       	ror	r20
     c1a:	44 60       	ori	r20, 0x04	; 4
     c1c:	43 b9       	out	0x03, r20	; 3
     c1e:	e9 e2       	ldi	r30, 0x29	; 41
     c20:	f2 e0       	ldi	r31, 0x02	; 2
     c22:	31 97       	sbiw	r30, 0x01	; 1
     c24:	f1 f7       	brne	.-4      	; 0xc22 <SCMPLCF_SendMessageCntlPacket+0x15a>
     c26:	00 c0       	rjmp	.+0      	; 0xc28 <SCMPLCF_SendMessageCntlPacket+0x160>
     c28:	00 00       	nop
	PLC_TX_BIT(5,PLC_TX_DELAY,message.controlID,bitvalue);
     c2a:	75 fb       	bst	r23, 5
     c2c:	22 27       	eor	r18, r18
     c2e:	20 f9       	bld	r18, 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	36 95       	lsr	r19
     c34:	32 2f       	mov	r19, r18
     c36:	22 27       	eor	r18, r18
     c38:	37 95       	ror	r19
     c3a:	27 95       	ror	r18
     c3c:	24 60       	ori	r18, 0x04	; 4
     c3e:	23 b9       	out	0x03, r18	; 3
     c40:	e9 e2       	ldi	r30, 0x29	; 41
     c42:	f2 e0       	ldi	r31, 0x02	; 2
     c44:	31 97       	sbiw	r30, 0x01	; 1
     c46:	f1 f7       	brne	.-4      	; 0xc44 <SCMPLCF_SendMessageCntlPacket+0x17c>
     c48:	00 c0       	rjmp	.+0      	; 0xc4a <SCMPLCF_SendMessageCntlPacket+0x182>
     c4a:	00 00       	nop
	PLC_TX_BIT(6,PLC_TX_DELAY,message.controlID,bitvalue);
     c4c:	76 fb       	bst	r23, 6
     c4e:	88 24       	eor	r8, r8
     c50:	80 f8       	bld	r8, 0
     c52:	91 2c       	mov	r9, r1
     c54:	94 01       	movw	r18, r8
     c56:	36 95       	lsr	r19
     c58:	32 2f       	mov	r19, r18
     c5a:	22 27       	eor	r18, r18
     c5c:	37 95       	ror	r19
     c5e:	27 95       	ror	r18
     c60:	24 60       	ori	r18, 0x04	; 4
     c62:	23 b9       	out	0x03, r18	; 3
     c64:	e9 e2       	ldi	r30, 0x29	; 41
     c66:	f2 e0       	ldi	r31, 0x02	; 2
     c68:	31 97       	sbiw	r30, 0x01	; 1
     c6a:	f1 f7       	brne	.-4      	; 0xc68 <SCMPLCF_SendMessageCntlPacket+0x1a0>
     c6c:	00 c0       	rjmp	.+0      	; 0xc6e <SCMPLCF_SendMessageCntlPacket+0x1a6>
     c6e:	00 00       	nop
	PLC_TX_BIT(7,PLC_TX_DELAY,message.controlID,bitvalue);
     c70:	77 1f       	adc	r23, r23
     c72:	77 27       	eor	r23, r23
     c74:	77 1f       	adc	r23, r23
     c76:	27 2f       	mov	r18, r23
     c78:	30 e0       	ldi	r19, 0x00	; 0
     c7a:	36 95       	lsr	r19
     c7c:	32 2f       	mov	r19, r18
     c7e:	22 27       	eor	r18, r18
     c80:	37 95       	ror	r19
     c82:	27 95       	ror	r18
     c84:	24 60       	ori	r18, 0x04	; 4
     c86:	23 b9       	out	0x03, r18	; 3
     c88:	e9 e2       	ldi	r30, 0x29	; 41
     c8a:	f2 e0       	ldi	r31, 0x02	; 2
     c8c:	31 97       	sbiw	r30, 0x01	; 1
     c8e:	f1 f7       	brne	.-4      	; 0xc8c <SCMPLCF_SendMessageCntlPacket+0x1c4>
     c90:	00 c0       	rjmp	.+0      	; 0xc92 <SCMPLCF_SendMessageCntlPacket+0x1ca>
     c92:	00 00       	nop
	
	PLC_TX_BIT(0,PLC_TX_DELAY,message.OperationMode,bitvalue);
     c94:	80 fb       	bst	r24, 0
     c96:	66 24       	eor	r6, r6
     c98:	60 f8       	bld	r6, 0
     c9a:	71 2c       	mov	r7, r1
     c9c:	93 01       	movw	r18, r6
     c9e:	36 95       	lsr	r19
     ca0:	32 2f       	mov	r19, r18
     ca2:	22 27       	eor	r18, r18
     ca4:	37 95       	ror	r19
     ca6:	27 95       	ror	r18
     ca8:	24 60       	ori	r18, 0x04	; 4
     caa:	23 b9       	out	0x03, r18	; 3
     cac:	e9 e2       	ldi	r30, 0x29	; 41
     cae:	f2 e0       	ldi	r31, 0x02	; 2
     cb0:	31 97       	sbiw	r30, 0x01	; 1
     cb2:	f1 f7       	brne	.-4      	; 0xcb0 <SCMPLCF_SendMessageCntlPacket+0x1e8>
     cb4:	00 c0       	rjmp	.+0      	; 0xcb6 <SCMPLCF_SendMessageCntlPacket+0x1ee>
     cb6:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.OperationMode,bitvalue);
     cb8:	81 fb       	bst	r24, 1
     cba:	44 24       	eor	r4, r4
     cbc:	40 f8       	bld	r4, 0
     cbe:	51 2c       	mov	r5, r1
     cc0:	92 01       	movw	r18, r4
     cc2:	36 95       	lsr	r19
     cc4:	32 2f       	mov	r19, r18
     cc6:	22 27       	eor	r18, r18
     cc8:	37 95       	ror	r19
     cca:	27 95       	ror	r18
     ccc:	24 60       	ori	r18, 0x04	; 4
     cce:	23 b9       	out	0x03, r18	; 3
     cd0:	e9 e2       	ldi	r30, 0x29	; 41
     cd2:	f2 e0       	ldi	r31, 0x02	; 2
     cd4:	31 97       	sbiw	r30, 0x01	; 1
     cd6:	f1 f7       	brne	.-4      	; 0xcd4 <SCMPLCF_SendMessageCntlPacket+0x20c>
     cd8:	00 c0       	rjmp	.+0      	; 0xcda <SCMPLCF_SendMessageCntlPacket+0x212>
     cda:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.OperationMode,bitvalue);
     cdc:	82 fb       	bst	r24, 2
     cde:	ff 27       	eor	r31, r31
     ce0:	f0 f9       	bld	r31, 0
     ce2:	f9 83       	std	Y+1, r31	; 0x01
     ce4:	1a 82       	std	Y+2, r1	; 0x02
     ce6:	29 81       	ldd	r18, Y+1	; 0x01
     ce8:	3a 81       	ldd	r19, Y+2	; 0x02
     cea:	36 95       	lsr	r19
     cec:	32 2f       	mov	r19, r18
     cee:	22 27       	eor	r18, r18
     cf0:	37 95       	ror	r19
     cf2:	27 95       	ror	r18
     cf4:	24 60       	ori	r18, 0x04	; 4
     cf6:	23 b9       	out	0x03, r18	; 3
     cf8:	e9 e2       	ldi	r30, 0x29	; 41
     cfa:	f2 e0       	ldi	r31, 0x02	; 2
     cfc:	31 97       	sbiw	r30, 0x01	; 1
     cfe:	f1 f7       	brne	.-4      	; 0xcfc <SCMPLCF_SendMessageCntlPacket+0x234>
     d00:	00 c0       	rjmp	.+0      	; 0xd02 <SCMPLCF_SendMessageCntlPacket+0x23a>
     d02:	00 00       	nop
	PLC_TX_BIT(3,PLC_TX_DELAY,message.OperationMode,bitvalue);
     d04:	83 fb       	bst	r24, 3
     d06:	88 27       	eor	r24, r24
     d08:	80 f9       	bld	r24, 0
     d0a:	8b 83       	std	Y+3, r24	; 0x03
     d0c:	1c 82       	std	Y+4, r1	; 0x04
     d0e:	2b 81       	ldd	r18, Y+3	; 0x03
     d10:	3c 81       	ldd	r19, Y+4	; 0x04
     d12:	36 95       	lsr	r19
     d14:	32 2f       	mov	r19, r18
     d16:	22 27       	eor	r18, r18
     d18:	37 95       	ror	r19
     d1a:	27 95       	ror	r18
     d1c:	24 60       	ori	r18, 0x04	; 4
     d1e:	23 b9       	out	0x03, r18	; 3
     d20:	e9 e2       	ldi	r30, 0x29	; 41
     d22:	f2 e0       	ldi	r31, 0x02	; 2
     d24:	31 97       	sbiw	r30, 0x01	; 1
     d26:	f1 f7       	brne	.-4      	; 0xd24 <SCMPLCF_SendMessageCntlPacket+0x25c>
     d28:	00 c0       	rjmp	.+0      	; 0xd2a <SCMPLCF_SendMessageCntlPacket+0x262>
     d2a:	00 00       	nop
	
	PLC_TX_BIT(0,PLC_TX_DELAY,message.data,bitvalue);
     d2c:	f9 2f       	mov	r31, r25
     d2e:	f1 70       	andi	r31, 0x01	; 1
     d30:	fd 83       	std	Y+5, r31	; 0x05
     d32:	1e 82       	std	Y+6, r1	; 0x06
     d34:	2d 81       	ldd	r18, Y+5	; 0x05
     d36:	3e 81       	ldd	r19, Y+6	; 0x06
     d38:	36 95       	lsr	r19
     d3a:	32 2f       	mov	r19, r18
     d3c:	22 27       	eor	r18, r18
     d3e:	37 95       	ror	r19
     d40:	27 95       	ror	r18
     d42:	24 60       	ori	r18, 0x04	; 4
     d44:	23 b9       	out	0x03, r18	; 3
     d46:	e9 e2       	ldi	r30, 0x29	; 41
     d48:	f2 e0       	ldi	r31, 0x02	; 2
     d4a:	31 97       	sbiw	r30, 0x01	; 1
     d4c:	f1 f7       	brne	.-4      	; 0xd4a <SCMPLCF_SendMessageCntlPacket+0x282>
     d4e:	00 c0       	rjmp	.+0      	; 0xd50 <SCMPLCF_SendMessageCntlPacket+0x288>
     d50:	00 00       	nop
	PLC_TX_BIT(1,PLC_TX_DELAY,message.data,bitvalue);
     d52:	91 fb       	bst	r25, 1
     d54:	ff 27       	eor	r31, r31
     d56:	f0 f9       	bld	r31, 0
     d58:	ff 83       	std	Y+7, r31	; 0x07
     d5a:	18 86       	std	Y+8, r1	; 0x08
     d5c:	2f 81       	ldd	r18, Y+7	; 0x07
     d5e:	38 85       	ldd	r19, Y+8	; 0x08
     d60:	36 95       	lsr	r19
     d62:	32 2f       	mov	r19, r18
     d64:	22 27       	eor	r18, r18
     d66:	37 95       	ror	r19
     d68:	27 95       	ror	r18
     d6a:	24 60       	ori	r18, 0x04	; 4
     d6c:	23 b9       	out	0x03, r18	; 3
     d6e:	e9 e2       	ldi	r30, 0x29	; 41
     d70:	f2 e0       	ldi	r31, 0x02	; 2
     d72:	31 97       	sbiw	r30, 0x01	; 1
     d74:	f1 f7       	brne	.-4      	; 0xd72 <SCMPLCF_SendMessageCntlPacket+0x2aa>
     d76:	00 c0       	rjmp	.+0      	; 0xd78 <SCMPLCF_SendMessageCntlPacket+0x2b0>
     d78:	00 00       	nop
	PLC_TX_BIT(2,PLC_TX_DELAY,message.data,bitvalue);
     d7a:	92 fb       	bst	r25, 2
     d7c:	ff 27       	eor	r31, r31
     d7e:	f0 f9       	bld	r31, 0
     d80:	f9 87       	std	Y+9, r31	; 0x09
     d82:	1a 86       	std	Y+10, r1	; 0x0a
     d84:	29 85       	ldd	r18, Y+9	; 0x09
     d86:	3a 85       	ldd	r19, Y+10	; 0x0a
     d88:	36 95       	lsr	r19
     d8a:	32 2f       	mov	r19, r18
     d8c:	22 27       	eor	r18, r18
     d8e:	37 95       	ror	r19
     d90:	27 95       	ror	r18
     d92:	24 60       	ori	r18, 0x04	; 4
     d94:	23 b9       	out	0x03, r18	; 3
     d96:	e9 e2       	ldi	r30, 0x29	; 41
     d98:	f2 e0       	ldi	r31, 0x02	; 2
     d9a:	31 97       	sbiw	r30, 0x01	; 1
     d9c:	f1 f7       	brne	.-4      	; 0xd9a <SCMPLCF_SendMessageCntlPacket+0x2d2>
     d9e:	00 c0       	rjmp	.+0      	; 0xda0 <SCMPLCF_SendMessageCntlPacket+0x2d8>
     da0:	00 00       	nop
	PLC_TX_BIT(3,PLC_TX_DELAY,message.data,bitvalue);
     da2:	93 fb       	bst	r25, 3
     da4:	ff 27       	eor	r31, r31
     da6:	f0 f9       	bld	r31, 0
     da8:	fb 87       	std	Y+11, r31	; 0x0b
     daa:	1c 86       	std	Y+12, r1	; 0x0c
     dac:	2b 85       	ldd	r18, Y+11	; 0x0b
     dae:	3c 85       	ldd	r19, Y+12	; 0x0c
     db0:	36 95       	lsr	r19
     db2:	32 2f       	mov	r19, r18
     db4:	22 27       	eor	r18, r18
     db6:	37 95       	ror	r19
     db8:	27 95       	ror	r18
     dba:	24 60       	ori	r18, 0x04	; 4
     dbc:	23 b9       	out	0x03, r18	; 3
     dbe:	e9 e2       	ldi	r30, 0x29	; 41
     dc0:	f2 e0       	ldi	r31, 0x02	; 2
     dc2:	31 97       	sbiw	r30, 0x01	; 1
     dc4:	f1 f7       	brne	.-4      	; 0xdc2 <SCMPLCF_SendMessageCntlPacket+0x2fa>
     dc6:	00 c0       	rjmp	.+0      	; 0xdc8 <SCMPLCF_SendMessageCntlPacket+0x300>
     dc8:	00 00       	nop
	PLC_TX_BIT(4,PLC_TX_DELAY,message.data,bitvalue);
     dca:	94 fb       	bst	r25, 4
     dcc:	ff 27       	eor	r31, r31
     dce:	f0 f9       	bld	r31, 0
     dd0:	fd 87       	std	Y+13, r31	; 0x0d
     dd2:	1e 86       	std	Y+14, r1	; 0x0e
     dd4:	2d 85       	ldd	r18, Y+13	; 0x0d
     dd6:	3e 85       	ldd	r19, Y+14	; 0x0e
     dd8:	36 95       	lsr	r19
     dda:	32 2f       	mov	r19, r18
     ddc:	22 27       	eor	r18, r18
     dde:	37 95       	ror	r19
     de0:	27 95       	ror	r18
     de2:	24 60       	ori	r18, 0x04	; 4
     de4:	23 b9       	out	0x03, r18	; 3
     de6:	e9 e2       	ldi	r30, 0x29	; 41
     de8:	f2 e0       	ldi	r31, 0x02	; 2
     dea:	31 97       	sbiw	r30, 0x01	; 1
     dec:	f1 f7       	brne	.-4      	; 0xdea <SCMPLCF_SendMessageCntlPacket+0x322>
     dee:	00 c0       	rjmp	.+0      	; 0xdf0 <SCMPLCF_SendMessageCntlPacket+0x328>
     df0:	00 00       	nop
	PLC_TX_BIT(5,PLC_TX_DELAY,message.data,bitvalue);
     df2:	95 fb       	bst	r25, 5
     df4:	ff 27       	eor	r31, r31
     df6:	f0 f9       	bld	r31, 0
     df8:	ff 87       	std	Y+15, r31	; 0x0f
     dfa:	18 8a       	std	Y+16, r1	; 0x10
     dfc:	2f 85       	ldd	r18, Y+15	; 0x0f
     dfe:	38 89       	ldd	r19, Y+16	; 0x10
     e00:	36 95       	lsr	r19
     e02:	32 2f       	mov	r19, r18
     e04:	22 27       	eor	r18, r18
     e06:	37 95       	ror	r19
     e08:	27 95       	ror	r18
     e0a:	24 60       	ori	r18, 0x04	; 4
     e0c:	23 b9       	out	0x03, r18	; 3
     e0e:	e9 e2       	ldi	r30, 0x29	; 41
     e10:	f2 e0       	ldi	r31, 0x02	; 2
     e12:	31 97       	sbiw	r30, 0x01	; 1
     e14:	f1 f7       	brne	.-4      	; 0xe12 <SCMPLCF_SendMessageCntlPacket+0x34a>
     e16:	00 c0       	rjmp	.+0      	; 0xe18 <SCMPLCF_SendMessageCntlPacket+0x350>
     e18:	00 00       	nop
	PLC_TX_BIT(6,PLC_TX_DELAY,message.data,bitvalue);
     e1a:	96 fb       	bst	r25, 6
     e1c:	22 24       	eor	r2, r2
     e1e:	20 f8       	bld	r2, 0
     e20:	31 2c       	mov	r3, r1
     e22:	91 01       	movw	r18, r2
     e24:	36 95       	lsr	r19
     e26:	32 2f       	mov	r19, r18
     e28:	22 27       	eor	r18, r18
     e2a:	37 95       	ror	r19
     e2c:	27 95       	ror	r18
     e2e:	24 60       	ori	r18, 0x04	; 4
     e30:	23 b9       	out	0x03, r18	; 3
     e32:	e9 e2       	ldi	r30, 0x29	; 41
     e34:	f2 e0       	ldi	r31, 0x02	; 2
     e36:	31 97       	sbiw	r30, 0x01	; 1
     e38:	f1 f7       	brne	.-4      	; 0xe36 <SCMPLCF_SendMessageCntlPacket+0x36e>
     e3a:	00 c0       	rjmp	.+0      	; 0xe3c <SCMPLCF_SendMessageCntlPacket+0x374>
     e3c:	00 00       	nop
	PLC_TX_BIT(7,PLC_TX_DELAY,message.data,bitvalue);
     e3e:	99 1f       	adc	r25, r25
     e40:	99 27       	eor	r25, r25
     e42:	99 1f       	adc	r25, r25
     e44:	89 2f       	mov	r24, r25
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	96 95       	lsr	r25
     e4a:	98 2f       	mov	r25, r24
     e4c:	88 27       	eor	r24, r24
     e4e:	97 95       	ror	r25
     e50:	87 95       	ror	r24
     e52:	84 60       	ori	r24, 0x04	; 4
     e54:	83 b9       	out	0x03, r24	; 3
     e56:	89 e2       	ldi	r24, 0x29	; 41
     e58:	92 e0       	ldi	r25, 0x02	; 2
     e5a:	01 97       	sbiw	r24, 0x01	; 1
     e5c:	f1 f7       	brne	.-4      	; 0xe5a <SCMPLCF_SendMessageCntlPacket+0x392>
     e5e:	00 c0       	rjmp	.+0      	; 0xe60 <SCMPLCF_SendMessageCntlPacket+0x398>
     e60:	00 00       	nop
	
	PORTE = (0<<PE7)|(0<<PE6)|(0<<PE5)|(0<<PE4)|(0<<PE3)|(1<<PE2)|(0<<PE1)|(0<<PE0); // 485 Rx On
     e62:	84 e0       	ldi	r24, 0x04	; 4
     e64:	83 b9       	out	0x03, r24	; 3
}
     e66:	63 96       	adiw	r28, 0x13	; 19
     e68:	0f b6       	in	r0, 0x3f	; 63
     e6a:	f8 94       	cli
     e6c:	de bf       	out	0x3e, r29	; 62
     e6e:	0f be       	out	0x3f, r0	; 63
     e70:	cd bf       	out	0x3d, r28	; 61
     e72:	df 91       	pop	r29
     e74:	cf 91       	pop	r28
     e76:	1f 91       	pop	r17
     e78:	0f 91       	pop	r16
     e7a:	ff 90       	pop	r15
     e7c:	ef 90       	pop	r14
     e7e:	df 90       	pop	r13
     e80:	cf 90       	pop	r12
     e82:	bf 90       	pop	r11
     e84:	af 90       	pop	r10
     e86:	9f 90       	pop	r9
     e88:	8f 90       	pop	r8
     e8a:	7f 90       	pop	r7
     e8c:	6f 90       	pop	r6
     e8e:	5f 90       	pop	r5
     e90:	4f 90       	pop	r4
     e92:	3f 90       	pop	r3
     e94:	2f 90       	pop	r2
     e96:	08 95       	ret

00000e98 <SCM485F_ExtMemInit>:
#define  MAX_USM_TO_LCM_CNT         1


void SCM485F_ExtMemInit()
{
	MCUCR |=(1<<SRE)|(0<<SRW10);
     e98:	85 b7       	in	r24, 0x35	; 53
     e9a:	80 68       	ori	r24, 0x80	; 128
     e9c:	85 bf       	out	0x35, r24	; 53

	XMCRA = (0<<SRL2)|(1<<SRL1)|(0<<SRL0)|(1<<SRW01)|(1<<SRW10)|(0<<SRW11);
     e9e:	88 e6       	ldi	r24, 0x68	; 104
     ea0:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
	XMCRB = (1<<XMBK)|(0<<XMM2)|(1<<XMM1)|(0<<XMM0);
     ea4:	82 e8       	ldi	r24, 0x82	; 130
     ea6:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
     eaa:	08 95       	ret

00000eac <SCMEMF_ReadExtMemTest>:

void SCMEMF_ReadExtMemTest(uint16_t addr, uint8_t val)
{
	uint8_t ch;
	ch = READ_XMEM_ADDR(addr);
	if(ch == val) PORTB &= ~(1<<PB4);
     eac:	fc 01       	movw	r30, r24
     eae:	80 81       	ld	r24, Z
     eb0:	86 13       	cpse	r24, r22
     eb2:	01 c0       	rjmp	.+2      	; 0xeb6 <SCMEMF_ReadExtMemTest+0xa>
     eb4:	c4 98       	cbi	0x18, 4	; 24
     eb6:	08 95       	ret

00000eb8 <SCMEMF_WriteExtMemUSMAddr>:
}

void SCMEMF_WriteExtMemUSMAddr( uint8_t *data, uint8_t totalCnt)
{
     eb8:	0f 93       	push	r16
     eba:	1f 93       	push	r17
     ebc:	cf 93       	push	r28
     ebe:	df 93       	push	r29
	uint16_t i;
	
	for(i = 0; i<totalCnt; i++)
     ec0:	a6 2f       	mov	r26, r22
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	10 97       	sbiw	r26, 0x00	; 0
     ec6:	69 f1       	breq	.+90     	; 0xf22 <SCMEMF_WriteExtMemUSMAddr+0x6a>
     ec8:	fc 01       	movw	r30, r24
     eca:	31 96       	adiw	r30, 0x01	; 1
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	90 e0       	ldi	r25, 0x00	; 0
		//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_OFFSET*i + USM_CNTLID_OFFSET) = data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE)]; //Control ID
		//for(j=MAX_CNTLID_BYTE; j<MAX_SN_BYTE+MAX_CNTLID_BYTE; j++)
		//{
			//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_OFFSET*i+j-1) = data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + j];
		//}
		G_usmAdd[i] = ((uint32_t)data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 1] <<16 ) | (data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 2] << 8) | (data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 3]);
     ed0:	40 81       	ld	r20, Z
     ed2:	50 e0       	ldi	r21, 0x00	; 0
     ed4:	60 e0       	ldi	r22, 0x00	; 0
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	ba 01       	movw	r22, r20
     eda:	55 27       	eor	r21, r21
     edc:	44 27       	eor	r20, r20
     ede:	22 81       	ldd	r18, Z+2	; 0x02
     ee0:	42 2b       	or	r20, r18
     ee2:	01 81       	ldd	r16, Z+1	; 0x01
     ee4:	10 e0       	ldi	r17, 0x00	; 0
     ee6:	10 2f       	mov	r17, r16
     ee8:	00 27       	eor	r16, r16
     eea:	01 2e       	mov	r0, r17
     eec:	00 0c       	add	r0, r0
     eee:	22 0b       	sbc	r18, r18
     ef0:	33 0b       	sbc	r19, r19
     ef2:	40 2b       	or	r20, r16
     ef4:	51 2b       	or	r21, r17
     ef6:	62 2b       	or	r22, r18
     ef8:	73 2b       	or	r23, r19
     efa:	ec 01       	movw	r28, r24
     efc:	cc 0f       	add	r28, r28
     efe:	dd 1f       	adc	r29, r29
     f00:	cc 0f       	add	r28, r28
     f02:	dd 1f       	adc	r29, r29
     f04:	c7 55       	subi	r28, 0x57	; 87
     f06:	d9 4f       	sbci	r29, 0xF9	; 249
     f08:	48 83       	st	Y, r20
     f0a:	59 83       	std	Y+1, r21	; 0x01
     f0c:	6a 83       	std	Y+2, r22	; 0x02
     f0e:	7b 83       	std	Y+3, r23	; 0x03
		G_usmOPMode[i] = 0;
     f10:	ec 01       	movw	r28, r24
     f12:	c7 5e       	subi	r28, 0xE7	; 231
     f14:	da 4f       	sbci	r29, 0xFA	; 250
     f16:	18 82       	st	Y, r1

void SCMEMF_WriteExtMemUSMAddr( uint8_t *data, uint8_t totalCnt)
{
	uint16_t i;
	
	for(i = 0; i<totalCnt; i++)
     f18:	01 96       	adiw	r24, 0x01	; 1
     f1a:	34 96       	adiw	r30, 0x04	; 4
     f1c:	8a 17       	cp	r24, r26
     f1e:	9b 07       	cpc	r25, r27
     f20:	b9 f6       	brne	.-82     	; 0xed0 <SCMEMF_WriteExtMemUSMAddr+0x18>
		//}
		//
		//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_OFFSET*i + USM_LGMID_OFFSET) = 0; //USM to LGM ID init
	}

	G_SULCR |= UACF2;
     f22:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
     f26:	84 60       	ori	r24, 0x04	; 4
     f28:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
}
     f2c:	df 91       	pop	r29
     f2e:	cf 91       	pop	r28
     f30:	1f 91       	pop	r17
     f32:	0f 91       	pop	r16
     f34:	08 95       	ret

00000f36 <SCMEMF_WriteExtMemLGMAddr>:

void SCMEMF_WriteExtMemLGMAddr(volatile uint8_t *data, uint8_t totalCnt)
{
     f36:	cf 92       	push	r12
     f38:	df 92       	push	r13
     f3a:	ef 92       	push	r14
     f3c:	ff 92       	push	r15
     f3e:	cf 93       	push	r28
     f40:	df 93       	push	r29
	uint16_t i;	
	for(i = 0; i<totalCnt; i++)
     f42:	a6 2f       	mov	r26, r22
     f44:	b0 e0       	ldi	r27, 0x00	; 0
     f46:	10 97       	sbiw	r26, 0x00	; 0
     f48:	61 f1       	breq	.+88     	; 0xfa2 <SCMEMF_WriteExtMemLGMAddr+0x6c>
     f4a:	fc 01       	movw	r30, r24
     f4c:	31 96       	adiw	r30, 0x01	; 1
     f4e:	80 e0       	ldi	r24, 0x00	; 0
     f50:	90 e0       	ldi	r25, 0x00	; 0
		//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_LGM + LGM_OFFSET*i + LGM_CNTLID_OFFSET) = data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE)]-128; //Control ID
		//for(j=MAX_CNTLID_BYTE; j<MAX_SN_BYTE+MAX_CNTLID_BYTE; j++)
		//{
			//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_LGM + LGM_OFFSET*i+j-1) = data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + j];
		//}
		G_lgmAdd[i] = ((uint32_t)data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 1] <<16 ) | (data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 2] << 8) | (data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 3]);
     f52:	30 81       	ld	r19, Z
     f54:	21 81       	ldd	r18, Z+1	; 0x01
     f56:	42 81       	ldd	r20, Z+2	; 0x02
     f58:	50 e0       	ldi	r21, 0x00	; 0
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	6a 01       	movw	r12, r20
     f60:	7b 01       	movw	r14, r22
     f62:	e3 2a       	or	r14, r19
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	52 2f       	mov	r21, r18
     f68:	44 27       	eor	r20, r20
     f6a:	05 2e       	mov	r0, r21
     f6c:	00 0c       	add	r0, r0
     f6e:	66 0b       	sbc	r22, r22
     f70:	77 0b       	sbc	r23, r23
     f72:	4c 29       	or	r20, r12
     f74:	5d 29       	or	r21, r13
     f76:	6e 29       	or	r22, r14
     f78:	7f 29       	or	r23, r15
     f7a:	ec 01       	movw	r28, r24
     f7c:	cc 0f       	add	r28, r28
     f7e:	dd 1f       	adc	r29, r29
     f80:	cc 0f       	add	r28, r28
     f82:	dd 1f       	adc	r29, r29
     f84:	c7 5f       	subi	r28, 0xF7	; 247
     f86:	d9 4f       	sbci	r29, 0xF9	; 249
     f88:	48 83       	st	Y, r20
     f8a:	59 83       	std	Y+1, r21	; 0x01
     f8c:	6a 83       	std	Y+2, r22	; 0x02
     f8e:	7b 83       	std	Y+3, r23	; 0x03
		G_lgmOPMode[i] = 0;
     f90:	ec 01       	movw	r28, r24
     f92:	cf 50       	subi	r28, 0x0F	; 15
     f94:	db 4f       	sbci	r29, 0xFB	; 251
     f96:	18 82       	st	Y, r1
}

void SCMEMF_WriteExtMemLGMAddr(volatile uint8_t *data, uint8_t totalCnt)
{
	uint16_t i;	
	for(i = 0; i<totalCnt; i++)
     f98:	01 96       	adiw	r24, 0x01	; 1
     f9a:	34 96       	adiw	r30, 0x04	; 4
     f9c:	8a 17       	cp	r24, r26
     f9e:	9b 07       	cpc	r25, r27
     fa0:	c1 f6       	brne	.-80     	; 0xf52 <SCMEMF_WriteExtMemLGMAddr+0x1c>
		G_lgmAdd[i] = ((uint32_t)data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 1] <<16 ) | (data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 2] << 8) | (data[i*(MAX_SN_BYTE+MAX_CNTLID_BYTE) + 3]);
		G_lgmOPMode[i] = 0;
		//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_LGM + LGM_OFFSET*i + LGM_MODE_OFFSET) = 0; // Operation mode init
	}
	
	G_SULCR |= LACF3;
     fa2:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
     fa6:	88 60       	ori	r24, 0x08	; 8
     fa8:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
}
     fac:	df 91       	pop	r29
     fae:	cf 91       	pop	r28
     fb0:	ff 90       	pop	r15
     fb2:	ef 90       	pop	r14
     fb4:	df 90       	pop	r13
     fb6:	cf 90       	pop	r12
     fb8:	08 95       	ret

00000fba <SCMEMF_WriteExtMemUSMCntlID>:

void SCMEMF_WriteExtMemUSMCntlID(uint8_t totalCnt)
{
	uint16_t i;
	for(i = 0; i<totalCnt; i++)
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	00 97       	sbiw	r24, 0x00	; 0
     fbe:	61 f0       	breq	.+24     	; 0xfd8 <SCMEMF_WriteExtMemUSMCntlID+0x1e>
     fc0:	01 96       	adiw	r24, 0x01	; 1
     fc2:	e5 e0       	ldi	r30, 0x05	; 5
     fc4:	f1 e1       	ldi	r31, 0x11	; 17
     fc6:	21 e0       	ldi	r18, 0x01	; 1
     fc8:	30 e0       	ldi	r19, 0x00	; 0
	{
		WRITE_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_OFFSET*i + USM_CNTLID_OFFSET) = i+1; //Control ID
     fca:	20 83       	st	Z, r18
     fcc:	2f 5f       	subi	r18, 0xFF	; 255
     fce:	3f 4f       	sbci	r19, 0xFF	; 255
     fd0:	3a 96       	adiw	r30, 0x0a	; 10
}

void SCMEMF_WriteExtMemUSMCntlID(uint8_t totalCnt)
{
	uint16_t i;
	for(i = 0; i<totalCnt; i++)
     fd2:	28 17       	cp	r18, r24
     fd4:	39 07       	cpc	r19, r25
     fd6:	c9 f7       	brne	.-14     	; 0xfca <SCMEMF_WriteExtMemUSMCntlID+0x10>
     fd8:	08 95       	ret

00000fda <SCMEMF_WriteExtMemUSMOPMode>:
}

void SCMEMF_WriteExtMemUSMOPMode(volatile uint8_t *data, uint8_t totalCnt)
{
	uint16_t i, m=0;
	for(i = 0; i<totalCnt; i++)
     fda:	46 2f       	mov	r20, r22
     fdc:	50 e0       	ldi	r21, 0x00	; 0
     fde:	41 15       	cp	r20, r1
     fe0:	51 05       	cpc	r21, r1
     fe2:	79 f0       	breq	.+30     	; 0x1002 <SCMEMF_WriteExtMemUSMOPMode+0x28>
     fe4:	fc 01       	movw	r30, r24
     fe6:	31 96       	adiw	r30, 0x01	; 1
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
	{
		//if(READ_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_CNTLID_OFFSET + USM_OFFSET*i) == data[m])
		//{
		//	WRITE_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_OFFSET*i + USM_MODE_OFFSET) = data[m + MAX_CNTLID_BYTE];
			G_usmOPMode[i] = data[m + MAX_CNTLID_BYTE];
     fec:	80 81       	ld	r24, Z
     fee:	d9 01       	movw	r26, r18
     ff0:	a7 5e       	subi	r26, 0xE7	; 231
     ff2:	ba 4f       	sbci	r27, 0xFA	; 250
     ff4:	8c 93       	st	X, r24
}

void SCMEMF_WriteExtMemUSMOPMode(volatile uint8_t *data, uint8_t totalCnt)
{
	uint16_t i, m=0;
	for(i = 0; i<totalCnt; i++)
     ff6:	2f 5f       	subi	r18, 0xFF	; 255
     ff8:	3f 4f       	sbci	r19, 0xFF	; 255
     ffa:	32 96       	adiw	r30, 0x02	; 2
     ffc:	24 17       	cp	r18, r20
     ffe:	35 07       	cpc	r19, r21
    1000:	a9 f7       	brne	.-22     	; 0xfec <SCMEMF_WriteExtMemUSMOPMode+0x12>
			G_usmOPMode[i] = data[m + MAX_CNTLID_BYTE];
			m=m+MAX_CNTLID_BYTE+MAX_OPMODE_BYTE;

		//}
	}
	G_SULCR |= UOCF5;
    1002:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1006:	80 62       	ori	r24, 0x20	; 32
    1008:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    100c:	08 95       	ret

0000100e <SCMEMF_WriteExtMemLGMOPMode>:
}

void SCMEMF_WriteExtMemLGMOPMode(volatile uint8_t *data, uint8_t totalCnt)
{
		uint16_t i, m=0;
	for(i = 0; i<totalCnt; i++)
    100e:	70 e0       	ldi	r23, 0x00	; 0
    1010:	61 15       	cp	r22, r1
    1012:	71 05       	cpc	r23, r1
    1014:	79 f0       	breq	.+30     	; 0x1034 <SCMEMF_WriteExtMemLGMOPMode+0x26>
    1016:	fc 01       	movw	r30, r24
    1018:	31 96       	adiw	r30, 0x01	; 1
    101a:	20 e0       	ldi	r18, 0x00	; 0
    101c:	30 e0       	ldi	r19, 0x00	; 0
	{
		//if(READ_XMEM_ADDR(XMEM_BASE_ADDR_LGM + LGM_CNTLID_OFFSET + LGM_OFFSET*i) == data[m]-128)
		//{
			//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_LGM +LGM_OFFSET*i+ LGM_MODE_OFFSET) = data[m + MAX_CNTLID_BYTE];
			G_lgmOPMode[i] = data[m + MAX_CNTLID_BYTE];
    101e:	80 81       	ld	r24, Z
    1020:	d9 01       	movw	r26, r18
    1022:	af 50       	subi	r26, 0x0F	; 15
    1024:	bb 4f       	sbci	r27, 0xFB	; 251
    1026:	8c 93       	st	X, r24
}

void SCMEMF_WriteExtMemLGMOPMode(volatile uint8_t *data, uint8_t totalCnt)
{
		uint16_t i, m=0;
	for(i = 0; i<totalCnt; i++)
    1028:	2f 5f       	subi	r18, 0xFF	; 255
    102a:	3f 4f       	sbci	r19, 0xFF	; 255
    102c:	32 96       	adiw	r30, 0x02	; 2
    102e:	26 17       	cp	r18, r22
    1030:	37 07       	cpc	r19, r23
    1032:	a9 f7       	brne	.-22     	; 0x101e <SCMEMF_WriteExtMemLGMOPMode+0x10>
			m=m+MAX_CNTLID_BYTE+MAX_OPMODE_BYTE;
			
//		}
	}
	
	G_SULCR |= LOCF6;
    1034:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1038:	80 64       	ori	r24, 0x40	; 64
    103a:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    103e:	08 95       	ret

00001040 <SCMEMF_WriteExtMemUSMParam>:
}

void SCMEMF_WriteExtMemUSMParam(volatile uint8_t *data, uint8_t totalCnt)
{
    1040:	cf 93       	push	r28
    1042:	df 93       	push	r29
	uint16_t i, j, m=0;
	for(i = 0; i<totalCnt; i++)
    1044:	c6 2f       	mov	r28, r22
    1046:	d0 e0       	ldi	r29, 0x00	; 0
    1048:	20 97       	sbiw	r28, 0x00	; 0
    104a:	f9 f0       	breq	.+62     	; 0x108a <SCMEMF_WriteExtMemUSMParam+0x4a>
    104c:	bc 01       	movw	r22, r24
    104e:	6f 5f       	subi	r22, 0xFF	; 255
    1050:	7f 4f       	sbci	r23, 0xFF	; 255
    1052:	cc 0f       	add	r28, r28
    1054:	dd 1f       	adc	r29, r29
    1056:	cc 0f       	add	r28, r28
    1058:	dd 1f       	adc	r29, r29
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	10 c0       	rjmp	.+32     	; 0x1080 <SCMEMF_WriteExtMemUSMParam+0x40>
		//if(READ_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_CNTLID_OFFSET + USM_OFFSET*i) == data[m])
		//{
			for(j=MAX_CNTLID_BYTE; j<MAX_USM_PARAM_CNT+MAX_CNTLID_BYTE; j++)
			{
				//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_OFFSET*i + USM_PARAM1_OFFSET+j-1) = data[m + j];
				G_usmParam[i*4+j-1] = data[m + j];
    1060:	91 91       	ld	r25, Z+
    1062:	d9 01       	movw	r26, r18
    1064:	af 5e       	subi	r26, 0xEF	; 239
    1066:	bc 4f       	sbci	r27, 0xFC	; 252
    1068:	9c 93       	st	X, r25
    106a:	2f 5f       	subi	r18, 0xFF	; 255
    106c:	3f 4f       	sbci	r19, 0xFF	; 255
	uint16_t i, j, m=0;
	for(i = 0; i<totalCnt; i++)
	{
		//if(READ_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_CNTLID_OFFSET + USM_OFFSET*i) == data[m])
		//{
			for(j=MAX_CNTLID_BYTE; j<MAX_USM_PARAM_CNT+MAX_CNTLID_BYTE; j++)
    106e:	42 17       	cp	r20, r18
    1070:	53 07       	cpc	r21, r19
    1072:	b1 f7       	brne	.-20     	; 0x1060 <SCMEMF_WriteExtMemUSMParam+0x20>
    1074:	6b 5f       	subi	r22, 0xFB	; 251
    1076:	7f 4f       	sbci	r23, 0xFF	; 255
    1078:	9a 01       	movw	r18, r20
}

void SCMEMF_WriteExtMemUSMParam(volatile uint8_t *data, uint8_t totalCnt)
{
	uint16_t i, j, m=0;
	for(i = 0; i<totalCnt; i++)
    107a:	4c 17       	cp	r20, r28
    107c:	5d 07       	cpc	r21, r29
    107e:	29 f0       	breq	.+10     	; 0x108a <SCMEMF_WriteExtMemUSMParam+0x4a>
    1080:	a9 01       	movw	r20, r18
    1082:	4c 5f       	subi	r20, 0xFC	; 252
    1084:	5f 4f       	sbci	r21, 0xFF	; 255
	
	G_SULCR |= LOCF6;
}

void SCMEMF_WriteExtMemUSMParam(volatile uint8_t *data, uint8_t totalCnt)
{
    1086:	fb 01       	movw	r30, r22
    1088:	eb cf       	rjmp	.-42     	; 0x1060 <SCMEMF_WriteExtMemUSMParam+0x20>
			
			m=m+MAX_USM_PARAM_CNT+MAX_CNTLID_BYTE;
//		}
	}
	
	G_SULCR |= UPCF4;
    108a:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    108e:	80 61       	ori	r24, 0x10	; 16
    1090:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
}
    1094:	df 91       	pop	r29
    1096:	cf 91       	pop	r28
    1098:	08 95       	ret

0000109a <SCMEMF_WriteExtMemUSMtoLGM>:

void SCMEMF_WriteExtMemUSMtoLGM(volatile uint8_t *data, uint8_t totalCnt)
{
    109a:	1f 93       	push	r17
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	ec 01       	movw	r28, r24
	uint16_t i, m=0;
	uint16_t tmpData;
	
	SCMPLCF_lgmTotalCntBuffInit();
    10a2:	16 2f       	mov	r17, r22
	for(i = 0; i<totalCnt; i++)
    10a4:	2a da       	rcall	.-2988   	; 0x4fa <SCMPLCF_lgmTotalCntBuffInit>
    10a6:	41 2f       	mov	r20, r17
    10a8:	50 e0       	ldi	r21, 0x00	; 0
    10aa:	41 15       	cp	r20, r1
    10ac:	51 05       	cpc	r21, r1
    10ae:	b1 f0       	breq	.+44     	; 0x10dc <SCMEMF_WriteExtMemUSMtoLGM+0x42>
    10b0:	de 01       	movw	r26, r28
    10b2:	11 96       	adiw	r26, 0x01	; 1
    10b4:	80 e0       	ldi	r24, 0x00	; 0
	{
		//if(READ_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_CNTLID_OFFSET + USM_OFFSET*i) == data[m])
		//{
			//WRITE_XMEM_ADDR(XMEM_BASE_ADDR_USM + USM_OFFSET*i + USM_LGMID_OFFSET) = data[m + MAX_CNTLID_BYTE]-128;
			G_usmTolgm[i] = data[m + MAX_CNTLID_BYTE]-128;
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	2c 91       	ld	r18, X
    10ba:	20 58       	subi	r18, 0x80	; 128
    10bc:	fc 01       	movw	r30, r24
    10be:	ef 56       	subi	r30, 0x6F	; 111
    10c0:	fa 4f       	sbci	r31, 0xFA	; 250

			tmpData = data[m + MAX_CNTLID_BYTE] -128;
    10c2:	20 83       	st	Z, r18
    10c4:	ec 91       	ld	r30, X
			G_lgmTotalCnt[tmpData] ++;
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	e1 5a       	subi	r30, 0xA1	; 161
    10ca:	f2 4f       	sbci	r31, 0xF2	; 242
    10cc:	20 81       	ld	r18, Z
    10ce:	2f 5f       	subi	r18, 0xFF	; 255
{
	uint16_t i, m=0;
	uint16_t tmpData;
	
	SCMPLCF_lgmTotalCntBuffInit();
	for(i = 0; i<totalCnt; i++)
    10d0:	20 83       	st	Z, r18
    10d2:	01 96       	adiw	r24, 0x01	; 1
    10d4:	12 96       	adiw	r26, 0x02	; 2
    10d6:	84 17       	cp	r24, r20
    10d8:	95 07       	cpc	r25, r21
			G_lgmTotalCnt[tmpData] ++;

			m=m+MAX_USM_TO_LCM_CNT+MAX_CNTLID_BYTE;
//		}
	}
	G_SULCR |= ULCF7;
    10da:	71 f7       	brne	.-36     	; 0x10b8 <SCMEMF_WriteExtMemUSMtoLGM+0x1e>
    10dc:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    10e0:	80 68       	ori	r24, 0x80	; 128
    10e2:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
}
    10e6:	df 91       	pop	r29
    10e8:	cf 91       	pop	r28
    10ea:	1f 91       	pop	r17
    10ec:	08 95       	ret

000010ee <main>:
#include "IGS_SCM_Function_485.h"
#include "IGS_SCM_Function_PLC.h"
#include "IGS_SCM_Function_ExtMem.h"

int main(void)
{
    10ee:	df 92       	push	r13
    10f0:	ef 92       	push	r14
    10f2:	ff 92       	push	r15
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28

	uint8_t longCommandH, longCommandL;
	uint16_t ResLength;
	//SCMTF_SetClock();
	SCMTF_PortInit();
    10fa:	df 93       	push	r29
    10fc:	6b d8       	rcall	.-3882   	; 0x1d4 <SCMTF_PortInit>
    10fe:	cc de       	rcall	.-616    	; 0xe98 <SCM485F_ExtMemInit>
    1100:	80 d8       	rcall	.-3840   	; 0x202 <SCMTF_ReadDipSwitchValueMYID>
    1102:	80 93 9b 08 	sts	0x089B, r24	; 0x80089b <G_idDipValue>
    1106:	85 d8       	rcall	.-3830   	; 0x212 <SCMTF_ReadDipSwitchValueMode>
    1108:	80 93 a0 08 	sts	0x08A0, r24	; 0x8008a0 <G_cntlmodeDipValue>
    110c:	86 d8       	rcall	.-3828   	; 0x21a <SCMTF_ReadDipSwitchValueTest>
    110e:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <G_testmodeDipValue>
    1112:	10 92 8c 08 	sts	0x088C, r1	; 0x80088c <G_SULCR>
    1116:	80 91 a0 08 	lds	r24, 0x08A0	; 0x8008a0 <G_cntlmodeDipValue>
    111a:	81 11       	cpse	r24, r1
    111c:	15 c0       	rjmp	.+42     	; 0x1148 <__stack+0x49>
    111e:	85 d8       	rcall	.-3830   	; 0x22a <SCM485F_USART0Init>
    1120:	8e d8       	rcall	.-3812   	; 0x23e <SCM485F_RxCompleteTimerInit>
    1122:	10 92 b4 0d 	sts	0x0DB4, r1	; 0x800db4 <G_rxBuf485+0x1e3>
    1126:	10 92 b3 0d 	sts	0x0DB3, r1	; 0x800db3 <G_rxBuf485+0x1e2>
    112a:	10 92 b2 0d 	sts	0x0DB2, r1	; 0x800db2 <G_rxBuf485+0x1e1>
    112e:	10 92 b1 0d 	sts	0x0DB1, r1	; 0x800db1 <G_rxBuf485+0x1e0>
    1132:	10 92 a3 0b 	sts	0x0BA3, r1	; 0x800ba3 <G_txBuf485+0x1e3>
    1136:	10 92 a2 0b 	sts	0x0BA2, r1	; 0x800ba2 <G_txBuf485+0x1e2>
    113a:	10 92 a1 0b 	sts	0x0BA1, r1	; 0x800ba1 <G_txBuf485+0x1e1>
    113e:	10 92 a0 0b 	sts	0x0BA0, r1	; 0x800ba0 <G_txBuf485+0x1e0>
    1142:	a6 d9       	rcall	.-3252   	; 0x490 <SCMPLCF_StatusUSMBuffInit>
    1144:	9f d9       	rcall	.-3266   	; 0x484 <SCMPLCF_PLCTxTimerInit>
    1146:	10 c0       	rjmp	.+32     	; 0x1168 <__stack+0x69>
    1148:	84 e6       	ldi	r24, 0x64	; 100
    114a:	80 93 9a 08 	sts	0x089A, r24	; 0x80089a <G_totalUSMCnt>
    114e:	c3 e0       	ldi	r28, 0x03	; 3
    1150:	c0 93 8c 08 	sts	0x088C, r28	; 0x80088c <G_SULCR>
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	80 93 90 08 	sts	0x0890, r24	; 0x800890 <G_usmSensingF>
    115a:	85 e0       	ldi	r24, 0x05	; 5
    115c:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <G_txCntlBufPLC>
    1160:	84 e6       	ldi	r24, 0x64	; 100
    1162:	2b df       	rcall	.-426    	; 0xfba <SCMEMF_WriteExtMemUSMCntlID>
    1164:	8f d9       	rcall	.-3298   	; 0x484 <SCMPLCF_PLCTxTimerInit>
    1166:	c5 bd       	out	0x25, r28	; 37
    1168:	78 94       	sei
    116a:	dd 24       	eor	r13, r13
    116c:	d3 94       	inc	r13
    116e:	0f 2e       	mov	r0, r31
    1170:	fa e0       	ldi	r31, 0x0A	; 10
    1172:	ef 2e       	mov	r14, r31
    1174:	fe e0       	ldi	r31, 0x0E	; 14
    1176:	ff 2e       	mov	r15, r31
    1178:	f0 2d       	mov	r31, r0
    117a:	53 d8       	rcall	.-3930   	; 0x222 <SCMTF_CheckOverCurrent>
    117c:	81 11       	cpse	r24, r1
    117e:	0a c0       	rjmp	.+20     	; 0x1194 <__stack+0x95>
    1180:	87 ec       	ldi	r24, 0xC7	; 199
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	01 97       	sbiw	r24, 0x01	; 1
    1186:	f1 f7       	brne	.-4      	; 0x1184 <__stack+0x85>
    1188:	00 c0       	rjmp	.+0      	; 0x118a <__stack+0x8b>
    118a:	00 00       	nop
    118c:	4a d8       	rcall	.-3948   	; 0x222 <SCMTF_CheckOverCurrent>
    118e:	88 23       	and	r24, r24
    1190:	09 f4       	brne	.+2      	; 0x1194 <__stack+0x95>
    1192:	ae c1       	rjmp	.+860    	; 0x14f0 <__stack+0x3f1>
    1194:	c0 91 94 08 	lds	r28, 0x0894	; 0x800894 <G_RSCOMR>
    1198:	d0 91 95 08 	lds	r29, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    119c:	1d 2f       	mov	r17, r29
    119e:	dd 23       	and	r29, r29
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <__stack+0xa5>
    11a2:	13 c1       	rjmp	.+550    	; 0x13ca <__stack+0x2cb>
    11a4:	cd 2f       	mov	r28, r29
    11a6:	d0 ff       	sbrs	r29, 0
    11a8:	2f c0       	rjmp	.+94     	; 0x1208 <__stack+0x109>
    11aa:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    11ae:	8e 7f       	andi	r24, 0xFE	; 254
    11b0:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    11b4:	6d d9       	rcall	.-3366   	; 0x490 <SCMPLCF_StatusUSMBuffInit>
    11b6:	f7 01       	movw	r30, r14
    11b8:	66 81       	ldd	r22, Z+6	; 0x06
    11ba:	77 81       	ldd	r23, Z+7	; 0x07
    11bc:	76 95       	lsr	r23
    11be:	67 95       	ror	r22
    11c0:	76 95       	lsr	r23
    11c2:	67 95       	ror	r22
    11c4:	60 93 9a 08 	sts	0x089A, r22	; 0x80089a <G_totalUSMCnt>
    11c8:	60 93 48 09 	sts	0x0948, r22	; 0x800948 <G_StatusBufUSMtoSCM>
    11cc:	82 e1       	ldi	r24, 0x12	; 18
    11ce:	9e e0       	ldi	r25, 0x0E	; 14
    11d0:	73 de       	rcall	.-794    	; 0xeb8 <SCMEMF_WriteExtMemUSMAddr>
    11d2:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    11d6:	81 11       	cpse	r24, r1
    11d8:	07 c0       	rjmp	.+14     	; 0x11e8 <__stack+0xe9>
    11da:	40 e0       	ldi	r20, 0x00	; 0
    11dc:	50 e0       	ldi	r21, 0x00	; 0
    11de:	60 e0       	ldi	r22, 0x00	; 0
    11e0:	70 e0       	ldi	r23, 0x00	; 0
    11e2:	82 e4       	ldi	r24, 0x42	; 66
    11e4:	07 d9       	rcall	.-3570   	; 0x3f4 <SCM485F_makeTxPacket>
    11e6:	06 c0       	rjmp	.+12     	; 0x11f4 <__stack+0xf5>
    11e8:	40 e0       	ldi	r20, 0x00	; 0
    11ea:	50 e0       	ldi	r21, 0x00	; 0
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	70 e0       	ldi	r23, 0x00	; 0
    11f0:	81 e3       	ldi	r24, 0x31	; 49
    11f2:	00 d9       	rcall	.-3584   	; 0x3f4 <SCM485F_makeTxPacket>
    11f4:	10 92 92 08 	sts	0x0892, r1	; 0x800892 <G_plcUSMCurrentIndex>
    11f8:	10 92 90 08 	sts	0x0890, r1	; 0x800890 <G_usmSensingF>
    11fc:	10 92 10 03 	sts	0x0310, r1	; 0x800310 <__data_end>
    1200:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    1204:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    1208:	c1 ff       	sbrs	r28, 1
    120a:	2b c0       	rjmp	.+86     	; 0x1262 <__stack+0x163>
    120c:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1210:	8d 7f       	andi	r24, 0xFD	; 253
    1212:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    1216:	53 d9       	rcall	.-3418   	; 0x4be <SCMPLCF_StatusLGMBuffInit>
    1218:	f7 01       	movw	r30, r14
    121a:	66 81       	ldd	r22, Z+6	; 0x06
    121c:	77 81       	ldd	r23, Z+7	; 0x07
    121e:	76 95       	lsr	r23
    1220:	67 95       	ror	r22
    1222:	76 95       	lsr	r23
    1224:	67 95       	ror	r22
    1226:	60 93 99 08 	sts	0x0899, r22	; 0x800899 <G_totalLGMCnt>
    122a:	60 93 20 09 	sts	0x0920, r22	; 0x800920 <G_StatusBufLGMtoSCM>
    122e:	82 e1       	ldi	r24, 0x12	; 18
    1230:	9e e0       	ldi	r25, 0x0E	; 14
    1232:	81 de       	rcall	.-766    	; 0xf36 <SCMEMF_WriteExtMemLGMAddr>
    1234:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1238:	81 11       	cpse	r24, r1
    123a:	07 c0       	rjmp	.+14     	; 0x124a <__stack+0x14b>
    123c:	40 e0       	ldi	r20, 0x00	; 0
    123e:	50 e0       	ldi	r21, 0x00	; 0
    1240:	60 e0       	ldi	r22, 0x00	; 0
    1242:	70 e0       	ldi	r23, 0x00	; 0
    1244:	82 e4       	ldi	r24, 0x42	; 66
    1246:	d6 d8       	rcall	.-3668   	; 0x3f4 <SCM485F_makeTxPacket>
    1248:	06 c0       	rjmp	.+12     	; 0x1256 <__stack+0x157>
    124a:	40 e0       	ldi	r20, 0x00	; 0
    124c:	50 e0       	ldi	r21, 0x00	; 0
    124e:	60 e0       	ldi	r22, 0x00	; 0
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	81 e3       	ldi	r24, 0x31	; 49
    1254:	cf d8       	rcall	.-3682   	; 0x3f4 <SCM485F_makeTxPacket>
    1256:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <G_plcLGMCurrentIndex>
    125a:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    125e:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    1262:	c2 ff       	sbrs	r28, 2
    1264:	1a c0       	rjmp	.+52     	; 0x129a <__stack+0x19b>
    1266:	60 91 9a 08 	lds	r22, 0x089A	; 0x80089a <G_totalUSMCnt>
    126a:	82 e1       	ldi	r24, 0x12	; 18
    126c:	9e e0       	ldi	r25, 0x0E	; 14
    126e:	15 df       	rcall	.-470    	; 0x109a <SCMEMF_WriteExtMemUSMtoLGM>
    1270:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1274:	81 11       	cpse	r24, r1
    1276:	07 c0       	rjmp	.+14     	; 0x1286 <__stack+0x187>
    1278:	40 e0       	ldi	r20, 0x00	; 0
    127a:	50 e0       	ldi	r21, 0x00	; 0
    127c:	60 e0       	ldi	r22, 0x00	; 0
    127e:	70 e0       	ldi	r23, 0x00	; 0
    1280:	82 e4       	ldi	r24, 0x42	; 66
    1282:	b8 d8       	rcall	.-3728   	; 0x3f4 <SCM485F_makeTxPacket>
    1284:	06 c0       	rjmp	.+12     	; 0x1292 <__stack+0x193>
    1286:	40 e0       	ldi	r20, 0x00	; 0
    1288:	50 e0       	ldi	r21, 0x00	; 0
    128a:	60 e0       	ldi	r22, 0x00	; 0
    128c:	70 e0       	ldi	r23, 0x00	; 0
    128e:	81 e3       	ldi	r24, 0x31	; 49
    1290:	b1 d8       	rcall	.-3742   	; 0x3f4 <SCM485F_makeTxPacket>
    1292:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    1296:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    129a:	c3 ff       	sbrs	r28, 3
    129c:	1d c0       	rjmp	.+58     	; 0x12d8 <__stack+0x1d9>
    129e:	d0 92 8e 08 	sts	0x088E, r13	; 0x80088e <G_usmOPModeOnF>
    12a2:	60 91 9a 08 	lds	r22, 0x089A	; 0x80089a <G_totalUSMCnt>
    12a6:	82 e1       	ldi	r24, 0x12	; 18
    12a8:	9e e0       	ldi	r25, 0x0E	; 14
    12aa:	97 de       	rcall	.-722    	; 0xfda <SCMEMF_WriteExtMemUSMOPMode>
    12ac:	f1 d8       	rcall	.-3614   	; 0x490 <SCMPLCF_StatusUSMBuffInit>
    12ae:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    12b2:	81 11       	cpse	r24, r1
    12b4:	07 c0       	rjmp	.+14     	; 0x12c4 <__stack+0x1c5>
    12b6:	40 e0       	ldi	r20, 0x00	; 0
    12b8:	50 e0       	ldi	r21, 0x00	; 0
    12ba:	60 e0       	ldi	r22, 0x00	; 0
    12bc:	70 e0       	ldi	r23, 0x00	; 0
    12be:	82 e4       	ldi	r24, 0x42	; 66
    12c0:	99 d8       	rcall	.-3790   	; 0x3f4 <SCM485F_makeTxPacket>
    12c2:	06 c0       	rjmp	.+12     	; 0x12d0 <__stack+0x1d1>
    12c4:	40 e0       	ldi	r20, 0x00	; 0
    12c6:	50 e0       	ldi	r21, 0x00	; 0
    12c8:	60 e0       	ldi	r22, 0x00	; 0
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	81 e3       	ldi	r24, 0x31	; 49
    12ce:	92 d8       	rcall	.-3804   	; 0x3f4 <SCM485F_makeTxPacket>
    12d0:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    12d4:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    12d8:	c4 ff       	sbrs	r28, 4
    12da:	1d c0       	rjmp	.+58     	; 0x1316 <__stack+0x217>
    12dc:	d0 92 8d 08 	sts	0x088D, r13	; 0x80088d <G_lgmOPModeOnF>
    12e0:	60 91 9a 08 	lds	r22, 0x089A	; 0x80089a <G_totalUSMCnt>
    12e4:	82 e1       	ldi	r24, 0x12	; 18
    12e6:	9e e0       	ldi	r25, 0x0E	; 14
    12e8:	92 de       	rcall	.-732    	; 0x100e <SCMEMF_WriteExtMemLGMOPMode>
    12ea:	e9 d8       	rcall	.-3630   	; 0x4be <SCMPLCF_StatusLGMBuffInit>
    12ec:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    12f0:	81 11       	cpse	r24, r1
    12f2:	07 c0       	rjmp	.+14     	; 0x1302 <__stack+0x203>
    12f4:	40 e0       	ldi	r20, 0x00	; 0
    12f6:	50 e0       	ldi	r21, 0x00	; 0
    12f8:	60 e0       	ldi	r22, 0x00	; 0
    12fa:	70 e0       	ldi	r23, 0x00	; 0
    12fc:	82 e4       	ldi	r24, 0x42	; 66
    12fe:	7a d8       	rcall	.-3852   	; 0x3f4 <SCM485F_makeTxPacket>
    1300:	06 c0       	rjmp	.+12     	; 0x130e <__stack+0x20f>
    1302:	40 e0       	ldi	r20, 0x00	; 0
    1304:	50 e0       	ldi	r21, 0x00	; 0
    1306:	60 e0       	ldi	r22, 0x00	; 0
    1308:	70 e0       	ldi	r23, 0x00	; 0
    130a:	81 e3       	ldi	r24, 0x31	; 49
    130c:	73 d8       	rcall	.-3866   	; 0x3f4 <SCM485F_makeTxPacket>
    130e:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    1312:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    1316:	c5 ff       	sbrs	r28, 5
    1318:	22 c0       	rjmp	.+68     	; 0x135e <__stack+0x25f>
    131a:	19 be       	out	0x39, r1	; 57
    131c:	10 92 90 08 	sts	0x0890, r1	; 0x800890 <G_usmSensingF>
    1320:	60 91 9a 08 	lds	r22, 0x089A	; 0x80089a <G_totalUSMCnt>
    1324:	82 e1       	ldi	r24, 0x12	; 18
    1326:	9e e0       	ldi	r25, 0x0E	; 14
    1328:	8b de       	rcall	.-746    	; 0x1040 <SCMEMF_WriteExtMemUSMParam>
    132a:	10 92 8a 08 	sts	0x088A, r1	; 0x80088a <ParamCnt>
    132e:	10 92 92 08 	sts	0x0892, r1	; 0x800892 <G_plcUSMCurrentIndex>
    1332:	ae d8       	rcall	.-3748   	; 0x490 <SCMPLCF_StatusUSMBuffInit>
    1334:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1338:	81 11       	cpse	r24, r1
    133a:	07 c0       	rjmp	.+14     	; 0x134a <__stack+0x24b>
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	50 e0       	ldi	r21, 0x00	; 0
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	82 e4       	ldi	r24, 0x42	; 66
    1346:	56 d8       	rcall	.-3924   	; 0x3f4 <SCM485F_makeTxPacket>
    1348:	06 c0       	rjmp	.+12     	; 0x1356 <__stack+0x257>
    134a:	40 e0       	ldi	r20, 0x00	; 0
    134c:	50 e0       	ldi	r21, 0x00	; 0
    134e:	60 e0       	ldi	r22, 0x00	; 0
    1350:	70 e0       	ldi	r23, 0x00	; 0
    1352:	81 e3       	ldi	r24, 0x31	; 49
    1354:	4f d8       	rcall	.-3938   	; 0x3f4 <SCM485F_makeTxPacket>
    1356:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    135a:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    135e:	c6 ff       	sbrs	r28, 6
    1360:	18 c0       	rjmp	.+48     	; 0x1392 <__stack+0x293>
    1362:	10 92 8e 08 	sts	0x088E, r1	; 0x80088e <G_usmOPModeOnF>
    1366:	94 d8       	rcall	.-3800   	; 0x490 <SCMPLCF_StatusUSMBuffInit>
    1368:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    136c:	81 11       	cpse	r24, r1
    136e:	07 c0       	rjmp	.+14     	; 0x137e <__stack+0x27f>
    1370:	40 e0       	ldi	r20, 0x00	; 0
    1372:	50 e0       	ldi	r21, 0x00	; 0
    1374:	60 e0       	ldi	r22, 0x00	; 0
    1376:	70 e0       	ldi	r23, 0x00	; 0
    1378:	82 e4       	ldi	r24, 0x42	; 66
    137a:	3c d8       	rcall	.-3976   	; 0x3f4 <SCM485F_makeTxPacket>
    137c:	06 c0       	rjmp	.+12     	; 0x138a <__stack+0x28b>
    137e:	40 e0       	ldi	r20, 0x00	; 0
    1380:	50 e0       	ldi	r21, 0x00	; 0
    1382:	60 e0       	ldi	r22, 0x00	; 0
    1384:	70 e0       	ldi	r23, 0x00	; 0
    1386:	81 e3       	ldi	r24, 0x31	; 49
    1388:	35 d8       	rcall	.-3990   	; 0x3f4 <SCM485F_makeTxPacket>
    138a:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    138e:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    1392:	11 23       	and	r17, r17
    1394:	0c f0       	brlt	.+2      	; 0x1398 <__stack+0x299>
    1396:	f1 ce       	rjmp	.-542    	; 0x117a <__stack+0x7b>
    1398:	10 92 8d 08 	sts	0x088D, r1	; 0x80088d <G_lgmOPModeOnF>
    139c:	90 d8       	rcall	.-3808   	; 0x4be <SCMPLCF_StatusLGMBuffInit>
    139e:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    13a2:	81 11       	cpse	r24, r1
    13a4:	07 c0       	rjmp	.+14     	; 0x13b4 <__stack+0x2b5>
    13a6:	40 e0       	ldi	r20, 0x00	; 0
    13a8:	50 e0       	ldi	r21, 0x00	; 0
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	70 e0       	ldi	r23, 0x00	; 0
    13ae:	82 e4       	ldi	r24, 0x42	; 66
    13b0:	21 d8       	rcall	.-4030   	; 0x3f4 <SCM485F_makeTxPacket>
    13b2:	06 c0       	rjmp	.+12     	; 0x13c0 <__stack+0x2c1>
    13b4:	40 e0       	ldi	r20, 0x00	; 0
    13b6:	50 e0       	ldi	r21, 0x00	; 0
    13b8:	60 e0       	ldi	r22, 0x00	; 0
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	81 e3       	ldi	r24, 0x31	; 49
    13be:	1a d8       	rcall	.-4044   	; 0x3f4 <SCM485F_makeTxPacket>
    13c0:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    13c4:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    13c8:	d8 ce       	rjmp	.-592    	; 0x117a <__stack+0x7b>
    13ca:	cc 23       	and	r28, r28
    13cc:	09 f4       	brne	.+2      	; 0x13d0 <__stack+0x2d1>
    13ce:	d5 ce       	rjmp	.-598    	; 0x117a <__stack+0x7b>
    13d0:	8e 01       	movw	r16, r28
    13d2:	11 27       	eor	r17, r17
    13d4:	c0 ff       	sbrs	r28, 0
    13d6:	1b c0       	rjmp	.+54     	; 0x140e <__stack+0x30f>
    13d8:	60 91 9a 08 	lds	r22, 0x089A	; 0x80089a <G_totalUSMCnt>
    13dc:	61 11       	cpse	r22, r1
    13de:	07 c0       	rjmp	.+14     	; 0x13ee <__stack+0x2ef>
    13e0:	40 e0       	ldi	r20, 0x00	; 0
    13e2:	50 e0       	ldi	r21, 0x00	; 0
    13e4:	60 e0       	ldi	r22, 0x00	; 0
    13e6:	70 e0       	ldi	r23, 0x00	; 0
    13e8:	82 e4       	ldi	r24, 0x42	; 66
    13ea:	04 d8       	rcall	.-4088   	; 0x3f4 <SCM485F_makeTxPacket>
    13ec:	0c c0       	rjmp	.+24     	; 0x1406 <__stack+0x307>
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	6f 5f       	subi	r22, 0xFF	; 255
    13f2:	7f 4f       	sbci	r23, 0xFF	; 255
    13f4:	75 95       	asr	r23
    13f6:	67 95       	ror	r22
    13f8:	6f 5f       	subi	r22, 0xFF	; 255
    13fa:	7f 4f       	sbci	r23, 0xFF	; 255
    13fc:	48 e4       	ldi	r20, 0x48	; 72
    13fe:	59 e0       	ldi	r21, 0x09	; 9
    1400:	81 e1       	ldi	r24, 0x11	; 17
    1402:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    1406:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    140a:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    140e:	01 ff       	sbrs	r16, 1
    1410:	1e c0       	rjmp	.+60     	; 0x144e <__stack+0x34f>
    1412:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1416:	81 11       	cpse	r24, r1
    1418:	08 c0       	rjmp	.+16     	; 0x142a <__stack+0x32b>
    141a:	40 e0       	ldi	r20, 0x00	; 0
    141c:	50 e0       	ldi	r21, 0x00	; 0
    141e:	60 e0       	ldi	r22, 0x00	; 0
    1420:	70 e0       	ldi	r23, 0x00	; 0
    1422:	82 e4       	ldi	r24, 0x42	; 66
    1424:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    1428:	0e c0       	rjmp	.+28     	; 0x1446 <__stack+0x347>
    142a:	60 91 99 08 	lds	r22, 0x0899	; 0x800899 <G_totalLGMCnt>
    142e:	70 e0       	ldi	r23, 0x00	; 0
    1430:	6f 5f       	subi	r22, 0xFF	; 255
    1432:	7f 4f       	sbci	r23, 0xFF	; 255
    1434:	75 95       	asr	r23
    1436:	67 95       	ror	r22
    1438:	6f 5f       	subi	r22, 0xFF	; 255
    143a:	7f 4f       	sbci	r23, 0xFF	; 255
    143c:	40 e2       	ldi	r20, 0x20	; 32
    143e:	59 e0       	ldi	r21, 0x09	; 9
    1440:	82 e1       	ldi	r24, 0x12	; 18
    1442:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    1446:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    144a:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    144e:	02 ff       	sbrs	r16, 2
    1450:	19 c0       	rjmp	.+50     	; 0x1484 <__stack+0x385>
    1452:	d0 92 90 08 	sts	0x0890, r13	; 0x800890 <G_usmSensingF>
    1456:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    145a:	81 11       	cpse	r24, r1
    145c:	08 c0       	rjmp	.+16     	; 0x146e <__stack+0x36f>
    145e:	40 e0       	ldi	r20, 0x00	; 0
    1460:	50 e0       	ldi	r21, 0x00	; 0
    1462:	60 e0       	ldi	r22, 0x00	; 0
    1464:	70 e0       	ldi	r23, 0x00	; 0
    1466:	82 e4       	ldi	r24, 0x42	; 66
    1468:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    146c:	07 c0       	rjmp	.+14     	; 0x147c <__stack+0x37d>
    146e:	40 e0       	ldi	r20, 0x00	; 0
    1470:	50 e0       	ldi	r21, 0x00	; 0
    1472:	60 e0       	ldi	r22, 0x00	; 0
    1474:	70 e0       	ldi	r23, 0x00	; 0
    1476:	81 e3       	ldi	r24, 0x31	; 49
    1478:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    147c:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    1480:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    1484:	03 ff       	sbrs	r16, 3
    1486:	19 c0       	rjmp	.+50     	; 0x14ba <__stack+0x3bb>
    1488:	10 92 90 08 	sts	0x0890, r1	; 0x800890 <G_usmSensingF>
    148c:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1490:	81 11       	cpse	r24, r1
    1492:	08 c0       	rjmp	.+16     	; 0x14a4 <__stack+0x3a5>
    1494:	40 e0       	ldi	r20, 0x00	; 0
    1496:	50 e0       	ldi	r21, 0x00	; 0
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	82 e4       	ldi	r24, 0x42	; 66
    149e:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    14a2:	07 c0       	rjmp	.+14     	; 0x14b2 <__stack+0x3b3>
    14a4:	40 e0       	ldi	r20, 0x00	; 0
    14a6:	50 e0       	ldi	r21, 0x00	; 0
    14a8:	60 e0       	ldi	r22, 0x00	; 0
    14aa:	70 e0       	ldi	r23, 0x00	; 0
    14ac:	81 e3       	ldi	r24, 0x31	; 49
    14ae:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    14b2:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    14b6:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    14ba:	cc 23       	and	r28, r28
    14bc:	0c f0       	brlt	.+2      	; 0x14c0 <__stack+0x3c1>
    14be:	5d ce       	rjmp	.-838    	; 0x117a <__stack+0x7b>
    14c0:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    14c4:	81 11       	cpse	r24, r1
    14c6:	08 c0       	rjmp	.+16     	; 0x14d8 <__stack+0x3d9>
    14c8:	40 e0       	ldi	r20, 0x00	; 0
    14ca:	50 e0       	ldi	r21, 0x00	; 0
    14cc:	60 e0       	ldi	r22, 0x00	; 0
    14ce:	70 e0       	ldi	r23, 0x00	; 0
    14d0:	82 e4       	ldi	r24, 0x42	; 66
    14d2:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    14d6:	07 c0       	rjmp	.+14     	; 0x14e6 <__stack+0x3e7>
    14d8:	40 e0       	ldi	r20, 0x00	; 0
    14da:	50 e0       	ldi	r21, 0x00	; 0
    14dc:	60 e0       	ldi	r22, 0x00	; 0
    14de:	70 e0       	ldi	r23, 0x00	; 0
    14e0:	81 e4       	ldi	r24, 0x41	; 65
    14e2:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <SCM485F_makeTxPacket>
    14e6:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <G_RSCOMR+0x1>
    14ea:	10 92 94 08 	sts	0x0894, r1	; 0x800894 <G_RSCOMR>
    14ee:	45 ce       	rjmp	.-886    	; 0x117a <__stack+0x7b>
    14f0:	80 e1       	ldi	r24, 0x10	; 16
    14f2:	83 b9       	out	0x03, r24	; 3
    14f4:	c4 98       	cbi	0x18, 4	; 24
    14f6:	80 e0       	ldi	r24, 0x00	; 0
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	df 91       	pop	r29
    14fc:	cf 91       	pop	r28
    14fe:	1f 91       	pop	r17
    1500:	0f 91       	pop	r16
    1502:	ff 90       	pop	r15
    1504:	ef 90       	pop	r14
    1506:	df 90       	pop	r13
    1508:	08 95       	ret

0000150a <__vector_18>:
    150a:	1f 92       	push	r1
    150c:	0f 92       	push	r0
    150e:	0f b6       	in	r0, 0x3f	; 63
    1510:	0f 92       	push	r0
    1512:	11 24       	eor	r1, r1
    1514:	0b b6       	in	r0, 0x3b	; 59
    1516:	0f 92       	push	r0
    1518:	2f 93       	push	r18
    151a:	3f 93       	push	r19
    151c:	4f 93       	push	r20
    151e:	5f 93       	push	r21
    1520:	6f 93       	push	r22
    1522:	7f 93       	push	r23
    1524:	8f 93       	push	r24
    1526:	9f 93       	push	r25
    1528:	af 93       	push	r26
    152a:	bf 93       	push	r27
    152c:	ef 93       	push	r30
    152e:	ff 93       	push	r31
    1530:	8c b1       	in	r24, 0x0c	; 12
    1532:	80 93 ce 0b 	sts	0x0BCE, r24	; 0x800bce <u8data>
    1536:	60 91 ce 0b 	lds	r22, 0x0BCE	; 0x800bce <u8data>
    153a:	81 ed       	ldi	r24, 0xD1	; 209
    153c:	9b e0       	ldi	r25, 0x0B	; 11
    153e:	0e 94 2e 01 	call	0x25c	; 0x25c <SCM485F_OneByteWrite_485>
    1542:	81 11       	cpse	r24, r1
    1544:	08 c0       	rjmp	.+16     	; 0x1556 <__vector_18+0x4c>
    1546:	10 92 b4 0d 	sts	0x0DB4, r1	; 0x800db4 <G_rxBuf485+0x1e3>
    154a:	10 92 b3 0d 	sts	0x0DB3, r1	; 0x800db3 <G_rxBuf485+0x1e2>
    154e:	10 92 b2 0d 	sts	0x0DB2, r1	; 0x800db2 <G_rxBuf485+0x1e1>
    1552:	10 92 b1 0d 	sts	0x0DB1, r1	; 0x800db1 <G_rxBuf485+0x1e0>
    1556:	12 be       	out	0x32, r1	; 50
    1558:	84 e0       	ldi	r24, 0x04	; 4
    155a:	83 bf       	out	0x33, r24	; 51
    155c:	c4 9a       	sbi	0x18, 4	; 24
    155e:	c5 9a       	sbi	0x18, 5	; 24
    1560:	c6 9a       	sbi	0x18, 6	; 24
    1562:	ff 91       	pop	r31
    1564:	ef 91       	pop	r30
    1566:	bf 91       	pop	r27
    1568:	af 91       	pop	r26
    156a:	9f 91       	pop	r25
    156c:	8f 91       	pop	r24
    156e:	7f 91       	pop	r23
    1570:	6f 91       	pop	r22
    1572:	5f 91       	pop	r21
    1574:	4f 91       	pop	r20
    1576:	3f 91       	pop	r19
    1578:	2f 91       	pop	r18
    157a:	0f 90       	pop	r0
    157c:	0b be       	out	0x3b, r0	; 59
    157e:	0f 90       	pop	r0
    1580:	0f be       	out	0x3f, r0	; 63
    1582:	0f 90       	pop	r0
    1584:	1f 90       	pop	r1
    1586:	18 95       	reti

00001588 <__vector_16>:
    1588:	1f 92       	push	r1
    158a:	0f 92       	push	r0
    158c:	0f b6       	in	r0, 0x3f	; 63
    158e:	0f 92       	push	r0
    1590:	11 24       	eor	r1, r1
    1592:	0b b6       	in	r0, 0x3b	; 59
    1594:	0f 92       	push	r0
    1596:	2f 93       	push	r18
    1598:	3f 93       	push	r19
    159a:	4f 93       	push	r20
    159c:	5f 93       	push	r21
    159e:	6f 93       	push	r22
    15a0:	7f 93       	push	r23
    15a2:	8f 93       	push	r24
    15a4:	9f 93       	push	r25
    15a6:	af 93       	push	r26
    15a8:	bf 93       	push	r27
    15aa:	ef 93       	push	r30
    15ac:	ff 93       	push	r31
    15ae:	12 be       	out	0x32, r1	; 50
    15b0:	80 91 97 08 	lds	r24, 0x0897	; 0x800897 <G_485TimerOverFlowCnt>
    15b4:	8f 5f       	subi	r24, 0xFF	; 255
    15b6:	80 93 97 08 	sts	0x0897, r24	; 0x800897 <G_485TimerOverFlowCnt>
    15ba:	80 91 97 08 	lds	r24, 0x0897	; 0x800897 <G_485TimerOverFlowCnt>
    15be:	81 30       	cpi	r24, 0x01	; 1
    15c0:	09 f0       	breq	.+2      	; 0x15c4 <__vector_16+0x3c>
    15c2:	ad c0       	rjmp	.+346    	; 0x171e <__vector_16+0x196>
    15c4:	13 be       	out	0x33, r1	; 51
    15c6:	10 92 b4 0d 	sts	0x0DB4, r1	; 0x800db4 <G_rxBuf485+0x1e3>
    15ca:	10 92 b3 0d 	sts	0x0DB3, r1	; 0x800db3 <G_rxBuf485+0x1e2>
    15ce:	10 92 b2 0d 	sts	0x0DB2, r1	; 0x800db2 <G_rxBuf485+0x1e1>
    15d2:	10 92 b1 0d 	sts	0x0DB1, r1	; 0x800db1 <G_rxBuf485+0x1e0>
    15d6:	10 92 a3 0b 	sts	0x0BA3, r1	; 0x800ba3 <G_txBuf485+0x1e3>
    15da:	10 92 a2 0b 	sts	0x0BA2, r1	; 0x800ba2 <G_txBuf485+0x1e2>
    15de:	10 92 a1 0b 	sts	0x0BA1, r1	; 0x800ba1 <G_txBuf485+0x1e1>
    15e2:	10 92 a0 0b 	sts	0x0BA0, r1	; 0x800ba0 <G_txBuf485+0x1e0>
    15e6:	10 92 97 08 	sts	0x0897, r1	; 0x800897 <G_485TimerOverFlowCnt>
    15ea:	0e 94 85 01 	call	0x30a	; 0x30a <SCM485F_getRxPacket>
    15ee:	81 30       	cpi	r24, 0x01	; 1
    15f0:	31 f0       	breq	.+12     	; 0x15fe <__vector_16+0x76>
    15f2:	18 f0       	brcs	.+6      	; 0x15fa <__vector_16+0x72>
    15f4:	83 30       	cpi	r24, 0x03	; 3
    15f6:	29 f0       	breq	.+10     	; 0x1602 <__vector_16+0x7a>
    15f8:	92 c0       	rjmp	.+292    	; 0x171e <__vector_16+0x196>
    15fa:	c6 98       	cbi	0x18, 6	; 24
    15fc:	90 c0       	rjmp	.+288    	; 0x171e <__vector_16+0x196>
    15fe:	c6 98       	cbi	0x18, 6	; 24
    1600:	8e c0       	rjmp	.+284    	; 0x171e <__vector_16+0x196>
    1602:	e0 91 0f 0e 	lds	r30, 0x0E0F	; 0x800e0f <G_485Packet+0x5>
    1606:	8e 2f       	mov	r24, r30
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	fc 01       	movw	r30, r24
    160c:	31 97       	sbiw	r30, 0x01	; 1
    160e:	e2 36       	cpi	r30, 0x62	; 98
    1610:	f1 05       	cpc	r31, r1
    1612:	08 f0       	brcs	.+2      	; 0x1616 <__vector_16+0x8e>
    1614:	7b c0       	rjmp	.+246    	; 0x170c <__vector_16+0x184>
    1616:	ea 5b       	subi	r30, 0xBA	; 186
    1618:	ff 4f       	sbci	r31, 0xFF	; 255
    161a:	d8 c4       	rjmp	.+2480   	; 0x1fcc <__tablejump2__>
    161c:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    1620:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    1624:	91 60       	ori	r25, 0x01	; 1
    1626:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    162a:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    162e:	77 c0       	rjmp	.+238    	; 0x171e <__vector_16+0x196>
    1630:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    1634:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    1638:	92 60       	ori	r25, 0x02	; 2
    163a:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    163e:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    1642:	6d c0       	rjmp	.+218    	; 0x171e <__vector_16+0x196>
    1644:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    1648:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    164c:	94 60       	ori	r25, 0x04	; 4
    164e:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    1652:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    1656:	63 c0       	rjmp	.+198    	; 0x171e <__vector_16+0x196>
    1658:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    165c:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    1660:	98 60       	ori	r25, 0x08	; 8
    1662:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    1666:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    166a:	59 c0       	rjmp	.+178    	; 0x171e <__vector_16+0x196>
    166c:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    1670:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    1674:	90 61       	ori	r25, 0x10	; 16
    1676:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    167a:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    167e:	4f c0       	rjmp	.+158    	; 0x171e <__vector_16+0x196>
    1680:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    1684:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    1688:	90 62       	ori	r25, 0x20	; 32
    168a:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    168e:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    1692:	45 c0       	rjmp	.+138    	; 0x171e <__vector_16+0x196>
    1694:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    1698:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    169c:	90 64       	ori	r25, 0x40	; 64
    169e:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    16a2:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    16a6:	3b c0       	rjmp	.+118    	; 0x171e <__vector_16+0x196>
    16a8:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    16ac:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    16b0:	90 68       	ori	r25, 0x80	; 128
    16b2:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    16b6:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    16ba:	31 c0       	rjmp	.+98     	; 0x171e <__vector_16+0x196>
    16bc:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    16c0:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    16c4:	81 60       	ori	r24, 0x01	; 1
    16c6:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    16ca:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    16ce:	27 c0       	rjmp	.+78     	; 0x171e <__vector_16+0x196>
    16d0:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    16d4:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    16d8:	82 60       	ori	r24, 0x02	; 2
    16da:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    16de:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    16e2:	1d c0       	rjmp	.+58     	; 0x171e <__vector_16+0x196>
    16e4:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    16e8:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    16ec:	84 60       	ori	r24, 0x04	; 4
    16ee:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    16f2:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    16f6:	13 c0       	rjmp	.+38     	; 0x171e <__vector_16+0x196>
    16f8:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    16fc:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    1700:	88 60       	ori	r24, 0x08	; 8
    1702:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    1706:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    170a:	09 c0       	rjmp	.+18     	; 0x171e <__vector_16+0x196>
    170c:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <G_RSCOMR>
    1710:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <G_RSCOMR+0x1>
    1714:	80 68       	ori	r24, 0x80	; 128
    1716:	90 93 95 08 	sts	0x0895, r25	; 0x800895 <G_RSCOMR+0x1>
    171a:	80 93 94 08 	sts	0x0894, r24	; 0x800894 <G_RSCOMR>
    171e:	ff 91       	pop	r31
    1720:	ef 91       	pop	r30
    1722:	bf 91       	pop	r27
    1724:	af 91       	pop	r26
    1726:	9f 91       	pop	r25
    1728:	8f 91       	pop	r24
    172a:	7f 91       	pop	r23
    172c:	6f 91       	pop	r22
    172e:	5f 91       	pop	r21
    1730:	4f 91       	pop	r20
    1732:	3f 91       	pop	r19
    1734:	2f 91       	pop	r18
    1736:	0f 90       	pop	r0
    1738:	0b be       	out	0x3b, r0	; 59
    173a:	0f 90       	pop	r0
    173c:	0f be       	out	0x3f, r0	; 63
    173e:	0f 90       	pop	r0
    1740:	1f 90       	pop	r1
    1742:	18 95       	reti

00001744 <__vector_19>:
    1744:	1f 92       	push	r1
    1746:	0f 92       	push	r0
    1748:	0f b6       	in	r0, 0x3f	; 63
    174a:	0f 92       	push	r0
    174c:	11 24       	eor	r1, r1
    174e:	0b b6       	in	r0, 0x3b	; 59
    1750:	0f 92       	push	r0
    1752:	2f 93       	push	r18
    1754:	3f 93       	push	r19
    1756:	4f 93       	push	r20
    1758:	5f 93       	push	r21
    175a:	6f 93       	push	r22
    175c:	7f 93       	push	r23
    175e:	8f 93       	push	r24
    1760:	9f 93       	push	r25
    1762:	af 93       	push	r26
    1764:	bf 93       	push	r27
    1766:	ef 93       	push	r30
    1768:	ff 93       	push	r31
    176a:	6c e2       	ldi	r22, 0x2C	; 44
    176c:	70 e0       	ldi	r23, 0x00	; 0
    176e:	80 ec       	ldi	r24, 0xC0	; 192
    1770:	99 e0       	ldi	r25, 0x09	; 9
    1772:	0e 94 45 01 	call	0x28a	; 0x28a <SCM485F_OneByteRead_485>
    1776:	81 30       	cpi	r24, 0x01	; 1
    1778:	11 f4       	brne	.+4      	; 0x177e <__vector_19+0x3a>
    177a:	55 98       	cbi	0x0a, 5	; 10
    177c:	56 9a       	sbi	0x0a, 6	; 10
    177e:	ff 91       	pop	r31
    1780:	ef 91       	pop	r30
    1782:	bf 91       	pop	r27
    1784:	af 91       	pop	r26
    1786:	9f 91       	pop	r25
    1788:	8f 91       	pop	r24
    178a:	7f 91       	pop	r23
    178c:	6f 91       	pop	r22
    178e:	5f 91       	pop	r21
    1790:	4f 91       	pop	r20
    1792:	3f 91       	pop	r19
    1794:	2f 91       	pop	r18
    1796:	0f 90       	pop	r0
    1798:	0b be       	out	0x3b, r0	; 59
    179a:	0f 90       	pop	r0
    179c:	0f be       	out	0x3f, r0	; 63
    179e:	0f 90       	pop	r0
    17a0:	1f 90       	pop	r1
    17a2:	18 95       	reti

000017a4 <__vector_20>:
    17a4:	1f 92       	push	r1
    17a6:	0f 92       	push	r0
    17a8:	0f b6       	in	r0, 0x3f	; 63
    17aa:	0f 92       	push	r0
    17ac:	11 24       	eor	r1, r1
    17ae:	8f 93       	push	r24
    17b0:	56 98       	cbi	0x0a, 6	; 10
    17b2:	57 9a       	sbi	0x0a, 7	; 10
    17b4:	1a 9a       	sbi	0x03, 2	; 3
    17b6:	83 e0       	ldi	r24, 0x03	; 3
    17b8:	85 bd       	out	0x25, r24	; 37
    17ba:	14 bc       	out	0x24, r1	; 36
    17bc:	8f 91       	pop	r24
    17be:	0f 90       	pop	r0
    17c0:	0f be       	out	0x3f, r0	; 63
    17c2:	0f 90       	pop	r0
    17c4:	1f 90       	pop	r1
    17c6:	18 95       	reti

000017c8 <__vector_10>:
    17c8:	1f 92       	push	r1
    17ca:	0f 92       	push	r0
    17cc:	0f b6       	in	r0, 0x3f	; 63
    17ce:	0f 92       	push	r0
    17d0:	11 24       	eor	r1, r1
    17d2:	0b b6       	in	r0, 0x3b	; 59
    17d4:	0f 92       	push	r0
    17d6:	df 92       	push	r13
    17d8:	ef 92       	push	r14
    17da:	ff 92       	push	r15
    17dc:	0f 93       	push	r16
    17de:	1f 93       	push	r17
    17e0:	2f 93       	push	r18
    17e2:	3f 93       	push	r19
    17e4:	4f 93       	push	r20
    17e6:	5f 93       	push	r21
    17e8:	6f 93       	push	r22
    17ea:	7f 93       	push	r23
    17ec:	8f 93       	push	r24
    17ee:	9f 93       	push	r25
    17f0:	af 93       	push	r26
    17f2:	bf 93       	push	r27
    17f4:	cf 93       	push	r28
    17f6:	df 93       	push	r29
    17f8:	ef 93       	push	r30
    17fa:	ff 93       	push	r31
    17fc:	14 bc       	out	0x24, r1	; 36
    17fe:	80 91 93 08 	lds	r24, 0x0893	; 0x800893 <G_plcTimerOverFlowCnt>
    1802:	8f 5f       	subi	r24, 0xFF	; 255
    1804:	80 93 93 08 	sts	0x0893, r24	; 0x800893 <G_plcTimerOverFlowCnt>
    1808:	80 91 93 08 	lds	r24, 0x0893	; 0x800893 <G_plcTimerOverFlowCnt>
    180c:	8f 31       	cpi	r24, 0x1F	; 31
    180e:	08 f4       	brcc	.+2      	; 0x1812 <__vector_10+0x4a>
    1810:	61 c3       	rjmp	.+1730   	; 0x1ed4 <__vector_10+0x70c>
    1812:	10 92 93 08 	sts	0x0893, r1	; 0x800893 <G_plcTimerOverFlowCnt>
    1816:	90 91 92 08 	lds	r25, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    181a:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    181e:	98 17       	cp	r25, r24
    1820:	10 f0       	brcs	.+4      	; 0x1826 <__vector_10+0x5e>
    1822:	10 92 92 08 	sts	0x0892, r1	; 0x800892 <G_plcUSMCurrentIndex>
    1826:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    182a:	90 91 99 08 	lds	r25, 0x0899	; 0x800899 <G_totalLGMCnt>
    182e:	89 17       	cp	r24, r25
    1830:	10 f0       	brcs	.+4      	; 0x1836 <__vector_10+0x6e>
    1832:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <G_plcLGMCurrentIndex>
    1836:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    183a:	81 70       	andi	r24, 0x01	; 1
    183c:	80 93 b5 0d 	sts	0x0DB5, r24	; 0x800db5 <initialUSMF>
    1840:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1844:	82 70       	andi	r24, 0x02	; 2
    1846:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <initialLGMF>
    184a:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    184e:	80 71       	andi	r24, 0x10	; 16
    1850:	80 93 cf 0b 	sts	0x0BCF, r24	; 0x800bcf <paramCF>
    1854:	80 91 b5 0d 	lds	r24, 0x0DB5	; 0x800db5 <initialUSMF>
    1858:	81 30       	cpi	r24, 0x01	; 1
    185a:	29 f4       	brne	.+10     	; 0x1866 <__vector_10+0x9e>
    185c:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <initialLGMF>
    1860:	82 30       	cpi	r24, 0x02	; 2
    1862:	09 f4       	brne	.+2      	; 0x1866 <__vector_10+0x9e>
    1864:	0c c1       	rjmp	.+536    	; 0x1a7e <__vector_10+0x2b6>
    1866:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    186a:	84 70       	andi	r24, 0x04	; 4
    186c:	80 93 cc 0b 	sts	0x0BCC, r24	; 0x800bcc <uaddCF>
    1870:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1874:	88 70       	andi	r24, 0x08	; 8
    1876:	80 93 de 0d 	sts	0x0DDE, r24	; 0x800dde <laddCF>
    187a:	80 91 cc 0b 	lds	r24, 0x0BCC	; 0x800bcc <uaddCF>
    187e:	84 30       	cpi	r24, 0x04	; 4
    1880:	09 f0       	breq	.+2      	; 0x1884 <__vector_10+0xbc>
    1882:	8d c0       	rjmp	.+282    	; 0x199e <__vector_10+0x1d6>
    1884:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <__data_end>
    1888:	81 11       	cpse	r24, r1
    188a:	1e c0       	rjmp	.+60     	; 0x18c8 <__vector_10+0x100>
    188c:	e9 e1       	ldi	r30, 0x19	; 25
    188e:	f9 e0       	ldi	r31, 0x09	; 9
    1890:	87 e0       	ldi	r24, 0x07	; 7
    1892:	80 83       	st	Z, r24
    1894:	11 82       	std	Z+1, r1	; 0x01
    1896:	12 82       	std	Z+2, r1	; 0x02
    1898:	13 82       	std	Z+3, r1	; 0x03
    189a:	14 82       	std	Z+4, r1	; 0x04
    189c:	40 91 19 09 	lds	r20, 0x0919	; 0x800919 <G_txAddBufPLC>
    18a0:	50 91 1a 09 	lds	r21, 0x091A	; 0x80091a <G_txAddBufPLC+0x1>
    18a4:	60 91 1b 09 	lds	r22, 0x091B	; 0x80091b <G_txAddBufPLC+0x2>
    18a8:	70 91 1c 09 	lds	r23, 0x091C	; 0x80091c <G_txAddBufPLC+0x3>
    18ac:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <G_txAddBufPLC+0x4>
    18b0:	0e 94 88 02 	call	0x510	; 0x510 <SCMPLCF_SendMessageAddPacket>
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <__data_end>
    18ba:	8f e1       	ldi	r24, 0x1F	; 31
    18bc:	9e e4       	ldi	r25, 0x4E	; 78
    18be:	01 97       	sbiw	r24, 0x01	; 1
    18c0:	f1 f7       	brne	.-4      	; 0x18be <__vector_10+0xf6>
    18c2:	00 c0       	rjmp	.+0      	; 0x18c4 <__vector_10+0xfc>
    18c4:	00 00       	nop
    18c6:	06 c3       	rjmp	.+1548   	; 0x1ed4 <__vector_10+0x70c>
    18c8:	a9 e1       	ldi	r26, 0x19	; 25
    18ca:	b9 e0       	ldi	r27, 0x09	; 9
    18cc:	1c 92       	st	X, r1
    18ce:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    18d2:	f0 e0       	ldi	r31, 0x00	; 0
    18d4:	ee 0f       	add	r30, r30
    18d6:	ff 1f       	adc	r31, r31
    18d8:	ee 0f       	add	r30, r30
    18da:	ff 1f       	adc	r31, r31
    18dc:	e7 55       	subi	r30, 0x57	; 87
    18de:	f9 4f       	sbci	r31, 0xF9	; 249
    18e0:	40 81       	ld	r20, Z
    18e2:	51 81       	ldd	r21, Z+1	; 0x01
    18e4:	62 81       	ldd	r22, Z+2	; 0x02
    18e6:	73 81       	ldd	r23, Z+3	; 0x03
    18e8:	ab 01       	movw	r20, r22
    18ea:	66 27       	eor	r22, r22
    18ec:	77 27       	eor	r23, r23
    18ee:	11 96       	adiw	r26, 0x01	; 1
    18f0:	4c 93       	st	X, r20
    18f2:	11 97       	sbiw	r26, 0x01	; 1
    18f4:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    18f8:	f0 e0       	ldi	r31, 0x00	; 0
    18fa:	ee 0f       	add	r30, r30
    18fc:	ff 1f       	adc	r31, r31
    18fe:	ee 0f       	add	r30, r30
    1900:	ff 1f       	adc	r31, r31
    1902:	e7 55       	subi	r30, 0x57	; 87
    1904:	f9 4f       	sbci	r31, 0xF9	; 249
    1906:	40 81       	ld	r20, Z
    1908:	51 81       	ldd	r21, Z+1	; 0x01
    190a:	62 81       	ldd	r22, Z+2	; 0x02
    190c:	73 81       	ldd	r23, Z+3	; 0x03
    190e:	45 2f       	mov	r20, r21
    1910:	56 2f       	mov	r21, r22
    1912:	67 2f       	mov	r22, r23
    1914:	77 27       	eor	r23, r23
    1916:	12 96       	adiw	r26, 0x02	; 2
    1918:	4c 93       	st	X, r20
    191a:	12 97       	sbiw	r26, 0x02	; 2
    191c:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1920:	f0 e0       	ldi	r31, 0x00	; 0
    1922:	ee 0f       	add	r30, r30
    1924:	ff 1f       	adc	r31, r31
    1926:	ee 0f       	add	r30, r30
    1928:	ff 1f       	adc	r31, r31
    192a:	e7 55       	subi	r30, 0x57	; 87
    192c:	f9 4f       	sbci	r31, 0xF9	; 249
    192e:	40 81       	ld	r20, Z
    1930:	51 81       	ldd	r21, Z+1	; 0x01
    1932:	62 81       	ldd	r22, Z+2	; 0x02
    1934:	73 81       	ldd	r23, Z+3	; 0x03
    1936:	13 96       	adiw	r26, 0x03	; 3
    1938:	4c 93       	st	X, r20
    193a:	13 97       	sbiw	r26, 0x03	; 3
    193c:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1940:	8f 5f       	subi	r24, 0xFF	; 255
    1942:	14 96       	adiw	r26, 0x04	; 4
    1944:	8c 93       	st	X, r24
    1946:	c5 98       	cbi	0x18, 5	; 24
    1948:	20 91 92 08 	lds	r18, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	01 97       	sbiw	r24, 0x01	; 1
    1956:	28 17       	cp	r18, r24
    1958:	39 07       	cpc	r19, r25
    195a:	79 f4       	brne	.+30     	; 0x197a <__vector_10+0x1b2>
    195c:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1960:	81 60       	ori	r24, 0x01	; 1
    1962:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    1966:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    196a:	8b 7f       	andi	r24, 0xFB	; 251
    196c:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    1970:	10 92 92 08 	sts	0x0892, r1	; 0x800892 <G_plcUSMCurrentIndex>
    1974:	c5 9a       	sbi	0x18, 5	; 24
    1976:	c4 9a       	sbi	0x18, 4	; 24
    1978:	05 c0       	rjmp	.+10     	; 0x1984 <__vector_10+0x1bc>
    197a:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    197e:	8f 5f       	subi	r24, 0xFF	; 255
    1980:	80 93 92 08 	sts	0x0892, r24	; 0x800892 <G_plcUSMCurrentIndex>
    1984:	40 91 19 09 	lds	r20, 0x0919	; 0x800919 <G_txAddBufPLC>
    1988:	50 91 1a 09 	lds	r21, 0x091A	; 0x80091a <G_txAddBufPLC+0x1>
    198c:	60 91 1b 09 	lds	r22, 0x091B	; 0x80091b <G_txAddBufPLC+0x2>
    1990:	70 91 1c 09 	lds	r23, 0x091C	; 0x80091c <G_txAddBufPLC+0x3>
    1994:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <G_txAddBufPLC+0x4>
    1998:	0e 94 88 02 	call	0x510	; 0x510 <SCMPLCF_SendMessageAddPacket>
    199c:	9b c2       	rjmp	.+1334   	; 0x1ed4 <__vector_10+0x70c>
    199e:	80 91 de 0d 	lds	r24, 0x0DDE	; 0x800dde <laddCF>
    19a2:	88 30       	cpi	r24, 0x08	; 8
    19a4:	09 f0       	breq	.+2      	; 0x19a8 <__vector_10+0x1e0>
    19a6:	96 c2       	rjmp	.+1324   	; 0x1ed4 <__vector_10+0x70c>
    19a8:	a9 e1       	ldi	r26, 0x19	; 25
    19aa:	b9 e0       	ldi	r27, 0x09	; 9
    19ac:	82 e0       	ldi	r24, 0x02	; 2
    19ae:	8c 93       	st	X, r24
    19b0:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    19b4:	f0 e0       	ldi	r31, 0x00	; 0
    19b6:	ee 0f       	add	r30, r30
    19b8:	ff 1f       	adc	r31, r31
    19ba:	ee 0f       	add	r30, r30
    19bc:	ff 1f       	adc	r31, r31
    19be:	e7 5f       	subi	r30, 0xF7	; 247
    19c0:	f9 4f       	sbci	r31, 0xF9	; 249
    19c2:	40 81       	ld	r20, Z
    19c4:	51 81       	ldd	r21, Z+1	; 0x01
    19c6:	62 81       	ldd	r22, Z+2	; 0x02
    19c8:	73 81       	ldd	r23, Z+3	; 0x03
    19ca:	ab 01       	movw	r20, r22
    19cc:	66 27       	eor	r22, r22
    19ce:	77 27       	eor	r23, r23
    19d0:	11 96       	adiw	r26, 0x01	; 1
    19d2:	4c 93       	st	X, r20
    19d4:	11 97       	sbiw	r26, 0x01	; 1
    19d6:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    19da:	f0 e0       	ldi	r31, 0x00	; 0
    19dc:	ee 0f       	add	r30, r30
    19de:	ff 1f       	adc	r31, r31
    19e0:	ee 0f       	add	r30, r30
    19e2:	ff 1f       	adc	r31, r31
    19e4:	e7 5f       	subi	r30, 0xF7	; 247
    19e6:	f9 4f       	sbci	r31, 0xF9	; 249
    19e8:	40 81       	ld	r20, Z
    19ea:	51 81       	ldd	r21, Z+1	; 0x01
    19ec:	62 81       	ldd	r22, Z+2	; 0x02
    19ee:	73 81       	ldd	r23, Z+3	; 0x03
    19f0:	45 2f       	mov	r20, r21
    19f2:	56 2f       	mov	r21, r22
    19f4:	67 2f       	mov	r22, r23
    19f6:	77 27       	eor	r23, r23
    19f8:	12 96       	adiw	r26, 0x02	; 2
    19fa:	4c 93       	st	X, r20
    19fc:	12 97       	sbiw	r26, 0x02	; 2
    19fe:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	ee 0f       	add	r30, r30
    1a06:	ff 1f       	adc	r31, r31
    1a08:	ee 0f       	add	r30, r30
    1a0a:	ff 1f       	adc	r31, r31
    1a0c:	e7 5f       	subi	r30, 0xF7	; 247
    1a0e:	f9 4f       	sbci	r31, 0xF9	; 249
    1a10:	40 81       	ld	r20, Z
    1a12:	51 81       	ldd	r21, Z+1	; 0x01
    1a14:	62 81       	ldd	r22, Z+2	; 0x02
    1a16:	73 81       	ldd	r23, Z+3	; 0x03
    1a18:	13 96       	adiw	r26, 0x03	; 3
    1a1a:	4c 93       	st	X, r20
    1a1c:	13 97       	sbiw	r26, 0x03	; 3
    1a1e:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1a22:	8f 5f       	subi	r24, 0xFF	; 255
    1a24:	14 96       	adiw	r26, 0x04	; 4
    1a26:	8c 93       	st	X, r24
    1a28:	c5 98       	cbi	0x18, 5	; 24
    1a2a:	20 91 91 08 	lds	r18, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1a2e:	30 e0       	ldi	r19, 0x00	; 0
    1a30:	80 91 99 08 	lds	r24, 0x0899	; 0x800899 <G_totalLGMCnt>
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	01 97       	sbiw	r24, 0x01	; 1
    1a38:	28 17       	cp	r18, r24
    1a3a:	39 07       	cpc	r19, r25
    1a3c:	71 f4       	brne	.+28     	; 0x1a5a <__vector_10+0x292>
    1a3e:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1a42:	82 60       	ori	r24, 0x02	; 2
    1a44:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    1a48:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1a4c:	87 7f       	andi	r24, 0xF7	; 247
    1a4e:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    1a52:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <G_plcLGMCurrentIndex>
    1a56:	c5 9a       	sbi	0x18, 5	; 24
    1a58:	05 c0       	rjmp	.+10     	; 0x1a64 <__vector_10+0x29c>
    1a5a:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1a5e:	8f 5f       	subi	r24, 0xFF	; 255
    1a60:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <G_plcLGMCurrentIndex>
    1a64:	40 91 19 09 	lds	r20, 0x0919	; 0x800919 <G_txAddBufPLC>
    1a68:	50 91 1a 09 	lds	r21, 0x091A	; 0x80091a <G_txAddBufPLC+0x1>
    1a6c:	60 91 1b 09 	lds	r22, 0x091B	; 0x80091b <G_txAddBufPLC+0x2>
    1a70:	70 91 1c 09 	lds	r23, 0x091C	; 0x80091c <G_txAddBufPLC+0x3>
    1a74:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <G_txAddBufPLC+0x4>
    1a78:	0e 94 88 02 	call	0x510	; 0x510 <SCMPLCF_SendMessageAddPacket>
    1a7c:	2b c2       	rjmp	.+1110   	; 0x1ed4 <__vector_10+0x70c>
    1a7e:	80 91 b5 0d 	lds	r24, 0x0DB5	; 0x800db5 <initialUSMF>
    1a82:	81 30       	cpi	r24, 0x01	; 1
    1a84:	09 f0       	breq	.+2      	; 0x1a88 <__vector_10+0x2c0>
    1a86:	98 c0       	rjmp	.+304    	; 0x1bb8 <__vector_10+0x3f0>
    1a88:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <initialLGMF>
    1a8c:	82 30       	cpi	r24, 0x02	; 2
    1a8e:	09 f0       	breq	.+2      	; 0x1a92 <__vector_10+0x2ca>
    1a90:	93 c0       	rjmp	.+294    	; 0x1bb8 <__vector_10+0x3f0>
    1a92:	80 91 cf 0b 	lds	r24, 0x0BCF	; 0x800bcf <paramCF>
    1a96:	80 31       	cpi	r24, 0x10	; 16
    1a98:	09 f0       	breq	.+2      	; 0x1a9c <__vector_10+0x2d4>
    1a9a:	8e c0       	rjmp	.+284    	; 0x1bb8 <__vector_10+0x3f0>
    1a9c:	c5 98       	cbi	0x18, 5	; 24
    1a9e:	ec e9       	ldi	r30, 0x9C	; 156
    1aa0:	f8 e0       	ldi	r31, 0x08	; 8
    1aa2:	81 e0       	ldi	r24, 0x01	; 1
    1aa4:	80 83       	st	Z, r24
    1aa6:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1aaa:	8f 5f       	subi	r24, 0xFF	; 255
    1aac:	81 83       	std	Z+1, r24	; 0x01
    1aae:	80 91 8a 08 	lds	r24, 0x088A	; 0x80088a <ParamCnt>
    1ab2:	81 11       	cpse	r24, r1
    1ab4:	0f c0       	rjmp	.+30     	; 0x1ad4 <__vector_10+0x30c>
    1ab6:	df 01       	movw	r26, r30
    1ab8:	8c e0       	ldi	r24, 0x0C	; 12
    1aba:	82 83       	std	Z+2, r24	; 0x02
    1abc:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1ac0:	94 e0       	ldi	r25, 0x04	; 4
    1ac2:	e9 9f       	mul	r30, r25
    1ac4:	f0 01       	movw	r30, r0
    1ac6:	11 24       	eor	r1, r1
    1ac8:	ef 5e       	subi	r30, 0xEF	; 239
    1aca:	fc 4f       	sbci	r31, 0xFC	; 252
    1acc:	80 81       	ld	r24, Z
    1ace:	13 96       	adiw	r26, 0x03	; 3
    1ad0:	8c 93       	st	X, r24
    1ad2:	41 c0       	rjmp	.+130    	; 0x1b56 <__vector_10+0x38e>
    1ad4:	80 91 8a 08 	lds	r24, 0x088A	; 0x80088a <ParamCnt>
    1ad8:	81 30       	cpi	r24, 0x01	; 1
    1ada:	91 f4       	brne	.+36     	; 0x1b00 <__vector_10+0x338>
    1adc:	ac e9       	ldi	r26, 0x9C	; 156
    1ade:	b8 e0       	ldi	r27, 0x08	; 8
    1ae0:	8d e0       	ldi	r24, 0x0D	; 13
    1ae2:	12 96       	adiw	r26, 0x02	; 2
    1ae4:	8c 93       	st	X, r24
    1ae6:	12 97       	sbiw	r26, 0x02	; 2
    1ae8:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1aec:	84 e0       	ldi	r24, 0x04	; 4
    1aee:	e8 9f       	mul	r30, r24
    1af0:	f0 01       	movw	r30, r0
    1af2:	11 24       	eor	r1, r1
    1af4:	ee 5e       	subi	r30, 0xEE	; 238
    1af6:	fc 4f       	sbci	r31, 0xFC	; 252
    1af8:	80 81       	ld	r24, Z
    1afa:	13 96       	adiw	r26, 0x03	; 3
    1afc:	8c 93       	st	X, r24
    1afe:	2b c0       	rjmp	.+86     	; 0x1b56 <__vector_10+0x38e>
    1b00:	80 91 8a 08 	lds	r24, 0x088A	; 0x80088a <ParamCnt>
    1b04:	82 30       	cpi	r24, 0x02	; 2
    1b06:	91 f4       	brne	.+36     	; 0x1b2c <__vector_10+0x364>
    1b08:	ac e9       	ldi	r26, 0x9C	; 156
    1b0a:	b8 e0       	ldi	r27, 0x08	; 8
    1b0c:	8e e0       	ldi	r24, 0x0E	; 14
    1b0e:	12 96       	adiw	r26, 0x02	; 2
    1b10:	8c 93       	st	X, r24
    1b12:	12 97       	sbiw	r26, 0x02	; 2
    1b14:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1b18:	94 e0       	ldi	r25, 0x04	; 4
    1b1a:	e9 9f       	mul	r30, r25
    1b1c:	f0 01       	movw	r30, r0
    1b1e:	11 24       	eor	r1, r1
    1b20:	ed 5e       	subi	r30, 0xED	; 237
    1b22:	fc 4f       	sbci	r31, 0xFC	; 252
    1b24:	80 81       	ld	r24, Z
    1b26:	13 96       	adiw	r26, 0x03	; 3
    1b28:	8c 93       	st	X, r24
    1b2a:	15 c0       	rjmp	.+42     	; 0x1b56 <__vector_10+0x38e>
    1b2c:	80 91 8a 08 	lds	r24, 0x088A	; 0x80088a <ParamCnt>
    1b30:	83 30       	cpi	r24, 0x03	; 3
    1b32:	89 f4       	brne	.+34     	; 0x1b56 <__vector_10+0x38e>
    1b34:	ac e9       	ldi	r26, 0x9C	; 156
    1b36:	b8 e0       	ldi	r27, 0x08	; 8
    1b38:	8f e0       	ldi	r24, 0x0F	; 15
    1b3a:	12 96       	adiw	r26, 0x02	; 2
    1b3c:	8c 93       	st	X, r24
    1b3e:	12 97       	sbiw	r26, 0x02	; 2
    1b40:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1b44:	84 e0       	ldi	r24, 0x04	; 4
    1b46:	e8 9f       	mul	r30, r24
    1b48:	f0 01       	movw	r30, r0
    1b4a:	11 24       	eor	r1, r1
    1b4c:	ec 5e       	subi	r30, 0xEC	; 236
    1b4e:	fc 4f       	sbci	r31, 0xFC	; 252
    1b50:	80 81       	ld	r24, Z
    1b52:	13 96       	adiw	r26, 0x03	; 3
    1b54:	8c 93       	st	X, r24
    1b56:	80 91 8a 08 	lds	r24, 0x088A	; 0x80088a <ParamCnt>
    1b5a:	83 30       	cpi	r24, 0x03	; 3
    1b5c:	41 f4       	brne	.+16     	; 0x1b6e <__vector_10+0x3a6>
    1b5e:	10 92 8a 08 	sts	0x088A, r1	; 0x80088a <ParamCnt>
    1b62:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1b66:	8f 5f       	subi	r24, 0xFF	; 255
    1b68:	80 93 92 08 	sts	0x0892, r24	; 0x800892 <G_plcUSMCurrentIndex>
    1b6c:	05 c0       	rjmp	.+10     	; 0x1b78 <__vector_10+0x3b0>
    1b6e:	80 91 8a 08 	lds	r24, 0x088A	; 0x80088a <ParamCnt>
    1b72:	8f 5f       	subi	r24, 0xFF	; 255
    1b74:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <ParamCnt>
    1b78:	20 91 92 08 	lds	r18, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1b7c:	30 e0       	ldi	r19, 0x00	; 0
    1b7e:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	01 97       	sbiw	r24, 0x01	; 1
    1b86:	28 17       	cp	r18, r24
    1b88:	39 07       	cpc	r19, r25
    1b8a:	59 f4       	brne	.+22     	; 0x1ba2 <__vector_10+0x3da>
    1b8c:	c5 9a       	sbi	0x18, 5	; 24
    1b8e:	c4 9a       	sbi	0x18, 4	; 24
    1b90:	80 91 8c 08 	lds	r24, 0x088C	; 0x80088c <G_SULCR>
    1b94:	8f 7e       	andi	r24, 0xEF	; 239
    1b96:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <G_SULCR>
    1b9a:	10 92 89 08 	sts	0x0889, r1	; 0x800889 <ParamLoopCnt>
    1b9e:	10 92 92 08 	sts	0x0892, r1	; 0x800892 <G_plcUSMCurrentIndex>
    1ba2:	60 91 9c 08 	lds	r22, 0x089C	; 0x80089c <G_txCntlBufPLC>
    1ba6:	70 91 9d 08 	lds	r23, 0x089D	; 0x80089d <G_txCntlBufPLC+0x1>
    1baa:	80 91 9e 08 	lds	r24, 0x089E	; 0x80089e <G_txCntlBufPLC+0x2>
    1bae:	90 91 9f 08 	lds	r25, 0x089F	; 0x80089f <G_txCntlBufPLC+0x3>
    1bb2:	0e 94 64 05 	call	0xac8	; 0xac8 <SCMPLCF_SendMessageCntlPacket>
    1bb6:	8e c1       	rjmp	.+796    	; 0x1ed4 <__vector_10+0x70c>
    1bb8:	80 91 90 08 	lds	r24, 0x0890	; 0x800890 <G_usmSensingF>
    1bbc:	81 30       	cpi	r24, 0x01	; 1
    1bbe:	09 f0       	breq	.+2      	; 0x1bc2 <__vector_10+0x3fa>
    1bc0:	89 c1       	rjmp	.+786    	; 0x1ed4 <__vector_10+0x70c>
    1bc2:	80 91 a0 08 	lds	r24, 0x08A0	; 0x8008a0 <G_cntlmodeDipValue>
    1bc6:	81 11       	cpse	r24, r1
    1bc8:	4b c0       	rjmp	.+150    	; 0x1c60 <__vector_10+0x498>
    1bca:	ec e9       	ldi	r30, 0x9C	; 156
    1bcc:	f8 e0       	ldi	r31, 0x08	; 8
    1bce:	83 e0       	ldi	r24, 0x03	; 3
    1bd0:	80 83       	st	Z, r24
    1bd2:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1bd6:	8f 5f       	subi	r24, 0xFF	; 255
    1bd8:	81 83       	std	Z+1, r24	; 0x01
    1bda:	80 91 8d 08 	lds	r24, 0x088D	; 0x80088d <G_lgmOPModeOnF>
    1bde:	81 30       	cpi	r24, 0x01	; 1
    1be0:	79 f4       	brne	.+30     	; 0x1c00 <__vector_10+0x438>
    1be2:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1be6:	f0 e0       	ldi	r31, 0x00	; 0
    1be8:	ef 50       	subi	r30, 0x0F	; 15
    1bea:	fb 4f       	sbci	r31, 0xFB	; 251
    1bec:	80 81       	ld	r24, Z
    1bee:	81 11       	cpse	r24, r1
    1bf0:	0d c0       	rjmp	.+26     	; 0x1c0c <__vector_10+0x444>
    1bf2:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1bf6:	f0 e0       	ldi	r31, 0x00	; 0
    1bf8:	ec 55       	subi	r30, 0x5C	; 92
    1bfa:	f4 4f       	sbci	r31, 0xF4	; 244
    1bfc:	80 81       	ld	r24, Z
    1bfe:	06 c0       	rjmp	.+12     	; 0x1c0c <__vector_10+0x444>
    1c00:	e0 91 9d 08 	lds	r30, 0x089D	; 0x80089d <G_txCntlBufPLC+0x1>
    1c04:	f0 e0       	ldi	r31, 0x00	; 0
    1c06:	ed 55       	subi	r30, 0x5D	; 93
    1c08:	f4 4f       	sbci	r31, 0xF4	; 244
    1c0a:	80 81       	ld	r24, Z
    1c0c:	20 91 1f 09 	lds	r18, 0x091F	; 0x80091f <G_testmodeDipValue>
    1c10:	21 30       	cpi	r18, 0x01	; 1
    1c12:	09 f4       	brne	.+2      	; 0x1c16 <__vector_10+0x44e>
    1c14:	86 e0       	ldi	r24, 0x06	; 6
    1c16:	ec e9       	ldi	r30, 0x9C	; 156
    1c18:	f8 e0       	ldi	r31, 0x08	; 8
    1c1a:	82 83       	std	Z+2, r24	; 0x02
    1c1c:	13 82       	std	Z+3, r1	; 0x03
    1c1e:	20 91 91 08 	lds	r18, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1c22:	30 e0       	ldi	r19, 0x00	; 0
    1c24:	89 2f       	mov	r24, r25
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	01 97       	sbiw	r24, 0x01	; 1
    1c2a:	28 17       	cp	r18, r24
    1c2c:	39 07       	cpc	r19, r25
    1c2e:	19 f4       	brne	.+6      	; 0x1c36 <__vector_10+0x46e>
    1c30:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <G_plcLGMCurrentIndex>
    1c34:	05 c0       	rjmp	.+10     	; 0x1c40 <__vector_10+0x478>
    1c36:	80 91 91 08 	lds	r24, 0x0891	; 0x800891 <G_plcLGMCurrentIndex>
    1c3a:	8f 5f       	subi	r24, 0xFF	; 255
    1c3c:	80 93 91 08 	sts	0x0891, r24	; 0x800891 <G_plcLGMCurrentIndex>
    1c40:	60 91 9c 08 	lds	r22, 0x089C	; 0x80089c <G_txCntlBufPLC>
    1c44:	70 91 9d 08 	lds	r23, 0x089D	; 0x80089d <G_txCntlBufPLC+0x1>
    1c48:	80 91 9e 08 	lds	r24, 0x089E	; 0x80089e <G_txCntlBufPLC+0x2>
    1c4c:	90 91 9f 08 	lds	r25, 0x089F	; 0x80089f <G_txCntlBufPLC+0x3>
    1c50:	0e 94 64 05 	call	0xac8	; 0xac8 <SCMPLCF_SendMessageCntlPacket>
    1c54:	ef e1       	ldi	r30, 0x1F	; 31
    1c56:	fe e4       	ldi	r31, 0x4E	; 78
    1c58:	31 97       	sbiw	r30, 0x01	; 1
    1c5a:	f1 f7       	brne	.-4      	; 0x1c58 <__vector_10+0x490>
    1c5c:	00 c0       	rjmp	.+0      	; 0x1c5e <__vector_10+0x496>
    1c5e:	00 00       	nop
    1c60:	80 91 a0 08 	lds	r24, 0x08A0	; 0x8008a0 <G_cntlmodeDipValue>
    1c64:	88 23       	and	r24, r24
    1c66:	11 f0       	breq	.+4      	; 0x1c6c <__vector_10+0x4a4>
    1c68:	84 e0       	ldi	r24, 0x04	; 4
    1c6a:	01 c0       	rjmp	.+2      	; 0x1c6e <__vector_10+0x4a6>
    1c6c:	81 e0       	ldi	r24, 0x01	; 1
    1c6e:	ec e9       	ldi	r30, 0x9C	; 156
    1c70:	f8 e0       	ldi	r31, 0x08	; 8
    1c72:	80 83       	st	Z, r24
    1c74:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1c78:	8f 5f       	subi	r24, 0xFF	; 255
    1c7a:	81 83       	std	Z+1, r24	; 0x01
    1c7c:	80 91 a0 08 	lds	r24, 0x08A0	; 0x8008a0 <G_cntlmodeDipValue>
    1c80:	81 11       	cpse	r24, r1
    1c82:	06 c0       	rjmp	.+12     	; 0x1c90 <__vector_10+0x4c8>
    1c84:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1c88:	f0 e0       	ldi	r31, 0x00	; 0
    1c8a:	e7 5e       	subi	r30, 0xE7	; 231
    1c8c:	fa 4f       	sbci	r31, 0xFA	; 250
    1c8e:	80 81       	ld	r24, Z
    1c90:	80 91 9d 08 	lds	r24, 0x089D	; 0x80089d <G_txCntlBufPLC+0x1>
    1c94:	80 93 cd 0b 	sts	0x0BCD, r24	; 0x800bcd <G_usmCurrentCntlID>
    1c98:	80 91 8e 08 	lds	r24, 0x088E	; 0x80088e <G_usmOPModeOnF>
    1c9c:	81 30       	cpi	r24, 0x01	; 1
    1c9e:	09 f0       	breq	.+2      	; 0x1ca2 <__vector_10+0x4da>
    1ca0:	13 c1       	rjmp	.+550    	; 0x1ec8 <__vector_10+0x700>
    1ca2:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1ca6:	f0 e0       	ldi	r31, 0x00	; 0
    1ca8:	e7 5e       	subi	r30, 0xE7	; 231
    1caa:	fa 4f       	sbci	r31, 0xFA	; 250
    1cac:	80 81       	ld	r24, Z
    1cae:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <G_testmodeDipValue>
    1cb2:	91 30       	cpi	r25, 0x01	; 1
    1cb4:	d1 f0       	breq	.+52     	; 0x1cea <__vector_10+0x522>
    1cb6:	83 30       	cpi	r24, 0x03	; 3
    1cb8:	f1 f0       	breq	.+60     	; 0x1cf6 <__vector_10+0x52e>
    1cba:	28 f4       	brcc	.+10     	; 0x1cc6 <__vector_10+0x4fe>
    1cbc:	81 30       	cpi	r24, 0x01	; 1
    1cbe:	09 f1       	breq	.+66     	; 0x1d02 <__vector_10+0x53a>
    1cc0:	82 30       	cpi	r24, 0x02	; 2
    1cc2:	29 f1       	breq	.+74     	; 0x1d0e <__vector_10+0x546>
    1cc4:	2a c0       	rjmp	.+84     	; 0x1d1a <__vector_10+0x552>
    1cc6:	85 30       	cpi	r24, 0x05	; 5
    1cc8:	51 f0       	breq	.+20     	; 0x1cde <__vector_10+0x516>
    1cca:	18 f0       	brcs	.+6      	; 0x1cd2 <__vector_10+0x50a>
    1ccc:	86 30       	cpi	r24, 0x06	; 6
    1cce:	29 f5       	brne	.+74     	; 0x1d1a <__vector_10+0x552>
    1cd0:	0c c0       	rjmp	.+24     	; 0x1cea <__vector_10+0x522>
    1cd2:	ec e9       	ldi	r30, 0x9C	; 156
    1cd4:	f8 e0       	ldi	r31, 0x08	; 8
    1cd6:	84 e0       	ldi	r24, 0x04	; 4
    1cd8:	82 83       	std	Z+2, r24	; 0x02
    1cda:	13 82       	std	Z+3, r1	; 0x03
    1cdc:	23 c0       	rjmp	.+70     	; 0x1d24 <__vector_10+0x55c>
    1cde:	ec e9       	ldi	r30, 0x9C	; 156
    1ce0:	f8 e0       	ldi	r31, 0x08	; 8
    1ce2:	85 e0       	ldi	r24, 0x05	; 5
    1ce4:	82 83       	std	Z+2, r24	; 0x02
    1ce6:	13 82       	std	Z+3, r1	; 0x03
    1ce8:	1d c0       	rjmp	.+58     	; 0x1d24 <__vector_10+0x55c>
    1cea:	ec e9       	ldi	r30, 0x9C	; 156
    1cec:	f8 e0       	ldi	r31, 0x08	; 8
    1cee:	86 e0       	ldi	r24, 0x06	; 6
    1cf0:	82 83       	std	Z+2, r24	; 0x02
    1cf2:	13 82       	std	Z+3, r1	; 0x03
    1cf4:	17 c0       	rjmp	.+46     	; 0x1d24 <__vector_10+0x55c>
    1cf6:	ec e9       	ldi	r30, 0x9C	; 156
    1cf8:	f8 e0       	ldi	r31, 0x08	; 8
    1cfa:	83 e0       	ldi	r24, 0x03	; 3
    1cfc:	82 83       	std	Z+2, r24	; 0x02
    1cfe:	13 82       	std	Z+3, r1	; 0x03
    1d00:	11 c0       	rjmp	.+34     	; 0x1d24 <__vector_10+0x55c>
    1d02:	ec e9       	ldi	r30, 0x9C	; 156
    1d04:	f8 e0       	ldi	r31, 0x08	; 8
    1d06:	88 e0       	ldi	r24, 0x08	; 8
    1d08:	82 83       	std	Z+2, r24	; 0x02
    1d0a:	13 82       	std	Z+3, r1	; 0x03
    1d0c:	0b c0       	rjmp	.+22     	; 0x1d24 <__vector_10+0x55c>
    1d0e:	ec e9       	ldi	r30, 0x9C	; 156
    1d10:	f8 e0       	ldi	r31, 0x08	; 8
    1d12:	88 e0       	ldi	r24, 0x08	; 8
    1d14:	82 83       	std	Z+2, r24	; 0x02
    1d16:	13 82       	std	Z+3, r1	; 0x03
    1d18:	05 c0       	rjmp	.+10     	; 0x1d24 <__vector_10+0x55c>
    1d1a:	ec e9       	ldi	r30, 0x9C	; 156
    1d1c:	f8 e0       	ldi	r31, 0x08	; 8
    1d1e:	88 e0       	ldi	r24, 0x08	; 8
    1d20:	82 83       	std	Z+2, r24	; 0x02
    1d22:	13 82       	std	Z+3, r1	; 0x03
    1d24:	20 91 92 08 	lds	r18, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <G_totalUSMCnt>
    1d2e:	90 e0       	ldi	r25, 0x00	; 0
    1d30:	01 97       	sbiw	r24, 0x01	; 1
    1d32:	28 17       	cp	r18, r24
    1d34:	39 07       	cpc	r19, r25
    1d36:	09 f0       	breq	.+2      	; 0x1d3a <__vector_10+0x572>
    1d38:	b5 c0       	rjmp	.+362    	; 0x1ea4 <__vector_10+0x6dc>
    1d3a:	10 92 92 08 	sts	0x0892, r1	; 0x800892 <G_plcUSMCurrentIndex>
    1d3e:	0e 94 72 02 	call	0x4e4	; 0x4e4 <SCMPLCF_lgmStatusBuffInit>
    1d42:	c0 91 9a 08 	lds	r28, 0x089A	; 0x80089a <G_totalUSMCnt>
    1d46:	c2 30       	cpi	r28, 0x02	; 2
    1d48:	d8 f1       	brcs	.+118    	; 0x1dc0 <__vector_10+0x5f8>
    1d4a:	81 e0       	ldi	r24, 0x01	; 1
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	ac 01       	movw	r20, r24
    1d50:	bc 01       	movw	r22, r24
    1d52:	61 50       	subi	r22, 0x01	; 1
    1d54:	71 09       	sbc	r23, r1
    1d56:	db 01       	movw	r26, r22
    1d58:	ac 50       	subi	r26, 0x0C	; 12
    1d5a:	b0 4f       	sbci	r27, 0xF0	; 240
    1d5c:	3c 91       	ld	r19, X
    1d5e:	fc 01       	movw	r30, r24
    1d60:	ec 50       	subi	r30, 0x0C	; 12
    1d62:	f0 4f       	sbci	r31, 0xF0	; 240
    1d64:	e0 81       	ld	r30, Z
    1d66:	f0 e1       	ldi	r31, 0x10	; 16
    1d68:	3f 9f       	mul	r19, r31
    1d6a:	90 01       	movw	r18, r0
    1d6c:	11 24       	eor	r1, r1
    1d6e:	3e 2f       	mov	r19, r30
    1d70:	3f 70       	andi	r19, 0x0F	; 15
    1d72:	23 2b       	or	r18, r19
    1d74:	e8 2f       	mov	r30, r24
    1d76:	e6 95       	lsr	r30
    1d78:	f0 e0       	ldi	r31, 0x00	; 0
    1d7a:	e7 5b       	subi	r30, 0xB7	; 183
    1d7c:	f6 4f       	sbci	r31, 0xF6	; 246
    1d7e:	20 83       	st	Z, r18
    1d80:	fb 01       	movw	r30, r22
    1d82:	ef 56       	subi	r30, 0x6F	; 111
    1d84:	fa 4f       	sbci	r31, 0xFA	; 250
    1d86:	e0 81       	ld	r30, Z
    1d88:	2c 91       	ld	r18, X
    1d8a:	21 30       	cpi	r18, 0x01	; 1
    1d8c:	31 f0       	breq	.+12     	; 0x1d9a <__vector_10+0x5d2>
    1d8e:	f0 e0       	ldi	r31, 0x00	; 0
    1d90:	ea 54       	subi	r30, 0x4A	; 74
    1d92:	f2 4f       	sbci	r31, 0xF2	; 242
    1d94:	20 81       	ld	r18, Z
    1d96:	2f 5f       	subi	r18, 0xFF	; 255
    1d98:	20 83       	st	Z, r18
    1d9a:	fa 01       	movw	r30, r20
    1d9c:	ef 56       	subi	r30, 0x6F	; 111
    1d9e:	fa 4f       	sbci	r31, 0xFA	; 250
    1da0:	e0 81       	ld	r30, Z
    1da2:	da 01       	movw	r26, r20
    1da4:	ac 50       	subi	r26, 0x0C	; 12
    1da6:	b0 4f       	sbci	r27, 0xF0	; 240
    1da8:	2c 91       	ld	r18, X
    1daa:	21 30       	cpi	r18, 0x01	; 1
    1dac:	31 f0       	breq	.+12     	; 0x1dba <__vector_10+0x5f2>
    1dae:	f0 e0       	ldi	r31, 0x00	; 0
    1db0:	ea 54       	subi	r30, 0x4A	; 74
    1db2:	f2 4f       	sbci	r31, 0xF2	; 242
    1db4:	20 81       	ld	r18, Z
    1db6:	2f 5f       	subi	r18, 0xFF	; 255
    1db8:	20 83       	st	Z, r18
    1dba:	02 96       	adiw	r24, 0x02	; 2
    1dbc:	8c 17       	cp	r24, r28
    1dbe:	38 f2       	brcs	.-114    	; 0x1d4e <__vector_10+0x586>
    1dc0:	10 91 99 08 	lds	r17, 0x0899	; 0x800899 <G_totalLGMCnt>
    1dc4:	12 30       	cpi	r17, 0x02	; 2
    1dc6:	08 f4       	brcc	.+2      	; 0x1dca <__vector_10+0x602>
    1dc8:	72 c0       	rjmp	.+228    	; 0x1eae <__vector_10+0x6e6>
    1dca:	20 e0       	ldi	r18, 0x00	; 0
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	81 e0       	ldi	r24, 0x01	; 1
    1dd0:	90 e0       	ldi	r25, 0x00	; 0
    1dd2:	68 94       	set
    1dd4:	ee 24       	eor	r14, r14
    1dd6:	e2 f8       	bld	r14, 2
    1dd8:	0f 2e       	mov	r0, r31
    1dda:	f5 e0       	ldi	r31, 0x05	; 5
    1ddc:	ff 2e       	mov	r15, r31
    1dde:	f0 2d       	mov	r31, r0
    1de0:	00 e0       	ldi	r16, 0x00	; 0
    1de2:	d8 2e       	mov	r13, r24
    1de4:	ac 01       	movw	r20, r24
    1de6:	dc 01       	movw	r26, r24
    1de8:	aa 54       	subi	r26, 0x4A	; 74
    1dea:	b2 4f       	sbci	r27, 0xF2	; 242
    1dec:	7c 91       	ld	r23, X
    1dee:	dc 01       	movw	r26, r24
    1df0:	a1 52       	subi	r26, 0x21	; 33
    1df2:	b2 4f       	sbci	r27, 0xF2	; 242
    1df4:	6c 91       	ld	r22, X
    1df6:	76 17       	cp	r23, r22
    1df8:	10 f0       	brcs	.+4      	; 0x1dfe <__vector_10+0x636>
    1dfa:	df 2d       	mov	r29, r15
    1dfc:	01 c0       	rjmp	.+2      	; 0x1e00 <__vector_10+0x638>
    1dfe:	de 2d       	mov	r29, r14
    1e00:	b9 01       	movw	r22, r18
    1e02:	6e 5f       	subi	r22, 0xFE	; 254
    1e04:	7f 4f       	sbci	r23, 0xFF	; 255
    1e06:	db 01       	movw	r26, r22
    1e08:	aa 54       	subi	r26, 0x4A	; 74
    1e0a:	b2 4f       	sbci	r27, 0xF2	; 242
    1e0c:	ac 91       	ld	r26, X
    1e0e:	fb 01       	movw	r30, r22
    1e10:	e1 52       	subi	r30, 0x21	; 33
    1e12:	f2 4f       	sbci	r31, 0xF2	; 242
    1e14:	f0 81       	ld	r31, Z
    1e16:	af 17       	cp	r26, r31
    1e18:	10 f0       	brcs	.+4      	; 0x1e1e <__vector_10+0x656>
    1e1a:	cf 2d       	mov	r28, r15
    1e1c:	01 c0       	rjmp	.+2      	; 0x1e20 <__vector_10+0x658>
    1e1e:	ce 2d       	mov	r28, r14
    1e20:	da 01       	movw	r26, r20
    1e22:	af 55       	subi	r26, 0x5F	; 95
    1e24:	b7 4f       	sbci	r27, 0xF7	; 247
    1e26:	fc 91       	ld	r31, X
    1e28:	f1 11       	cpse	r31, r1
    1e2a:	01 c0       	rjmp	.+2      	; 0x1e2e <__vector_10+0x666>
    1e2c:	d0 2f       	mov	r29, r16
    1e2e:	db 01       	movw	r26, r22
    1e30:	af 55       	subi	r26, 0x5F	; 95
    1e32:	b7 4f       	sbci	r27, 0xF7	; 247
    1e34:	fc 91       	ld	r31, X
    1e36:	f1 11       	cpse	r31, r1
    1e38:	01 c0       	rjmp	.+2      	; 0x1e3c <__vector_10+0x674>
    1e3a:	c0 2f       	mov	r28, r16
    1e3c:	f0 91 8d 08 	lds	r31, 0x088D	; 0x80088d <G_lgmOPModeOnF>
    1e40:	f1 30       	cpi	r31, 0x01	; 1
    1e42:	a1 f4       	brne	.+40     	; 0x1e6c <__vector_10+0x6a4>
    1e44:	d9 01       	movw	r26, r18
    1e46:	af 50       	subi	r26, 0x0F	; 15
    1e48:	bb 4f       	sbci	r27, 0xFB	; 251
    1e4a:	fc 91       	ld	r31, X
    1e4c:	ff 23       	and	r31, r31
    1e4e:	21 f0       	breq	.+8      	; 0x1e58 <__vector_10+0x690>
    1e50:	d9 01       	movw	r26, r18
    1e52:	af 50       	subi	r26, 0x0F	; 15
    1e54:	bb 4f       	sbci	r27, 0xFB	; 251
    1e56:	dc 91       	ld	r29, X
    1e58:	da 01       	movw	r26, r20
    1e5a:	af 50       	subi	r26, 0x0F	; 15
    1e5c:	bb 4f       	sbci	r27, 0xFB	; 251
    1e5e:	fc 91       	ld	r31, X
    1e60:	ff 23       	and	r31, r31
    1e62:	21 f0       	breq	.+8      	; 0x1e6c <__vector_10+0x6a4>
    1e64:	da 01       	movw	r26, r20
    1e66:	af 50       	subi	r26, 0x0F	; 15
    1e68:	bb 4f       	sbci	r27, 0xFB	; 251
    1e6a:	cc 91       	ld	r28, X
    1e6c:	e0 e1       	ldi	r30, 0x10	; 16
    1e6e:	de 9f       	mul	r29, r30
    1e70:	d0 01       	movw	r26, r0
    1e72:	11 24       	eor	r1, r1
    1e74:	fc 2f       	mov	r31, r28
    1e76:	ff 70       	andi	r31, 0x0F	; 15
    1e78:	af 2b       	or	r26, r31
    1e7a:	ed 2d       	mov	r30, r13
    1e7c:	e6 95       	lsr	r30
    1e7e:	ef 5f       	subi	r30, 0xFF	; 255
    1e80:	f0 e0       	ldi	r31, 0x00	; 0
    1e82:	e0 5e       	subi	r30, 0xE0	; 224
    1e84:	f6 4f       	sbci	r31, 0xF6	; 246
    1e86:	a0 83       	st	Z, r26
    1e88:	f9 01       	movw	r30, r18
    1e8a:	ec 55       	subi	r30, 0x5C	; 92
    1e8c:	f4 4f       	sbci	r31, 0xF4	; 244
    1e8e:	d0 83       	st	Z, r29
    1e90:	fa 01       	movw	r30, r20
    1e92:	ec 55       	subi	r30, 0x5C	; 92
    1e94:	f4 4f       	sbci	r31, 0xF4	; 244
    1e96:	c0 83       	st	Z, r28
    1e98:	02 96       	adiw	r24, 0x02	; 2
    1e9a:	9b 01       	movw	r18, r22
    1e9c:	81 17       	cp	r24, r17
    1e9e:	08 f4       	brcc	.+2      	; 0x1ea2 <__vector_10+0x6da>
    1ea0:	a0 cf       	rjmp	.-192    	; 0x1de2 <__vector_10+0x61a>
    1ea2:	05 c0       	rjmp	.+10     	; 0x1eae <__vector_10+0x6e6>
    1ea4:	80 91 92 08 	lds	r24, 0x0892	; 0x800892 <G_plcUSMCurrentIndex>
    1ea8:	8f 5f       	subi	r24, 0xFF	; 255
    1eaa:	80 93 92 08 	sts	0x0892, r24	; 0x800892 <G_plcUSMCurrentIndex>
    1eae:	60 91 9c 08 	lds	r22, 0x089C	; 0x80089c <G_txCntlBufPLC>
    1eb2:	70 91 9d 08 	lds	r23, 0x089D	; 0x80089d <G_txCntlBufPLC+0x1>
    1eb6:	80 91 9e 08 	lds	r24, 0x089E	; 0x80089e <G_txCntlBufPLC+0x2>
    1eba:	90 91 9f 08 	lds	r25, 0x089F	; 0x80089f <G_txCntlBufPLC+0x3>
    1ebe:	0e 94 64 05 	call	0xac8	; 0xac8 <SCMPLCF_SendMessageCntlPacket>
    1ec2:	80 e4       	ldi	r24, 0x40	; 64
    1ec4:	89 bf       	out	0x39, r24	; 57
    1ec6:	06 c0       	rjmp	.+12     	; 0x1ed4 <__vector_10+0x70c>
    1ec8:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <G_testmodeDipValue>
    1ecc:	81 30       	cpi	r24, 0x01	; 1
    1ece:	09 f4       	brne	.+2      	; 0x1ed2 <__vector_10+0x70a>
    1ed0:	0c cf       	rjmp	.-488    	; 0x1cea <__vector_10+0x522>
    1ed2:	23 cf       	rjmp	.-442    	; 0x1d1a <__vector_10+0x552>
    1ed4:	ff 91       	pop	r31
    1ed6:	ef 91       	pop	r30
    1ed8:	df 91       	pop	r29
    1eda:	cf 91       	pop	r28
    1edc:	bf 91       	pop	r27
    1ede:	af 91       	pop	r26
    1ee0:	9f 91       	pop	r25
    1ee2:	8f 91       	pop	r24
    1ee4:	7f 91       	pop	r23
    1ee6:	6f 91       	pop	r22
    1ee8:	5f 91       	pop	r21
    1eea:	4f 91       	pop	r20
    1eec:	3f 91       	pop	r19
    1eee:	2f 91       	pop	r18
    1ef0:	1f 91       	pop	r17
    1ef2:	0f 91       	pop	r16
    1ef4:	ff 90       	pop	r15
    1ef6:	ef 90       	pop	r14
    1ef8:	df 90       	pop	r13
    1efa:	0f 90       	pop	r0
    1efc:	0b be       	out	0x3b, r0	; 59
    1efe:	0f 90       	pop	r0
    1f00:	0f be       	out	0x3f, r0	; 63
    1f02:	0f 90       	pop	r0
    1f04:	1f 90       	pop	r1
    1f06:	18 95       	reti

00001f08 <__vector_7>:
    1f08:	1f 92       	push	r1
    1f0a:	0f 92       	push	r0
    1f0c:	0f b6       	in	r0, 0x3f	; 63
    1f0e:	0f 92       	push	r0
    1f10:	11 24       	eor	r1, r1
    1f12:	0b b6       	in	r0, 0x3b	; 59
    1f14:	0f 92       	push	r0
    1f16:	2f 93       	push	r18
    1f18:	8f 93       	push	r24
    1f1a:	9f 93       	push	r25
    1f1c:	ef 93       	push	r30
    1f1e:	ff 93       	push	r31
    1f20:	e8 e0       	ldi	r30, 0x08	; 8
    1f22:	fe e0       	ldi	r31, 0x0E	; 14
    1f24:	88 ef       	ldi	r24, 0xF8	; 248
    1f26:	81 83       	std	Z+1, r24	; 0x01
    1f28:	81 b1       	in	r24, 0x01	; 1
    1f2a:	8b ed       	ldi	r24, 0xDB	; 219
    1f2c:	95 e0       	ldi	r25, 0x05	; 5
    1f2e:	01 97       	sbiw	r24, 0x01	; 1
    1f30:	f1 f7       	brne	.-4      	; 0x1f2e <__vector_7+0x26>
    1f32:	00 c0       	rjmp	.+0      	; 0x1f34 <__vector_7+0x2c>
    1f34:	00 00       	nop
    1f36:	81 b1       	in	r24, 0x01	; 1
    1f38:	91 81       	ldd	r25, Z+1	; 0x01
    1f3a:	86 fb       	bst	r24, 6
    1f3c:	88 27       	eor	r24, r24
    1f3e:	80 f9       	bld	r24, 0
    1f40:	89 0f       	add	r24, r25
    1f42:	81 83       	std	Z+1, r24	; 0x01
    1f44:	87 ee       	ldi	r24, 0xE7	; 231
    1f46:	93 e0       	ldi	r25, 0x03	; 3
    1f48:	01 97       	sbiw	r24, 0x01	; 1
    1f4a:	f1 f7       	brne	.-4      	; 0x1f48 <__vector_7+0x40>
    1f4c:	00 c0       	rjmp	.+0      	; 0x1f4e <__vector_7+0x46>
    1f4e:	00 00       	nop
    1f50:	91 b1       	in	r25, 0x01	; 1
    1f52:	21 81       	ldd	r18, Z+1	; 0x01
    1f54:	96 fb       	bst	r25, 6
    1f56:	88 27       	eor	r24, r24
    1f58:	80 f9       	bld	r24, 0
    1f5a:	88 0f       	add	r24, r24
    1f5c:	82 0f       	add	r24, r18
    1f5e:	81 83       	std	Z+1, r24	; 0x01
    1f60:	87 ee       	ldi	r24, 0xE7	; 231
    1f62:	93 e0       	ldi	r25, 0x03	; 3
    1f64:	01 97       	sbiw	r24, 0x01	; 1
    1f66:	f1 f7       	brne	.-4      	; 0x1f64 <__vector_7+0x5c>
    1f68:	00 c0       	rjmp	.+0      	; 0x1f6a <__vector_7+0x62>
    1f6a:	00 00       	nop
    1f6c:	91 b1       	in	r25, 0x01	; 1
    1f6e:	21 81       	ldd	r18, Z+1	; 0x01
    1f70:	96 fb       	bst	r25, 6
    1f72:	88 27       	eor	r24, r24
    1f74:	80 f9       	bld	r24, 0
    1f76:	88 0f       	add	r24, r24
    1f78:	88 0f       	add	r24, r24
    1f7a:	82 0f       	add	r24, r18
    1f7c:	81 83       	std	Z+1, r24	; 0x01
    1f7e:	87 ee       	ldi	r24, 0xE7	; 231
    1f80:	93 e0       	ldi	r25, 0x03	; 3
    1f82:	01 97       	sbiw	r24, 0x01	; 1
    1f84:	f1 f7       	brne	.-4      	; 0x1f82 <__vector_7+0x7a>
    1f86:	00 c0       	rjmp	.+0      	; 0x1f88 <__vector_7+0x80>
    1f88:	00 00       	nop
    1f8a:	80 91 cd 0b 	lds	r24, 0x0BCD	; 0x800bcd <G_usmCurrentCntlID>
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	21 81       	ldd	r18, Z+1	; 0x01
    1f92:	20 95       	com	r18
    1f94:	fc 01       	movw	r30, r24
    1f96:	ed 50       	subi	r30, 0x0D	; 13
    1f98:	f0 4f       	sbci	r31, 0xF0	; 240
    1f9a:	20 83       	st	Z, r18
    1f9c:	e0 91 cd 0b 	lds	r30, 0x0BCD	; 0x800bcd <G_usmCurrentCntlID>
    1fa0:	f0 e0       	ldi	r31, 0x00	; 0
    1fa2:	e0 57       	subi	r30, 0x70	; 112
    1fa4:	fa 4f       	sbci	r31, 0xFA	; 250
    1fa6:	e0 81       	ld	r30, Z
    1fa8:	f0 e0       	ldi	r31, 0x00	; 0
    1faa:	ef 55       	subi	r30, 0x5F	; 95
    1fac:	f7 4f       	sbci	r31, 0xF7	; 247
    1fae:	81 e0       	ldi	r24, 0x01	; 1
    1fb0:	80 83       	st	Z, r24
    1fb2:	19 be       	out	0x39, r1	; 57
    1fb4:	ff 91       	pop	r31
    1fb6:	ef 91       	pop	r30
    1fb8:	9f 91       	pop	r25
    1fba:	8f 91       	pop	r24
    1fbc:	2f 91       	pop	r18
    1fbe:	0f 90       	pop	r0
    1fc0:	0b be       	out	0x3b, r0	; 59
    1fc2:	0f 90       	pop	r0
    1fc4:	0f be       	out	0x3f, r0	; 63
    1fc6:	0f 90       	pop	r0
    1fc8:	1f 90       	pop	r1
    1fca:	18 95       	reti

00001fcc <__tablejump2__>:
    1fcc:	ee 0f       	add	r30, r30
    1fce:	ff 1f       	adc	r31, r31
    1fd0:	00 24       	eor	r0, r0
    1fd2:	00 1c       	adc	r0, r0
    1fd4:	0b be       	out	0x3b, r0	; 59
    1fd6:	07 90       	elpm	r0, Z+
    1fd8:	f6 91       	elpm	r31, Z
    1fda:	e0 2d       	mov	r30, r0
    1fdc:	09 94       	ijmp

00001fde <_exit>:
    1fde:	f8 94       	cli

00001fe0 <__stop_program>:
    1fe0:	ff cf       	rjmp	.-2      	; 0x1fe0 <__stop_program>
