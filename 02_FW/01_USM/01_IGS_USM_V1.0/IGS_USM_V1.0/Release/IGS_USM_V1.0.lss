
IGS_USM_V1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000080c  000008a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000080c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  00800108  00800108  000008a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000918  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000074c  00000000  00000000  00000958  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005ca  00000000  00000000  000010a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000024b  00000000  00000000  0000166e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000209  00000000  00000000  000018b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	26 c0       	rjmp	.+76     	; 0x4e <__ctors_end>
   2:	0e c3       	rjmp	.+1564   	; 0x620 <__vector_1>
   4:	76 c3       	rjmp	.+1772   	; 0x6f2 <__vector_2>
   6:	3e c0       	rjmp	.+124    	; 0x84 <__bad_interrupt>
   8:	3d c0       	rjmp	.+122    	; 0x84 <__bad_interrupt>
   a:	3c c0       	rjmp	.+120    	; 0x84 <__bad_interrupt>
   c:	3b c0       	rjmp	.+118    	; 0x84 <__bad_interrupt>
   e:	3a c0       	rjmp	.+116    	; 0x84 <__bad_interrupt>
  10:	39 c0       	rjmp	.+114    	; 0x84 <__bad_interrupt>
  12:	38 c0       	rjmp	.+112    	; 0x84 <__bad_interrupt>
  14:	37 c0       	rjmp	.+110    	; 0x84 <__bad_interrupt>
  16:	36 c0       	rjmp	.+108    	; 0x84 <__bad_interrupt>
  18:	35 c0       	rjmp	.+106    	; 0x84 <__bad_interrupt>
  1a:	34 c0       	rjmp	.+104    	; 0x84 <__bad_interrupt>
  1c:	33 c0       	rjmp	.+102    	; 0x84 <__bad_interrupt>
  1e:	32 c0       	rjmp	.+100    	; 0x84 <__bad_interrupt>
  20:	ef c2       	rjmp	.+1502   	; 0x600 <__vector_16>
  22:	30 c0       	rjmp	.+96     	; 0x84 <__bad_interrupt>
  24:	2f c0       	rjmp	.+94     	; 0x84 <__bad_interrupt>
  26:	2e c0       	rjmp	.+92     	; 0x84 <__bad_interrupt>
  28:	2d c0       	rjmp	.+90     	; 0x84 <__bad_interrupt>
  2a:	2c c0       	rjmp	.+88     	; 0x84 <__bad_interrupt>
  2c:	2b c0       	rjmp	.+86     	; 0x84 <__bad_interrupt>
  2e:	2a c0       	rjmp	.+84     	; 0x84 <__bad_interrupt>
  30:	29 c0       	rjmp	.+82     	; 0x84 <__bad_interrupt>
  32:	28 c0       	rjmp	.+80     	; 0x84 <__bad_interrupt>
  34:	92 c1       	rjmp	.+804    	; 0x35a <USMF_SensorOPMControl+0x20>
  36:	91 c1       	rjmp	.+802    	; 0x35a <USMF_SensorOPMControl+0x20>
  38:	90 c1       	rjmp	.+800    	; 0x35a <USMF_SensorOPMControl+0x20>
  3a:	8f c1       	rjmp	.+798    	; 0x35a <USMF_SensorOPMControl+0x20>
  3c:	ce c1       	rjmp	.+924    	; 0x3da <USMF_SensorOPMControl+0xa0>
  3e:	90 c1       	rjmp	.+800    	; 0x360 <USMF_SensorOPMControl+0x26>
  40:	cc c1       	rjmp	.+920    	; 0x3da <USMF_SensorOPMControl+0xa0>
  42:	cb c1       	rjmp	.+918    	; 0x3da <USMF_SensorOPMControl+0xa0>
  44:	ca c1       	rjmp	.+916    	; 0x3da <USMF_SensorOPMControl+0xa0>
  46:	a0 c1       	rjmp	.+832    	; 0x388 <USMF_SensorOPMControl+0x4e>
  48:	ba c1       	rjmp	.+884    	; 0x3be <USMF_SensorOPMControl+0x84>
  4a:	be c1       	rjmp	.+892    	; 0x3c8 <USMF_SensorOPMControl+0x8e>
  4c:	c2 c1       	rjmp	.+900    	; 0x3d2 <USMF_SensorOPMControl+0x98>

0000004e <__ctors_end>:
  4e:	11 24       	eor	r1, r1
  50:	1f be       	out	0x3f, r1	; 63
  52:	cf ef       	ldi	r28, 0xFF	; 255
  54:	d2 e0       	ldi	r29, 0x02	; 2
  56:	de bf       	out	0x3e, r29	; 62
  58:	cd bf       	out	0x3d, r28	; 61

0000005a <__do_copy_data>:
  5a:	11 e0       	ldi	r17, 0x01	; 1
  5c:	a0 e0       	ldi	r26, 0x00	; 0
  5e:	b1 e0       	ldi	r27, 0x01	; 1
  60:	ec e0       	ldi	r30, 0x0C	; 12
  62:	f8 e0       	ldi	r31, 0x08	; 8
  64:	02 c0       	rjmp	.+4      	; 0x6a <__do_copy_data+0x10>
  66:	05 90       	lpm	r0, Z+
  68:	0d 92       	st	X+, r0
  6a:	a8 30       	cpi	r26, 0x08	; 8
  6c:	b1 07       	cpc	r27, r17
  6e:	d9 f7       	brne	.-10     	; 0x66 <__do_copy_data+0xc>

00000070 <__do_clear_bss>:
  70:	21 e0       	ldi	r18, 0x01	; 1
  72:	a8 e0       	ldi	r26, 0x08	; 8
  74:	b1 e0       	ldi	r27, 0x01	; 1
  76:	01 c0       	rjmp	.+2      	; 0x7a <.do_clear_bss_start>

00000078 <.do_clear_bss_loop>:
  78:	1d 92       	st	X+, r1

0000007a <.do_clear_bss_start>:
  7a:	a1 32       	cpi	r26, 0x21	; 33
  7c:	b2 07       	cpc	r27, r18
  7e:	e1 f7       	brne	.-8      	; 0x78 <.do_clear_bss_loop>
  80:	b2 d1       	rcall	.+868    	; 0x3e6 <main>
  82:	c2 c3       	rjmp	.+1924   	; 0x808 <_exit>

00000084 <__bad_interrupt>:
  84:	bd cf       	rjmp	.-134    	; 0x0 <__vectors>

00000086 <USMF_PortInit>:
  86:	83 e0       	ldi	r24, 0x03	; 3
  88:	84 b9       	out	0x04, r24	; 4
  8a:	8c e0       	ldi	r24, 0x0C	; 12
  8c:	87 b9       	out	0x07, r24	; 7
  8e:	80 e3       	ldi	r24, 0x30	; 48
  90:	8a b9       	out	0x0a, r24	; 10
  92:	15 b8       	out	0x05, r1	; 5
  94:	18 b8       	out	0x08, r1	; 8
  96:	1b b8       	out	0x0b, r1	; 11
  98:	84 e0       	ldi	r24, 0x04	; 4
  9a:	88 b9       	out	0x08, r24	; 8
  9c:	08 95       	ret

0000009e <USMF_ExternalInterruptInit>:
  9e:	e9 e6       	ldi	r30, 0x69	; 105
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	10 82       	st	Z, r1
  a4:	80 81       	ld	r24, Z
  a6:	82 60       	ori	r24, 0x02	; 2
  a8:	80 83       	st	Z, r24
  aa:	80 81       	ld	r24, Z
  ac:	84 60       	ori	r24, 0x04	; 4
  ae:	80 83       	st	Z, r24
  b0:	80 81       	ld	r24, Z
  b2:	88 60       	ori	r24, 0x08	; 8
  b4:	80 83       	st	Z, r24
  b6:	83 e0       	ldi	r24, 0x03	; 3
  b8:	8d bb       	out	0x1d, r24	; 29
  ba:	08 95       	ret

000000bc <USMF_TimerZeroInit>:
  bc:	14 bc       	out	0x24, r1	; 36
  be:	15 bc       	out	0x25, r1	; 37
  c0:	81 e0       	ldi	r24, 0x01	; 1
  c2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__EEPROM_REGION_LENGTH__+0x7f006e>
  c6:	85 bb       	out	0x15, r24	; 21
  c8:	08 95       	ret

000000ca <USMF_StatusInit>:
  ca:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <G_plcRxBitCnt>
  ce:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <MYPPNSR>
  d2:	ea e1       	ldi	r30, 0x1A	; 26
  d4:	f1 e0       	ldi	r31, 0x01	; 1
  d6:	10 82       	st	Z, r1
  d8:	11 82       	std	Z+1, r1	; 0x01
  da:	12 82       	std	Z+2, r1	; 0x02
  dc:	13 82       	std	Z+3, r1	; 0x03
  de:	14 82       	std	Z+4, r1	; 0x04
  e0:	15 82       	std	Z+5, r1	; 0x05
  e2:	08 95       	ret

000000e4 <USMF_ReadSerialNumber>:
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	84 e0       	ldi	r24, 0x04	; 4
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	76 d3       	rcall	.+1772   	; 0x7dc <eeprom_read_byte>
  f0:	08 2f       	mov	r16, r24
  f2:	85 e0       	ldi	r24, 0x05	; 5
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	72 d3       	rcall	.+1764   	; 0x7dc <eeprom_read_byte>
  f8:	c8 2f       	mov	r28, r24
  fa:	86 e0       	ldi	r24, 0x06	; 6
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	6e d3       	rcall	.+1756   	; 0x7dc <eeprom_read_byte>
 100:	40 2f       	mov	r20, r16
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	60 e0       	ldi	r22, 0x00	; 0
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	9a 01       	movw	r18, r20
 10a:	11 27       	eor	r17, r17
 10c:	00 27       	eor	r16, r16
 10e:	4c 2f       	mov	r20, r28
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	76 2f       	mov	r23, r22
 118:	65 2f       	mov	r22, r21
 11a:	54 2f       	mov	r21, r20
 11c:	44 27       	eor	r20, r20
 11e:	40 0f       	add	r20, r16
 120:	51 1f       	adc	r21, r17
 122:	62 1f       	adc	r22, r18
 124:	73 1f       	adc	r23, r19
 126:	8a 01       	movw	r16, r20
 128:	9b 01       	movw	r18, r22
 12a:	08 0f       	add	r16, r24
 12c:	11 1d       	adc	r17, r1
 12e:	21 1d       	adc	r18, r1
 130:	31 1d       	adc	r19, r1
 132:	c9 01       	movw	r24, r18
 134:	b8 01       	movw	r22, r16
 136:	cf 91       	pop	r28
 138:	1f 91       	pop	r17
 13a:	0f 91       	pop	r16
 13c:	08 95       	ret

0000013e <ReadDefaultParmaFromEEPROM>:
 13e:	87 e0       	ldi	r24, 0x07	; 7
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	4c d3       	rcall	.+1688   	; 0x7dc <eeprom_read_byte>
 144:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <EPR_ID>
 148:	89 e0       	ldi	r24, 0x09	; 9
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	47 d3       	rcall	.+1678   	; 0x7dc <eeprom_read_byte>
 14e:	28 2f       	mov	r18, r24
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	a4 ee       	ldi	r26, 0xE4	; 228
 154:	b2 e0       	ldi	r27, 0x02	; 2
 156:	36 d3       	rcall	.+1644   	; 0x7c4 <__umulhisi3>
 158:	dc 01       	movw	r26, r24
 15a:	cb 01       	movw	r24, r22
 15c:	84 5a       	subi	r24, 0xA4	; 164
 15e:	94 4d       	sbci	r25, 0xD4	; 212
 160:	af 4f       	sbci	r26, 0xFF	; 255
 162:	bf 4f       	sbci	r27, 0xFF	; 255
 164:	26 e0       	ldi	r18, 0x06	; 6
 166:	b6 95       	lsr	r27
 168:	a7 95       	ror	r26
 16a:	97 95       	ror	r25
 16c:	87 95       	ror	r24
 16e:	2a 95       	dec	r18
 170:	d1 f7       	brne	.-12     	; 0x166 <ReadDefaultParmaFromEEPROM+0x28>
 172:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <MaxSampleNum>
 176:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <MaxSampleNum+0x1>
 17a:	a0 93 05 01 	sts	0x0105, r26	; 0x800105 <MaxSampleNum+0x2>
 17e:	b0 93 06 01 	sts	0x0106, r27	; 0x800106 <MaxSampleNum+0x3>
 182:	8a e0       	ldi	r24, 0x0A	; 10
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	2a d3       	rcall	.+1620   	; 0x7dc <eeprom_read_byte>
 188:	8e 5c       	subi	r24, 0xCE	; 206
 18a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <ADCLevelThreshold>
 18e:	8b e0       	ldi	r24, 0x0B	; 11
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	24 d3       	rcall	.+1608   	; 0x7dc <eeprom_read_byte>
 194:	8f 5f       	subi	r24, 0xFF	; 255
 196:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <ADCCntThreshold>
 19a:	8c e0       	ldi	r24, 0x0C	; 12
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	1e d3       	rcall	.+1596   	; 0x7dc <eeprom_read_byte>
 1a0:	8f 5f       	subi	r24, 0xFF	; 255
 1a2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <BurstCnt>
 1a6:	08 95       	ret

000001a8 <USMF_ADCInit>:
 1a8:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <ADCCNT+0x1>
 1ac:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <ADCCNT>
 1b0:	80 e2       	ldi	r24, 0x20	; 32
 1b2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
 1b6:	81 e8       	ldi	r24, 0x81	; 129
 1b8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__EEPROM_REGION_LENGTH__+0x7f007a>
 1bc:	08 95       	ret

000001be <USMF_TxPulsing>:
 1be:	20 e0       	ldi	r18, 0x00	; 0
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	40 e2       	ldi	r20, 0x20	; 32
 1c6:	28 17       	cp	r18, r24
 1c8:	39 07       	cpc	r19, r25
 1ca:	64 f4       	brge	.+24     	; 0x1e4 <USMF_TxPulsing+0x26>
 1cc:	4b b9       	out	0x0b, r20	; 11
 1ce:	53 e0       	ldi	r21, 0x03	; 3
 1d0:	5a 95       	dec	r21
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <USMF_TxPulsing+0x12>
 1d4:	00 00       	nop
 1d6:	1b b8       	out	0x0b, r1	; 11
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <USMF_TxPulsing+0x1c>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <USMF_TxPulsing+0x1e>
 1dc:	00 00       	nop
 1de:	2f 5f       	subi	r18, 0xFF	; 255
 1e0:	3f 4f       	sbci	r19, 0xFF	; 255
 1e2:	f1 cf       	rjmp	.-30     	; 0x1c6 <USMF_TxPulsing+0x8>
 1e4:	08 95       	ret

000001e6 <USMF_PLC_TX>:
 1e6:	fa 01       	movw	r30, r20
 1e8:	80 81       	ld	r24, Z
 1ea:	81 30       	cpi	r24, 0x01	; 1
 1ec:	29 f4       	brne	.+10     	; 0x1f8 <USMF_PLC_TX+0x12>
 1ee:	81 81       	ldd	r24, Z+1	; 0x01
 1f0:	81 30       	cpi	r24, 0x01	; 1
 1f2:	89 f1       	breq	.+98     	; 0x256 <USMF_PLC_TX+0x70>
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	30 c0       	rjmp	.+96     	; 0x258 <USMF_PLC_TX+0x72>
 1f8:	74 30       	cpi	r23, 0x04	; 4
 1fa:	59 f0       	breq	.+22     	; 0x212 <USMF_PLC_TX+0x2c>
 1fc:	28 f4       	brcc	.+10     	; 0x208 <USMF_PLC_TX+0x22>
 1fe:	73 30       	cpi	r23, 0x03	; 3
 200:	01 f5       	brne	.+64     	; 0x242 <USMF_PLC_TX+0x5c>
 202:	18 b8       	out	0x08, r1	; 8
 204:	83 e0       	ldi	r24, 0x03	; 3
 206:	20 c0       	rjmp	.+64     	; 0x248 <USMF_PLC_TX+0x62>
 208:	75 30       	cpi	r23, 0x05	; 5
 20a:	31 f0       	breq	.+12     	; 0x218 <USMF_PLC_TX+0x32>
 20c:	76 30       	cpi	r23, 0x06	; 6
 20e:	41 f0       	breq	.+16     	; 0x220 <USMF_PLC_TX+0x3a>
 210:	18 c0       	rjmp	.+48     	; 0x242 <USMF_PLC_TX+0x5c>
 212:	78 b9       	out	0x08, r23	; 8
 214:	84 e0       	ldi	r24, 0x04	; 4
 216:	18 c0       	rjmp	.+48     	; 0x248 <USMF_PLC_TX+0x62>
 218:	88 e0       	ldi	r24, 0x08	; 8
 21a:	88 b9       	out	0x08, r24	; 8
 21c:	85 e0       	ldi	r24, 0x05	; 5
 21e:	14 c0       	rjmp	.+40     	; 0x248 <USMF_PLC_TX+0x62>
 220:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <LEDStatus>
 224:	81 11       	cpse	r24, r1
 226:	06 c0       	rjmp	.+12     	; 0x234 <USMF_PLC_TX+0x4e>
 228:	84 e0       	ldi	r24, 0x04	; 4
 22a:	88 b9       	out	0x08, r24	; 8
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <LEDStatus>
 232:	09 c0       	rjmp	.+18     	; 0x246 <USMF_PLC_TX+0x60>
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	39 f4       	brne	.+14     	; 0x246 <USMF_PLC_TX+0x60>
 238:	88 e0       	ldi	r24, 0x08	; 8
 23a:	88 b9       	out	0x08, r24	; 8
 23c:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <LEDStatus>
 240:	02 c0       	rjmp	.+4      	; 0x246 <USMF_PLC_TX+0x60>
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	01 c0       	rjmp	.+2      	; 0x248 <USMF_PLC_TX+0x62>
 246:	86 e0       	ldi	r24, 0x06	; 6
 248:	e7 eb       	ldi	r30, 0xB7	; 183
 24a:	fb e0       	ldi	r31, 0x0B	; 11
 24c:	31 97       	sbiw	r30, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <USMF_PLC_TX+0x66>
 250:	00 c0       	rjmp	.+0      	; 0x252 <USMF_PLC_TX+0x6c>
 252:	00 00       	nop
 254:	01 c0       	rjmp	.+2      	; 0x258 <USMF_PLC_TX+0x72>
 256:	82 e0       	ldi	r24, 0x02	; 2
 258:	e9 ef       	ldi	r30, 0xF9	; 249
 25a:	f0 e0       	ldi	r31, 0x00	; 0
 25c:	31 97       	sbiw	r30, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <USMF_PLC_TX+0x76>
 260:	00 c0       	rjmp	.+0      	; 0x262 <USMF_PLC_TX+0x7c>
 262:	00 00       	nop
 264:	90 e1       	ldi	r25, 0x10	; 16
 266:	9b b9       	out	0x0b, r25	; 11
 268:	f4 e6       	ldi	r31, 0x64	; 100
 26a:	fa 95       	dec	r31
 26c:	f1 f7       	brne	.-4      	; 0x26a <USMF_PLC_TX+0x84>
 26e:	98 2f       	mov	r25, r24
 270:	91 70       	andi	r25, 0x01	; 1
 272:	92 95       	swap	r25
 274:	90 7f       	andi	r25, 0xF0	; 240
 276:	9b b9       	out	0x0b, r25	; 11
 278:	94 e6       	ldi	r25, 0x64	; 100
 27a:	9a 95       	dec	r25
 27c:	f1 f7       	brne	.-4      	; 0x27a <USMF_PLC_TX+0x94>
 27e:	81 fb       	bst	r24, 1
 280:	99 27       	eor	r25, r25
 282:	90 f9       	bld	r25, 0
 284:	92 95       	swap	r25
 286:	90 7f       	andi	r25, 0xF0	; 240
 288:	9b b9       	out	0x0b, r25	; 11
 28a:	e4 e6       	ldi	r30, 0x64	; 100
 28c:	ea 95       	dec	r30
 28e:	f1 f7       	brne	.-4      	; 0x28c <USMF_PLC_TX+0xa6>
 290:	86 95       	lsr	r24
 292:	86 95       	lsr	r24
 294:	82 95       	swap	r24
 296:	80 7f       	andi	r24, 0xF0	; 240
 298:	8b b9       	out	0x0b, r24	; 11
 29a:	f4 e6       	ldi	r31, 0x64	; 100
 29c:	fa 95       	dec	r31
 29e:	f1 f7       	brne	.-4      	; 0x29c <USMF_PLC_TX+0xb6>
 2a0:	1b b8       	out	0x0b, r1	; 11
 2a2:	08 95       	ret

000002a4 <USMF_SensingFunction>:
 2a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <BurstCnt>
 2a8:	8a df       	rcall	.-236    	; 0x1be <USMF_TxPulsing>
 2aa:	8d ee       	ldi	r24, 0xED	; 237
 2ac:	92 e0       	ldi	r25, 0x02	; 2
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <USMF_SensingFunction+0xa>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <USMF_SensingFunction+0x10>
 2b4:	00 00       	nop
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	dc 01       	movw	r26, r24
 2bc:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <MaxSampleNum>
 2c0:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <MaxSampleNum+0x1>
 2c4:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <MaxSampleNum+0x2>
 2c8:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <MaxSampleNum+0x3>
 2cc:	84 17       	cp	r24, r20
 2ce:	95 07       	cpc	r25, r21
 2d0:	a6 07       	cpc	r26, r22
 2d2:	b7 07       	cpc	r27, r23
 2d4:	d8 f4       	brcc	.+54     	; 0x30c <__stack+0xd>
 2d6:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <__EEPROM_REGION_LENGTH__+0x7f007a>
 2da:	20 64       	ori	r18, 0x40	; 64
 2dc:	20 93 7a 00 	sts	0x007A, r18	; 0x80007a <__EEPROM_REGION_LENGTH__+0x7f007a>
 2e0:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <__EEPROM_REGION_LENGTH__+0x7f007a>
 2e4:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__EEPROM_REGION_LENGTH__+0x7f0079>
 2e8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <ADCLevelThreshold>
 2ec:	23 17       	cp	r18, r19
 2ee:	50 f4       	brcc	.+20     	; 0x304 <__stack+0x5>
 2f0:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <ADCCNT>
 2f4:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <ADCCNT+0x1>
 2f8:	2f 5f       	subi	r18, 0xFF	; 255
 2fa:	3f 4f       	sbci	r19, 0xFF	; 255
 2fc:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <ADCCNT+0x1>
 300:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <ADCCNT>
 304:	01 96       	adiw	r24, 0x01	; 1
 306:	a1 1d       	adc	r26, r1
 308:	b1 1d       	adc	r27, r1
 30a:	d8 cf       	rjmp	.-80     	; 0x2bc <USMF_SensingFunction+0x18>
 30c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <ADCCNT>
 310:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <ADCCntThreshold>
 314:	21 e0       	ldi	r18, 0x01	; 1
 316:	98 17       	cp	r25, r24
 318:	08 f0       	brcs	.+2      	; 0x31c <__stack+0x1d>
 31a:	20 e0       	ldi	r18, 0x00	; 0
 31c:	20 93 17 01 	sts	0x0117, r18	; 0x800117 <ParkingFlag>
 320:	98 17       	cp	r25, r24
 322:	10 f4       	brcc	.+4      	; 0x328 <__stack+0x29>
 324:	88 e0       	ldi	r24, 0x08	; 8
 326:	01 c0       	rjmp	.+2      	; 0x32a <__stack+0x2b>
 328:	84 e0       	ldi	r24, 0x04	; 4
 32a:	88 b9       	out	0x08, r24	; 8
 32c:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <ADCCNT+0x1>
 330:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <ADCCNT>
 334:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <ParkingFlag>
 338:	08 95       	ret

0000033a <USMF_SensorOPMControl>:
 33a:	ff 92       	push	r15
 33c:	0f 93       	push	r16
 33e:	1f 93       	push	r17
 340:	cf 93       	push	r28
 342:	df 93       	push	r29
 344:	07 2f       	mov	r16, r23
 346:	10 e0       	ldi	r17, 0x00	; 0
 348:	f8 01       	movw	r30, r16
 34a:	33 97       	sbiw	r30, 0x03	; 3
 34c:	ed 30       	cpi	r30, 0x0D	; 13
 34e:	f1 05       	cpc	r31, r1
 350:	08 f0       	brcs	.+2      	; 0x354 <USMF_SensorOPMControl+0x1a>
 352:	43 c0       	rjmp	.+134    	; 0x3da <USMF_SensorOPMControl+0xa0>
 354:	e6 5e       	subi	r30, 0xE6	; 230
 356:	ff 4f       	sbci	r31, 0xFF	; 255
 358:	09 94       	ijmp
 35a:	fa 01       	movw	r30, r20
 35c:	10 82       	st	Z, r1
 35e:	0e c0       	rjmp	.+28     	; 0x37c <USMF_SensorOPMControl+0x42>
 360:	8a 01       	movw	r16, r20
 362:	c8 2f       	mov	r28, r24
 364:	d7 2f       	mov	r29, r23
 366:	f6 2e       	mov	r15, r22
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	fa 01       	movw	r30, r20
 36c:	80 83       	st	Z, r24
 36e:	9a df       	rcall	.-204    	; 0x2a4 <USMF_SensingFunction>
 370:	f8 01       	movw	r30, r16
 372:	81 83       	std	Z+1, r24	; 0x01
 374:	a8 01       	movw	r20, r16
 376:	6f 2d       	mov	r22, r15
 378:	7d 2f       	mov	r23, r29
 37a:	8c 2f       	mov	r24, r28
 37c:	df 91       	pop	r29
 37e:	cf 91       	pop	r28
 380:	1f 91       	pop	r17
 382:	0f 91       	pop	r16
 384:	ff 90       	pop	r15
 386:	2f cf       	rjmp	.-418    	; 0x1e6 <USMF_PLC_TX>
 388:	28 2f       	mov	r18, r24
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	a4 ee       	ldi	r26, 0xE4	; 228
 38e:	b2 e0       	ldi	r27, 0x02	; 2
 390:	19 d2       	rcall	.+1074   	; 0x7c4 <__umulhisi3>
 392:	dc 01       	movw	r26, r24
 394:	cb 01       	movw	r24, r22
 396:	84 5a       	subi	r24, 0xA4	; 164
 398:	94 4d       	sbci	r25, 0xD4	; 212
 39a:	af 4f       	sbci	r26, 0xFF	; 255
 39c:	bf 4f       	sbci	r27, 0xFF	; 255
 39e:	26 e0       	ldi	r18, 0x06	; 6
 3a0:	b6 95       	lsr	r27
 3a2:	a7 95       	ror	r26
 3a4:	97 95       	ror	r25
 3a6:	87 95       	ror	r24
 3a8:	2a 95       	dec	r18
 3aa:	d1 f7       	brne	.-12     	; 0x3a0 <USMF_SensorOPMControl+0x66>
 3ac:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <MaxSampleNum>
 3b0:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <MaxSampleNum+0x1>
 3b4:	a0 93 05 01 	sts	0x0105, r26	; 0x800105 <MaxSampleNum+0x2>
 3b8:	b0 93 06 01 	sts	0x0106, r27	; 0x800106 <MaxSampleNum+0x3>
 3bc:	0e c0       	rjmp	.+28     	; 0x3da <USMF_SensorOPMControl+0xa0>
 3be:	22 e3       	ldi	r18, 0x32	; 50
 3c0:	28 0f       	add	r18, r24
 3c2:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <ADCLevelThreshold>
 3c6:	09 c0       	rjmp	.+18     	; 0x3da <USMF_SensorOPMControl+0xa0>
 3c8:	21 e0       	ldi	r18, 0x01	; 1
 3ca:	28 0f       	add	r18, r24
 3cc:	20 93 01 01 	sts	0x0101, r18	; 0x800101 <ADCCntThreshold>
 3d0:	04 c0       	rjmp	.+8      	; 0x3da <USMF_SensorOPMControl+0xa0>
 3d2:	21 e0       	ldi	r18, 0x01	; 1
 3d4:	28 0f       	add	r18, r24
 3d6:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <BurstCnt>
 3da:	df 91       	pop	r29
 3dc:	cf 91       	pop	r28
 3de:	1f 91       	pop	r17
 3e0:	0f 91       	pop	r16
 3e2:	ff 90       	pop	r15
 3e4:	08 95       	ret

000003e6 <main>:
 3e6:	cf 93       	push	r28
 3e8:	df 93       	push	r29
 3ea:	00 d0       	rcall	.+0      	; 0x3ec <main+0x6>
 3ec:	cd b7       	in	r28, 0x3d	; 61
 3ee:	de b7       	in	r29, 0x3e	; 62
 3f0:	4a de       	rcall	.-876    	; 0x86 <USMF_PortInit>
 3f2:	55 de       	rcall	.-854    	; 0x9e <USMF_ExternalInterruptInit>
 3f4:	d9 de       	rcall	.-590    	; 0x1a8 <USMF_ADCInit>
 3f6:	62 de       	rcall	.-828    	; 0xbc <USMF_TimerZeroInit>
 3f8:	75 de       	rcall	.-790    	; 0xe4 <USMF_ReadSerialNumber>
 3fa:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <mySerialNumber>
 3fe:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <mySerialNumber+0x1>
 402:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <mySerialNumber+0x2>
 406:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <mySerialNumber+0x3>
 40a:	99 de       	rcall	.-718    	; 0x13e <ReadDefaultParmaFromEEPROM>
 40c:	78 94       	sei
 40e:	5d de       	rcall	.-838    	; 0xca <USMF_StatusInit>
 410:	14 e0       	ldi	r17, 0x04	; 4
 412:	01 e0       	ldi	r16, 0x01	; 1
 414:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 418:	81 30       	cpi	r24, 0x01	; 1
 41a:	31 f5       	brne	.+76     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 41c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <G_preBitValue>
 420:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <G_plcRxBitCnt>
 424:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <G_plcRxBitCnt>
 428:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 42c:	e6 95       	lsr	r30
 42e:	e6 95       	lsr	r30
 430:	e6 95       	lsr	r30
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	e6 5e       	subi	r30, 0xE6	; 230
 436:	fe 4f       	sbci	r31, 0xFE	; 254
 438:	50 81       	ld	r21, Z
 43a:	89 2f       	mov	r24, r25
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	46 95       	lsr	r20
 440:	46 95       	lsr	r20
 442:	46 95       	lsr	r20
 444:	68 e0       	ldi	r22, 0x08	; 8
 446:	46 9f       	mul	r20, r22
 448:	20 19       	sub	r18, r0
 44a:	31 09       	sbc	r19, r1
 44c:	11 24       	eor	r1, r1
 44e:	01 c0       	rjmp	.+2      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 450:	88 0f       	add	r24, r24
 452:	2a 95       	dec	r18
 454:	ea f7       	brpl	.-6      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 456:	85 2b       	or	r24, r21
 458:	80 83       	st	Z, r24
 45a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 45e:	8f 5f       	subi	r24, 0xFF	; 255
 460:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <G_plcRxBitCnt>
 464:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
 468:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 46c:	84 32       	cpi	r24, 0x24	; 36
 46e:	90 f2       	brcs	.-92     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 470:	15 bc       	out	0x25, r1	; 37
 472:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <G_plcRxBuffer>
 476:	8f 70       	andi	r24, 0x0F	; 15
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	95 95       	asr	r25
 47c:	87 95       	ror	r24
 47e:	81 30       	cpi	r24, 0x01	; 1
 480:	91 05       	cpc	r25, r1
 482:	09 f4       	brne	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 484:	88 c0       	rjmp	.+272    	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 486:	1c f4       	brge	.+6      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 488:	89 2b       	or	r24, r25
 48a:	81 f0       	breq	.+32     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 48c:	b7 c0       	rjmp	.+366    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 48e:	84 30       	cpi	r24, 0x04	; 4
 490:	91 05       	cpc	r25, r1
 492:	09 f4       	brne	.+2      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 494:	99 c0       	rjmp	.+306    	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 496:	07 97       	sbiw	r24, 0x07	; 7
 498:	09 f0       	breq	.+2      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 49a:	b0 c0       	rjmp	.+352    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 49c:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <SN_ReceiveSuccessFallingF>
 4a0:	81 30       	cpi	r24, 0x01	; 1
 4a2:	09 f4       	brne	.+2      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 4a4:	ab c0       	rjmp	.+342    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 4a6:	18 b8       	out	0x08, r1	; 8
 4a8:	18 b8       	out	0x08, r1	; 8
 4aa:	a8 c0       	rjmp	.+336    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 4ac:	30 91 1a 01 	lds	r19, 0x011A	; 0x80011a <G_plcRxBuffer>
 4b0:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <G_plcRxBuffer+0x1>
 4b4:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <G_plcRxBuffer+0x1>
 4b8:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <G_plcRxBuffer+0x2>
 4bc:	60 91 1c 01 	lds	r22, 0x011C	; 0x80011c <G_plcRxBuffer+0x2>
 4c0:	40 91 1d 01 	lds	r20, 0x011D	; 0x80011d <G_plcRxBuffer+0x3>
 4c4:	70 e1       	ldi	r23, 0x10	; 16
 4c6:	87 9f       	mul	r24, r23
 4c8:	c0 01       	movw	r24, r0
 4ca:	11 24       	eor	r1, r1
 4cc:	99 27       	eor	r25, r25
 4ce:	32 95       	swap	r19
 4d0:	3f 70       	andi	r19, 0x0F	; 15
 4d2:	83 2b       	or	r24, r19
 4d4:	09 2e       	mov	r0, r25
 4d6:	00 0c       	add	r0, r0
 4d8:	aa 0b       	sbc	r26, r26
 4da:	bb 0b       	sbc	r27, r27
 4dc:	7c 01       	movw	r14, r24
 4de:	dd 24       	eor	r13, r13
 4e0:	cc 24       	eor	r12, r12
 4e2:	80 e1       	ldi	r24, 0x10	; 16
 4e4:	28 9f       	mul	r18, r24
 4e6:	90 01       	movw	r18, r0
 4e8:	11 24       	eor	r1, r1
 4ea:	33 27       	eor	r19, r19
 4ec:	85 2f       	mov	r24, r21
 4ee:	82 95       	swap	r24
 4f0:	8f 70       	andi	r24, 0x0F	; 15
 4f2:	f9 01       	movw	r30, r18
 4f4:	e8 2b       	or	r30, r24
 4f6:	cf 01       	movw	r24, r30
 4f8:	09 2e       	mov	r0, r25
 4fa:	00 0c       	add	r0, r0
 4fc:	aa 0b       	sbc	r26, r26
 4fe:	bb 0b       	sbc	r27, r27
 500:	ba 2f       	mov	r27, r26
 502:	a9 2f       	mov	r26, r25
 504:	98 2f       	mov	r25, r24
 506:	88 27       	eor	r24, r24
 508:	8c 0d       	add	r24, r12
 50a:	9d 1d       	adc	r25, r13
 50c:	ae 1d       	adc	r26, r14
 50e:	bf 1d       	adc	r27, r15
 510:	f0 e1       	ldi	r31, 0x10	; 16
 512:	4f 9f       	mul	r20, r31
 514:	a0 01       	movw	r20, r0
 516:	11 24       	eor	r1, r1
 518:	55 27       	eor	r21, r21
 51a:	62 95       	swap	r22
 51c:	6f 70       	andi	r22, 0x0F	; 15
 51e:	46 2b       	or	r20, r22
 520:	05 2e       	mov	r0, r21
 522:	00 0c       	add	r0, r0
 524:	66 0b       	sbc	r22, r22
 526:	77 0b       	sbc	r23, r23
 528:	84 0f       	add	r24, r20
 52a:	95 1f       	adc	r25, r21
 52c:	a6 1f       	adc	r26, r22
 52e:	b7 1f       	adc	r27, r23
 530:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <rxSerialNumber>
 534:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <rxSerialNumber+0x1>
 538:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <rxSerialNumber+0x2>
 53c:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <rxSerialNumber+0x3>
 540:	f0 90 1d 01 	lds	r15, 0x011D	; 0x80011d <G_plcRxBuffer+0x3>
 544:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <G_plcRxBuffer+0x4>
 548:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <mySerialNumber>
 54c:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <mySerialNumber+0x1>
 550:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <mySerialNumber+0x2>
 554:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <mySerialNumber+0x3>
 558:	84 17       	cp	r24, r20
 55a:	95 07       	cpc	r25, r21
 55c:	a6 07       	cpc	r26, r22
 55e:	b7 07       	cpc	r27, r23
 560:	09 f0       	breq	.+2      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 562:	4c c0       	rjmp	.+152    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 564:	f2 94       	swap	r15
 566:	8f e0       	ldi	r24, 0x0F	; 15
 568:	f8 22       	and	r15, r24
 56a:	30 e1       	ldi	r19, 0x10	; 16
 56c:	23 9f       	mul	r18, r19
 56e:	c0 01       	movw	r24, r0
 570:	11 24       	eor	r1, r1
 572:	f8 2a       	or	r15, r24
 574:	18 b9       	out	0x08, r17	; 8
 576:	87 e0       	ldi	r24, 0x07	; 7
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	30 d1       	rcall	.+608    	; 0x7dc <eeprom_read_byte>
 57c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <EPR_ID>
 580:	f0 92 0c 01 	sts	0x010C, r15	; 0x80010c <MY_ID>
 584:	f8 16       	cp	r15, r24
 586:	21 f0       	breq	.+8      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 588:	6f 2d       	mov	r22, r15
 58a:	87 e0       	ldi	r24, 0x07	; 7
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	2e d1       	rcall	.+604    	; 0x7ec <eeprom_write_byte>
 590:	00 93 0d 01 	sts	0x010D, r16	; 0x80010d <SN_ReceiveSuccessFallingF>
 594:	33 c0       	rjmp	.+102    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 596:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <SN_ReceiveSuccessFallingF>
 59a:	81 30       	cpi	r24, 0x01	; 1
 59c:	79 f5       	brne	.+94     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 59e:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <G_plcRxBuffer>
 5a2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <G_plcRxBuffer+0x1>
 5a6:	62 95       	swap	r22
 5a8:	6f 70       	andi	r22, 0x0F	; 15
 5aa:	70 e1       	ldi	r23, 0x10	; 16
 5ac:	97 9f       	mul	r25, r23
 5ae:	c0 01       	movw	r24, r0
 5b0:	11 24       	eor	r1, r1
 5b2:	68 2b       	or	r22, r24
 5b4:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <G_plcRxBuffer+0x1>
 5b8:	72 95       	swap	r23
 5ba:	7f 70       	andi	r23, 0x0F	; 15
 5bc:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <G_plcRxBuffer+0x2>
 5c0:	1a 82       	std	Y+2, r1	; 0x02
 5c2:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <MY_ID>
 5c6:	14 c0       	rjmp	.+40     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5c8:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <G_plcRxBuffer>
 5cc:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <G_plcRxBuffer+0x1>
 5d0:	62 95       	swap	r22
 5d2:	6f 70       	andi	r22, 0x0F	; 15
 5d4:	e0 e1       	ldi	r30, 0x10	; 16
 5d6:	9e 9f       	mul	r25, r30
 5d8:	c0 01       	movw	r24, r0
 5da:	11 24       	eor	r1, r1
 5dc:	68 2b       	or	r22, r24
 5de:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <G_plcRxBuffer+0x1>
 5e2:	72 95       	swap	r23
 5e4:	7f 70       	andi	r23, 0x0F	; 15
 5e6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <G_plcRxBuffer+0x2>
 5ea:	1a 82       	std	Y+2, r1	; 0x02
 5ec:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <EPR_ID>
 5f0:	69 13       	cpse	r22, r25
 5f2:	04 c0       	rjmp	.+8      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f4:	ae 01       	movw	r20, r28
 5f6:	4f 5f       	subi	r20, 0xFF	; 255
 5f8:	5f 4f       	sbci	r21, 0xFF	; 255
 5fa:	9f de       	rcall	.-706    	; 0x33a <USMF_SensorOPMControl>
 5fc:	66 dd       	rcall	.-1332   	; 0xca <USMF_StatusInit>
 5fe:	0a cf       	rjmp	.-492    	; 0x414 <__LOCK_REGION_LENGTH__+0x14>

00000600 <__vector_16>:
 600:	1f 92       	push	r1
 602:	0f 92       	push	r0
 604:	0f b6       	in	r0, 0x3f	; 63
 606:	0f 92       	push	r0
 608:	11 24       	eor	r1, r1
 60a:	8f 93       	push	r24
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
 612:	16 bc       	out	0x26, r1	; 38
 614:	8f 91       	pop	r24
 616:	0f 90       	pop	r0
 618:	0f be       	out	0x3f, r0	; 63
 61a:	0f 90       	pop	r0
 61c:	1f 90       	pop	r1
 61e:	18 95       	reti

00000620 <__vector_1>:
 620:	1f 92       	push	r1
 622:	0f 92       	push	r0
 624:	0f b6       	in	r0, 0x3f	; 63
 626:	0f 92       	push	r0
 628:	11 24       	eor	r1, r1
 62a:	2f 93       	push	r18
 62c:	3f 93       	push	r19
 62e:	4f 93       	push	r20
 630:	8f 93       	push	r24
 632:	9f 93       	push	r25
 634:	ef 93       	push	r30
 636:	ff 93       	push	r31
 638:	15 bc       	out	0x25, r1	; 37
 63a:	16 bc       	out	0x26, r1	; 38
 63c:	a8 98       	cbi	0x15, 0	; 21
 63e:	8a e0       	ldi	r24, 0x0A	; 10
 640:	8a 95       	dec	r24
 642:	f1 f7       	brne	.-4      	; 0x640 <__vector_1+0x20>
 644:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <MYPPNSR>
 648:	80 fd       	sbrc	r24, 0
 64a:	27 c0       	rjmp	.+78     	; 0x69a <__vector_1+0x7a>
 64c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <MYPPNSR>
 650:	82 60       	ori	r24, 0x02	; 2
 652:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <MYPPNSR>
 656:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <G_plcRxBitCnt>
 65a:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <G_plcRxBitCnt>
 65e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 662:	e6 95       	lsr	r30
 664:	e6 95       	lsr	r30
 666:	e6 95       	lsr	r30
 668:	f0 e0       	ldi	r31, 0x00	; 0
 66a:	e6 5e       	subi	r30, 0xE6	; 230
 66c:	fe 4f       	sbci	r31, 0xFE	; 254
 66e:	40 81       	ld	r20, Z
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	96 95       	lsr	r25
 674:	96 95       	lsr	r25
 676:	96 95       	lsr	r25
 678:	88 e0       	ldi	r24, 0x08	; 8
 67a:	98 9f       	mul	r25, r24
 67c:	20 19       	sub	r18, r0
 67e:	31 09       	sbc	r19, r1
 680:	11 24       	eor	r1, r1
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	01 c0       	rjmp	.+2      	; 0x68a <__vector_1+0x6a>
 688:	88 0f       	add	r24, r24
 68a:	2a 95       	dec	r18
 68c:	ea f7       	brpl	.-6      	; 0x688 <__vector_1+0x68>
 68e:	84 2b       	or	r24, r20
 690:	80 83       	st	Z, r24
 692:	81 e0       	ldi	r24, 0x01	; 1
 694:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <G_preBitValue>
 698:	15 c0       	rjmp	.+42     	; 0x6c4 <__vector_1+0xa4>
 69a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <MYPPNSR>
 69e:	8d 7f       	andi	r24, 0xFD	; 253
 6a0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <MYPPNSR>
 6a4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 6a8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 6ac:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 6b0:	e6 95       	lsr	r30
 6b2:	e6 95       	lsr	r30
 6b4:	e6 95       	lsr	r30
 6b6:	f0 e0       	ldi	r31, 0x00	; 0
 6b8:	e6 5e       	subi	r30, 0xE6	; 230
 6ba:	fe 4f       	sbci	r31, 0xFE	; 254
 6bc:	80 81       	ld	r24, Z
 6be:	80 83       	st	Z, r24
 6c0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <G_preBitValue>
 6c4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 6c8:	8f 5f       	subi	r24, 0xFF	; 255
 6ca:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <G_plcRxBitCnt>
 6ce:	81 e0       	ldi	r24, 0x01	; 1
 6d0:	85 bd       	out	0x25, r24	; 37
 6d2:	16 bc       	out	0x26, r1	; 38
 6d4:	85 bb       	out	0x15, r24	; 21
 6d6:	83 e0       	ldi	r24, 0x03	; 3
 6d8:	8c bb       	out	0x1c, r24	; 28
 6da:	ff 91       	pop	r31
 6dc:	ef 91       	pop	r30
 6de:	9f 91       	pop	r25
 6e0:	8f 91       	pop	r24
 6e2:	4f 91       	pop	r20
 6e4:	3f 91       	pop	r19
 6e6:	2f 91       	pop	r18
 6e8:	0f 90       	pop	r0
 6ea:	0f be       	out	0x3f, r0	; 63
 6ec:	0f 90       	pop	r0
 6ee:	1f 90       	pop	r1
 6f0:	18 95       	reti

000006f2 <__vector_2>:
 6f2:	1f 92       	push	r1
 6f4:	0f 92       	push	r0
 6f6:	0f b6       	in	r0, 0x3f	; 63
 6f8:	0f 92       	push	r0
 6fa:	11 24       	eor	r1, r1
 6fc:	2f 93       	push	r18
 6fe:	3f 93       	push	r19
 700:	4f 93       	push	r20
 702:	8f 93       	push	r24
 704:	9f 93       	push	r25
 706:	ef 93       	push	r30
 708:	ff 93       	push	r31
 70a:	15 bc       	out	0x25, r1	; 37
 70c:	16 bc       	out	0x26, r1	; 38
 70e:	a8 98       	cbi	0x15, 0	; 21
 710:	8a e0       	ldi	r24, 0x0A	; 10
 712:	8a 95       	dec	r24
 714:	f1 f7       	brne	.-4      	; 0x712 <__vector_2+0x20>
 716:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <MYPPNSR>
 71a:	81 fd       	sbrc	r24, 1
 71c:	27 c0       	rjmp	.+78     	; 0x76c <__vector_2+0x7a>
 71e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <MYPPNSR>
 722:	81 60       	ori	r24, 0x01	; 1
 724:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <MYPPNSR>
 728:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <G_plcRxBitCnt>
 72c:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <G_plcRxBitCnt>
 730:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 734:	e6 95       	lsr	r30
 736:	e6 95       	lsr	r30
 738:	e6 95       	lsr	r30
 73a:	f0 e0       	ldi	r31, 0x00	; 0
 73c:	e6 5e       	subi	r30, 0xE6	; 230
 73e:	fe 4f       	sbci	r31, 0xFE	; 254
 740:	40 81       	ld	r20, Z
 742:	30 e0       	ldi	r19, 0x00	; 0
 744:	96 95       	lsr	r25
 746:	96 95       	lsr	r25
 748:	96 95       	lsr	r25
 74a:	88 e0       	ldi	r24, 0x08	; 8
 74c:	98 9f       	mul	r25, r24
 74e:	20 19       	sub	r18, r0
 750:	31 09       	sbc	r19, r1
 752:	11 24       	eor	r1, r1
 754:	81 e0       	ldi	r24, 0x01	; 1
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	01 c0       	rjmp	.+2      	; 0x75c <__vector_2+0x6a>
 75a:	88 0f       	add	r24, r24
 75c:	2a 95       	dec	r18
 75e:	ea f7       	brpl	.-6      	; 0x75a <__vector_2+0x68>
 760:	84 2b       	or	r24, r20
 762:	80 83       	st	Z, r24
 764:	81 e0       	ldi	r24, 0x01	; 1
 766:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <G_preBitValue>
 76a:	15 c0       	rjmp	.+42     	; 0x796 <__vector_2+0xa4>
 76c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <MYPPNSR>
 770:	8e 7f       	andi	r24, 0xFE	; 254
 772:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <MYPPNSR>
 776:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 77a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 77e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 782:	e6 95       	lsr	r30
 784:	e6 95       	lsr	r30
 786:	e6 95       	lsr	r30
 788:	f0 e0       	ldi	r31, 0x00	; 0
 78a:	e6 5e       	subi	r30, 0xE6	; 230
 78c:	fe 4f       	sbci	r31, 0xFE	; 254
 78e:	80 81       	ld	r24, Z
 790:	80 83       	st	Z, r24
 792:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <G_preBitValue>
 796:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 79a:	8f 5f       	subi	r24, 0xFF	; 255
 79c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <G_plcRxBitCnt>
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	85 bd       	out	0x25, r24	; 37
 7a4:	16 bc       	out	0x26, r1	; 38
 7a6:	85 bb       	out	0x15, r24	; 21
 7a8:	83 e0       	ldi	r24, 0x03	; 3
 7aa:	8c bb       	out	0x1c, r24	; 28
 7ac:	ff 91       	pop	r31
 7ae:	ef 91       	pop	r30
 7b0:	9f 91       	pop	r25
 7b2:	8f 91       	pop	r24
 7b4:	4f 91       	pop	r20
 7b6:	3f 91       	pop	r19
 7b8:	2f 91       	pop	r18
 7ba:	0f 90       	pop	r0
 7bc:	0f be       	out	0x3f, r0	; 63
 7be:	0f 90       	pop	r0
 7c0:	1f 90       	pop	r1
 7c2:	18 95       	reti

000007c4 <__umulhisi3>:
 7c4:	a2 9f       	mul	r26, r18
 7c6:	b0 01       	movw	r22, r0
 7c8:	b3 9f       	mul	r27, r19
 7ca:	c0 01       	movw	r24, r0
 7cc:	a3 9f       	mul	r26, r19
 7ce:	01 d0       	rcall	.+2      	; 0x7d2 <__umulhisi3+0xe>
 7d0:	b2 9f       	mul	r27, r18
 7d2:	70 0d       	add	r23, r0
 7d4:	81 1d       	adc	r24, r1
 7d6:	11 24       	eor	r1, r1
 7d8:	91 1d       	adc	r25, r1
 7da:	08 95       	ret

000007dc <eeprom_read_byte>:
 7dc:	f9 99       	sbic	0x1f, 1	; 31
 7de:	fe cf       	rjmp	.-4      	; 0x7dc <eeprom_read_byte>
 7e0:	12 bc       	out	0x22, r1	; 34
 7e2:	81 bd       	out	0x21, r24	; 33
 7e4:	f8 9a       	sbi	0x1f, 0	; 31
 7e6:	99 27       	eor	r25, r25
 7e8:	80 b5       	in	r24, 0x20	; 32
 7ea:	08 95       	ret

000007ec <eeprom_write_byte>:
 7ec:	26 2f       	mov	r18, r22

000007ee <eeprom_write_r18>:
 7ee:	f9 99       	sbic	0x1f, 1	; 31
 7f0:	fe cf       	rjmp	.-4      	; 0x7ee <eeprom_write_r18>
 7f2:	1f ba       	out	0x1f, r1	; 31
 7f4:	12 bc       	out	0x22, r1	; 34
 7f6:	81 bd       	out	0x21, r24	; 33
 7f8:	20 bd       	out	0x20, r18	; 32
 7fa:	0f b6       	in	r0, 0x3f	; 63
 7fc:	f8 94       	cli
 7fe:	fa 9a       	sbi	0x1f, 2	; 31
 800:	f9 9a       	sbi	0x1f, 1	; 31
 802:	0f be       	out	0x3f, r0	; 63
 804:	01 96       	adiw	r24, 0x01	; 1
 806:	08 95       	ret

00000808 <_exit>:
 808:	f8 94       	cli

0000080a <__stop_program>:
 80a:	ff cf       	rjmp	.-2      	; 0x80a <__stop_program>
