
IGS_USM_V1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000005c2  00000656  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800108  00800108  0000065e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000065e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000690  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	e9 c1       	rjmp	.+978    	; 0x3d6 <__vector_1>
   4:	51 c2       	rjmp	.+1186   	; 0x4a8 <__vector_2>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	ca c1       	rjmp	.+916    	; 0x3b6 <__vector_16>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d2 e0       	ldi	r29, 0x02	; 2
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e2 ec       	ldi	r30, 0xC2	; 194
  48:	f5 e0       	ldi	r31, 0x05	; 5
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a8 30       	cpi	r26, 0x08	; 8
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	a8 e0       	ldi	r26, 0x08	; 8
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a0 32       	cpi	r26, 0x20	; 32
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	9e d0       	rcall	.+316    	; 0x1a4 <main>
  68:	aa c2       	rjmp	.+1364   	; 0x5be <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <USMF_PortInit>:
  6c:	83 e0       	ldi	r24, 0x03	; 3
  6e:	84 b9       	out	0x04, r24	; 4
  70:	8c e0       	ldi	r24, 0x0C	; 12
  72:	87 b9       	out	0x07, r24	; 7
  74:	80 e3       	ldi	r24, 0x30	; 48
  76:	8a b9       	out	0x0a, r24	; 10
  78:	15 b8       	out	0x05, r1	; 5
  7a:	18 b8       	out	0x08, r1	; 8
  7c:	1b b8       	out	0x0b, r1	; 11
  7e:	84 e0       	ldi	r24, 0x04	; 4
  80:	88 b9       	out	0x08, r24	; 8
  82:	08 95       	ret

00000084 <USMF_ExternalInterruptInit>:
  84:	e9 e6       	ldi	r30, 0x69	; 105
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	10 82       	st	Z, r1
  8a:	80 81       	ld	r24, Z
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	80 83       	st	Z, r24
  90:	80 81       	ld	r24, Z
  92:	84 60       	ori	r24, 0x04	; 4
  94:	80 83       	st	Z, r24
  96:	80 81       	ld	r24, Z
  98:	88 60       	ori	r24, 0x08	; 8
  9a:	80 83       	st	Z, r24
  9c:	83 e0       	ldi	r24, 0x03	; 3
  9e:	8d bb       	out	0x1d, r24	; 29
  a0:	08 95       	ret

000000a2 <USMF_TimerZeroInit>:
  a2:	14 bc       	out	0x24, r1	; 36
  a4:	15 bc       	out	0x25, r1	; 37
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__EEPROM_REGION_LENGTH__+0x7f006e>
  ac:	85 bb       	out	0x15, r24	; 21
  ae:	08 95       	ret

000000b0 <USMF_StatusInit>:
  b0:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <G_plcRxBitCnt>
  b4:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <MYPPNSR>
  b8:	e9 e1       	ldi	r30, 0x19	; 25
  ba:	f1 e0       	ldi	r31, 0x01	; 1
  bc:	10 82       	st	Z, r1
  be:	11 82       	std	Z+1, r1	; 0x01
  c0:	12 82       	std	Z+2, r1	; 0x02
  c2:	13 82       	std	Z+3, r1	; 0x03
  c4:	14 82       	std	Z+4, r1	; 0x04
  c6:	15 82       	std	Z+5, r1	; 0x05
  c8:	08 95       	ret

000000ca <USMF_ReadSerialNumber>:
  ca:	0f 93       	push	r16
  cc:	1f 93       	push	r17
  ce:	cf 93       	push	r28
  d0:	84 e0       	ldi	r24, 0x04	; 4
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	5e d2       	rcall	.+1212   	; 0x592 <eeprom_read_byte>
  d6:	08 2f       	mov	r16, r24
  d8:	85 e0       	ldi	r24, 0x05	; 5
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	5a d2       	rcall	.+1204   	; 0x592 <eeprom_read_byte>
  de:	c8 2f       	mov	r28, r24
  e0:	86 e0       	ldi	r24, 0x06	; 6
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	56 d2       	rcall	.+1196   	; 0x592 <eeprom_read_byte>
  e6:	40 2f       	mov	r20, r16
  e8:	50 e0       	ldi	r21, 0x00	; 0
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	70 e0       	ldi	r23, 0x00	; 0
  ee:	9a 01       	movw	r18, r20
  f0:	11 27       	eor	r17, r17
  f2:	00 27       	eor	r16, r16
  f4:	4c 2f       	mov	r20, r28
  f6:	50 e0       	ldi	r21, 0x00	; 0
  f8:	60 e0       	ldi	r22, 0x00	; 0
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	76 2f       	mov	r23, r22
  fe:	65 2f       	mov	r22, r21
 100:	54 2f       	mov	r21, r20
 102:	44 27       	eor	r20, r20
 104:	40 0f       	add	r20, r16
 106:	51 1f       	adc	r21, r17
 108:	62 1f       	adc	r22, r18
 10a:	73 1f       	adc	r23, r19
 10c:	8a 01       	movw	r16, r20
 10e:	9b 01       	movw	r18, r22
 110:	08 0f       	add	r16, r24
 112:	11 1d       	adc	r17, r1
 114:	21 1d       	adc	r18, r1
 116:	31 1d       	adc	r19, r1
 118:	c9 01       	movw	r24, r18
 11a:	b8 01       	movw	r22, r16
 11c:	cf 91       	pop	r28
 11e:	1f 91       	pop	r17
 120:	0f 91       	pop	r16
 122:	08 95       	ret

00000124 <ReadDefaultParmaFromEEPROM>:
 124:	87 e0       	ldi	r24, 0x07	; 7
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	34 d2       	rcall	.+1128   	; 0x592 <eeprom_read_byte>
 12a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <EPR_ID>
 12e:	89 e0       	ldi	r24, 0x09	; 9
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	2f d2       	rcall	.+1118   	; 0x592 <eeprom_read_byte>
 134:	28 2f       	mov	r18, r24
 136:	30 e0       	ldi	r19, 0x00	; 0
 138:	a4 ee       	ldi	r26, 0xE4	; 228
 13a:	b2 e0       	ldi	r27, 0x02	; 2
 13c:	1e d2       	rcall	.+1084   	; 0x57a <__umulhisi3>
 13e:	dc 01       	movw	r26, r24
 140:	cb 01       	movw	r24, r22
 142:	84 5a       	subi	r24, 0xA4	; 164
 144:	94 4d       	sbci	r25, 0xD4	; 212
 146:	af 4f       	sbci	r26, 0xFF	; 255
 148:	bf 4f       	sbci	r27, 0xFF	; 255
 14a:	26 e0       	ldi	r18, 0x06	; 6
 14c:	b6 95       	lsr	r27
 14e:	a7 95       	ror	r26
 150:	97 95       	ror	r25
 152:	87 95       	ror	r24
 154:	2a 95       	dec	r18
 156:	d1 f7       	brne	.-12     	; 0x14c <ReadDefaultParmaFromEEPROM+0x28>
 158:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <MaxSampleNum>
 15c:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <MaxSampleNum+0x1>
 160:	a0 93 05 01 	sts	0x0105, r26	; 0x800105 <MaxSampleNum+0x2>
 164:	b0 93 06 01 	sts	0x0106, r27	; 0x800106 <MaxSampleNum+0x3>
 168:	8a e0       	ldi	r24, 0x0A	; 10
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	12 d2       	rcall	.+1060   	; 0x592 <eeprom_read_byte>
 16e:	8e 5c       	subi	r24, 0xCE	; 206
 170:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <ADCLevelThreshold>
 174:	8b e0       	ldi	r24, 0x0B	; 11
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0c d2       	rcall	.+1048   	; 0x592 <eeprom_read_byte>
 17a:	8f 5f       	subi	r24, 0xFF	; 255
 17c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <ADCCntThreshold>
 180:	8c e0       	ldi	r24, 0x0C	; 12
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	06 d2       	rcall	.+1036   	; 0x592 <eeprom_read_byte>
 186:	8f 5f       	subi	r24, 0xFF	; 255
 188:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <BurstCnt>
 18c:	08 95       	ret

0000018e <USMF_ADCInit>:
 18e:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <ADCCNT+0x1>
 192:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <ADCCNT>
 196:	80 e2       	ldi	r24, 0x20	; 32
 198:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__EEPROM_REGION_LENGTH__+0x7f007c>
 19c:	81 e8       	ldi	r24, 0x81	; 129
 19e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__EEPROM_REGION_LENGTH__+0x7f007a>
 1a2:	08 95       	ret

000001a4 <main>:
 1a4:	63 df       	rcall	.-314    	; 0x6c <USMF_PortInit>
 1a6:	6e df       	rcall	.-292    	; 0x84 <USMF_ExternalInterruptInit>
 1a8:	f2 df       	rcall	.-28     	; 0x18e <USMF_ADCInit>
 1aa:	7b df       	rcall	.-266    	; 0xa2 <USMF_TimerZeroInit>
 1ac:	8e df       	rcall	.-228    	; 0xca <USMF_ReadSerialNumber>
 1ae:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <mySerialNumber>
 1b2:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <mySerialNumber+0x1>
 1b6:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <mySerialNumber+0x2>
 1ba:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <mySerialNumber+0x3>
 1be:	b2 df       	rcall	.-156    	; 0x124 <ReadDefaultParmaFromEEPROM>
 1c0:	78 94       	sei
 1c2:	76 df       	rcall	.-276    	; 0xb0 <USMF_StatusInit>
 1c4:	c8 e0       	ldi	r28, 0x08	; 8
 1c6:	d4 e0       	ldi	r29, 0x04	; 4
 1c8:	11 e0       	ldi	r17, 0x01	; 1
 1ca:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	31 f5       	brne	.+76     	; 0x21e <main+0x7a>
 1d2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <G_preBitValue>
 1d6:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <G_plcRxBitCnt>
 1da:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <G_plcRxBitCnt>
 1de:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 1e2:	e6 95       	lsr	r30
 1e4:	e6 95       	lsr	r30
 1e6:	e6 95       	lsr	r30
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	e7 5e       	subi	r30, 0xE7	; 231
 1ec:	fe 4f       	sbci	r31, 0xFE	; 254
 1ee:	50 81       	ld	r21, Z
 1f0:	89 2f       	mov	r24, r25
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	46 95       	lsr	r20
 1f6:	46 95       	lsr	r20
 1f8:	46 95       	lsr	r20
 1fa:	68 e0       	ldi	r22, 0x08	; 8
 1fc:	46 9f       	mul	r20, r22
 1fe:	20 19       	sub	r18, r0
 200:	31 09       	sbc	r19, r1
 202:	11 24       	eor	r1, r1
 204:	01 c0       	rjmp	.+2      	; 0x208 <main+0x64>
 206:	88 0f       	add	r24, r24
 208:	2a 95       	dec	r18
 20a:	ea f7       	brpl	.-6      	; 0x206 <main+0x62>
 20c:	85 2b       	or	r24, r21
 20e:	80 83       	st	Z, r24
 210:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 214:	8f 5f       	subi	r24, 0xFF	; 255
 216:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <G_plcRxBitCnt>
 21a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
 21e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 222:	84 32       	cpi	r24, 0x24	; 36
 224:	90 f2       	brcs	.-92     	; 0x1ca <main+0x26>
 226:	15 bc       	out	0x25, r1	; 37
 228:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <G_plcRxBuffer>
 22c:	8f 70       	andi	r24, 0x0F	; 15
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	95 95       	asr	r25
 232:	87 95       	ror	r24
 234:	83 30       	cpi	r24, 0x03	; 3
 236:	91 05       	cpc	r25, r1
 238:	09 f4       	brne	.+2      	; 0x23c <main+0x98>
 23a:	83 c0       	rjmp	.+262    	; 0x342 <__stack+0x43>
 23c:	87 30       	cpi	r24, 0x07	; 7
 23e:	91 05       	cpc	r25, r1
 240:	21 f0       	breq	.+8      	; 0x24a <main+0xa6>
 242:	02 97       	sbiw	r24, 0x02	; 2
 244:	09 f0       	breq	.+2      	; 0x248 <main+0xa4>
 246:	b5 c0       	rjmp	.+362    	; 0x3b2 <__stack+0xb3>
 248:	07 c0       	rjmp	.+14     	; 0x258 <main+0xb4>
 24a:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <SN_ReceiveSuccessFallingF>
 24e:	81 30       	cpi	r24, 0x01	; 1
 250:	09 f4       	brne	.+2      	; 0x254 <main+0xb0>
 252:	af c0       	rjmp	.+350    	; 0x3b2 <__stack+0xb3>
 254:	18 b8       	out	0x08, r1	; 8
 256:	ac c0       	rjmp	.+344    	; 0x3b0 <__stack+0xb1>
 258:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <G_plcRxBuffer>
 25c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <G_plcRxBuffer+0x1>
 260:	50 91 1a 01 	lds	r21, 0x011A	; 0x80011a <G_plcRxBuffer+0x1>
 264:	20 91 1b 01 	lds	r18, 0x011B	; 0x80011b <G_plcRxBuffer+0x2>
 268:	60 91 1b 01 	lds	r22, 0x011B	; 0x80011b <G_plcRxBuffer+0x2>
 26c:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <G_plcRxBuffer+0x3>
 270:	70 e1       	ldi	r23, 0x10	; 16
 272:	87 9f       	mul	r24, r23
 274:	c0 01       	movw	r24, r0
 276:	11 24       	eor	r1, r1
 278:	99 27       	eor	r25, r25
 27a:	32 95       	swap	r19
 27c:	3f 70       	andi	r19, 0x0F	; 15
 27e:	83 2b       	or	r24, r19
 280:	09 2e       	mov	r0, r25
 282:	00 0c       	add	r0, r0
 284:	aa 0b       	sbc	r26, r26
 286:	bb 0b       	sbc	r27, r27
 288:	7c 01       	movw	r14, r24
 28a:	dd 24       	eor	r13, r13
 28c:	cc 24       	eor	r12, r12
 28e:	80 e1       	ldi	r24, 0x10	; 16
 290:	28 9f       	mul	r18, r24
 292:	90 01       	movw	r18, r0
 294:	11 24       	eor	r1, r1
 296:	33 27       	eor	r19, r19
 298:	85 2f       	mov	r24, r21
 29a:	82 95       	swap	r24
 29c:	8f 70       	andi	r24, 0x0F	; 15
 29e:	f9 01       	movw	r30, r18
 2a0:	e8 2b       	or	r30, r24
 2a2:	cf 01       	movw	r24, r30
 2a4:	09 2e       	mov	r0, r25
 2a6:	00 0c       	add	r0, r0
 2a8:	aa 0b       	sbc	r26, r26
 2aa:	bb 0b       	sbc	r27, r27
 2ac:	ba 2f       	mov	r27, r26
 2ae:	a9 2f       	mov	r26, r25
 2b0:	98 2f       	mov	r25, r24
 2b2:	88 27       	eor	r24, r24
 2b4:	8c 0d       	add	r24, r12
 2b6:	9d 1d       	adc	r25, r13
 2b8:	ae 1d       	adc	r26, r14
 2ba:	bf 1d       	adc	r27, r15
 2bc:	f0 e1       	ldi	r31, 0x10	; 16
 2be:	4f 9f       	mul	r20, r31
 2c0:	a0 01       	movw	r20, r0
 2c2:	11 24       	eor	r1, r1
 2c4:	55 27       	eor	r21, r21
 2c6:	62 95       	swap	r22
 2c8:	6f 70       	andi	r22, 0x0F	; 15
 2ca:	46 2b       	or	r20, r22
 2cc:	05 2e       	mov	r0, r21
 2ce:	00 0c       	add	r0, r0
 2d0:	66 0b       	sbc	r22, r22
 2d2:	77 0b       	sbc	r23, r23
 2d4:	84 0f       	add	r24, r20
 2d6:	95 1f       	adc	r25, r21
 2d8:	a6 1f       	adc	r26, r22
 2da:	b7 1f       	adc	r27, r23
 2dc:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <rxSerialNumber>
 2e0:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <rxSerialNumber+0x1>
 2e4:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <rxSerialNumber+0x2>
 2e8:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <rxSerialNumber+0x3>
 2ec:	f0 90 1c 01 	lds	r15, 0x011C	; 0x80011c <G_plcRxBuffer+0x3>
 2f0:	20 91 1d 01 	lds	r18, 0x011D	; 0x80011d <G_plcRxBuffer+0x4>
 2f4:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <mySerialNumber>
 2f8:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <mySerialNumber+0x1>
 2fc:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <mySerialNumber+0x2>
 300:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <mySerialNumber+0x3>
 304:	84 17       	cp	r24, r20
 306:	95 07       	cpc	r25, r21
 308:	a6 07       	cpc	r26, r22
 30a:	b7 07       	cpc	r27, r23
 30c:	09 f0       	breq	.+2      	; 0x310 <__stack+0x11>
 30e:	51 c0       	rjmp	.+162    	; 0x3b2 <__stack+0xb3>
 310:	f2 94       	swap	r15
 312:	8f e0       	ldi	r24, 0x0F	; 15
 314:	f8 22       	and	r15, r24
 316:	30 e1       	ldi	r19, 0x10	; 16
 318:	23 9f       	mul	r18, r19
 31a:	c0 01       	movw	r24, r0
 31c:	11 24       	eor	r1, r1
 31e:	f8 2a       	or	r15, r24
 320:	d8 b9       	out	0x08, r29	; 8
 322:	87 e0       	ldi	r24, 0x07	; 7
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	35 d1       	rcall	.+618    	; 0x592 <eeprom_read_byte>
 328:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <EPR_ID>
 32c:	f0 92 0c 01 	sts	0x010C, r15	; 0x80010c <MY_ID>
 330:	f8 16       	cp	r15, r24
 332:	21 f0       	breq	.+8      	; 0x33c <__stack+0x3d>
 334:	6f 2d       	mov	r22, r15
 336:	87 e0       	ldi	r24, 0x07	; 7
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	33 d1       	rcall	.+614    	; 0x5a2 <eeprom_write_byte>
 33c:	10 93 0d 01 	sts	0x010D, r17	; 0x80010d <SN_ReceiveSuccessFallingF>
 340:	38 c0       	rjmp	.+112    	; 0x3b2 <__stack+0xb3>
 342:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <SN_ReceiveSuccessFallingF>
 346:	51 30       	cpi	r21, 0x01	; 1
 348:	a1 f5       	brne	.+104    	; 0x3b2 <__stack+0xb3>
 34a:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <G_plcRxBuffer>
 34e:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <G_plcRxBuffer+0x1>
 352:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <G_plcRxBuffer+0x1>
 356:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <G_plcRxBuffer+0x2>
 35a:	42 2f       	mov	r20, r18
 35c:	42 95       	swap	r20
 35e:	4f 70       	andi	r20, 0x0F	; 15
 360:	60 e1       	ldi	r22, 0x10	; 16
 362:	96 9f       	mul	r25, r22
 364:	90 01       	movw	r18, r0
 366:	11 24       	eor	r1, r1
 368:	24 2b       	or	r18, r20
 36a:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <MY_ID>
 36e:	29 13       	cpse	r18, r25
 370:	20 c0       	rjmp	.+64     	; 0x3b2 <__stack+0xb3>
 372:	82 95       	swap	r24
 374:	8f 70       	andi	r24, 0x0F	; 15
 376:	84 30       	cpi	r24, 0x04	; 4
 378:	49 f0       	breq	.+18     	; 0x38c <__stack+0x8d>
 37a:	18 f4       	brcc	.+6      	; 0x382 <__stack+0x83>
 37c:	83 30       	cpi	r24, 0x03	; 3
 37e:	c1 f0       	breq	.+48     	; 0x3b0 <__stack+0xb1>
 380:	18 c0       	rjmp	.+48     	; 0x3b2 <__stack+0xb3>
 382:	85 30       	cpi	r24, 0x05	; 5
 384:	29 f0       	breq	.+10     	; 0x390 <__stack+0x91>
 386:	86 30       	cpi	r24, 0x06	; 6
 388:	29 f0       	breq	.+10     	; 0x394 <__stack+0x95>
 38a:	13 c0       	rjmp	.+38     	; 0x3b2 <__stack+0xb3>
 38c:	88 b9       	out	0x08, r24	; 8
 38e:	11 c0       	rjmp	.+34     	; 0x3b2 <__stack+0xb3>
 390:	c8 b9       	out	0x08, r28	; 8
 392:	0f c0       	rjmp	.+30     	; 0x3b2 <__stack+0xb3>
 394:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <LEDStatus>
 398:	81 11       	cpse	r24, r1
 39a:	04 c0       	rjmp	.+8      	; 0x3a4 <__stack+0xa5>
 39c:	d8 b9       	out	0x08, r29	; 8
 39e:	50 93 16 01 	sts	0x0116, r21	; 0x800116 <LEDStatus>
 3a2:	07 c0       	rjmp	.+14     	; 0x3b2 <__stack+0xb3>
 3a4:	81 30       	cpi	r24, 0x01	; 1
 3a6:	29 f4       	brne	.+10     	; 0x3b2 <__stack+0xb3>
 3a8:	c8 b9       	out	0x08, r28	; 8
 3aa:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <LEDStatus>
 3ae:	01 c0       	rjmp	.+2      	; 0x3b2 <__stack+0xb3>
 3b0:	18 b8       	out	0x08, r1	; 8
 3b2:	7e de       	rcall	.-772    	; 0xb0 <USMF_StatusInit>
 3b4:	0a cf       	rjmp	.-492    	; 0x1ca <main+0x26>

000003b6 <__vector_16>:
 3b6:	1f 92       	push	r1
 3b8:	0f 92       	push	r0
 3ba:	0f b6       	in	r0, 0x3f	; 63
 3bc:	0f 92       	push	r0
 3be:	11 24       	eor	r1, r1
 3c0:	8f 93       	push	r24
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
 3c8:	16 bc       	out	0x26, r1	; 38
 3ca:	8f 91       	pop	r24
 3cc:	0f 90       	pop	r0
 3ce:	0f be       	out	0x3f, r0	; 63
 3d0:	0f 90       	pop	r0
 3d2:	1f 90       	pop	r1
 3d4:	18 95       	reti

000003d6 <__vector_1>:
 3d6:	1f 92       	push	r1
 3d8:	0f 92       	push	r0
 3da:	0f b6       	in	r0, 0x3f	; 63
 3dc:	0f 92       	push	r0
 3de:	11 24       	eor	r1, r1
 3e0:	2f 93       	push	r18
 3e2:	3f 93       	push	r19
 3e4:	4f 93       	push	r20
 3e6:	8f 93       	push	r24
 3e8:	9f 93       	push	r25
 3ea:	ef 93       	push	r30
 3ec:	ff 93       	push	r31
 3ee:	15 bc       	out	0x25, r1	; 37
 3f0:	16 bc       	out	0x26, r1	; 38
 3f2:	a8 98       	cbi	0x15, 0	; 21
 3f4:	8a e0       	ldi	r24, 0x0A	; 10
 3f6:	8a 95       	dec	r24
 3f8:	f1 f7       	brne	.-4      	; 0x3f6 <__vector_1+0x20>
 3fa:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <MYPPNSR>
 3fe:	80 fd       	sbrc	r24, 0
 400:	27 c0       	rjmp	.+78     	; 0x450 <__FUSE_REGION_LENGTH__+0x50>
 402:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <MYPPNSR>
 406:	82 60       	ori	r24, 0x02	; 2
 408:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <MYPPNSR>
 40c:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <G_plcRxBitCnt>
 410:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <G_plcRxBitCnt>
 414:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 418:	e6 95       	lsr	r30
 41a:	e6 95       	lsr	r30
 41c:	e6 95       	lsr	r30
 41e:	f0 e0       	ldi	r31, 0x00	; 0
 420:	e7 5e       	subi	r30, 0xE7	; 231
 422:	fe 4f       	sbci	r31, 0xFE	; 254
 424:	40 81       	ld	r20, Z
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	96 95       	lsr	r25
 42a:	96 95       	lsr	r25
 42c:	96 95       	lsr	r25
 42e:	88 e0       	ldi	r24, 0x08	; 8
 430:	98 9f       	mul	r25, r24
 432:	20 19       	sub	r18, r0
 434:	31 09       	sbc	r19, r1
 436:	11 24       	eor	r1, r1
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	01 c0       	rjmp	.+2      	; 0x440 <__FUSE_REGION_LENGTH__+0x40>
 43e:	88 0f       	add	r24, r24
 440:	2a 95       	dec	r18
 442:	ea f7       	brpl	.-6      	; 0x43e <__FUSE_REGION_LENGTH__+0x3e>
 444:	84 2b       	or	r24, r20
 446:	80 83       	st	Z, r24
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <G_preBitValue>
 44e:	15 c0       	rjmp	.+42     	; 0x47a <__FUSE_REGION_LENGTH__+0x7a>
 450:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <MYPPNSR>
 454:	8d 7f       	andi	r24, 0xFD	; 253
 456:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <MYPPNSR>
 45a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 45e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 462:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 466:	e6 95       	lsr	r30
 468:	e6 95       	lsr	r30
 46a:	e6 95       	lsr	r30
 46c:	f0 e0       	ldi	r31, 0x00	; 0
 46e:	e7 5e       	subi	r30, 0xE7	; 231
 470:	fe 4f       	sbci	r31, 0xFE	; 254
 472:	80 81       	ld	r24, Z
 474:	80 83       	st	Z, r24
 476:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <G_preBitValue>
 47a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 47e:	8f 5f       	subi	r24, 0xFF	; 255
 480:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <G_plcRxBitCnt>
 484:	81 e0       	ldi	r24, 0x01	; 1
 486:	85 bd       	out	0x25, r24	; 37
 488:	16 bc       	out	0x26, r1	; 38
 48a:	85 bb       	out	0x15, r24	; 21
 48c:	83 e0       	ldi	r24, 0x03	; 3
 48e:	8c bb       	out	0x1c, r24	; 28
 490:	ff 91       	pop	r31
 492:	ef 91       	pop	r30
 494:	9f 91       	pop	r25
 496:	8f 91       	pop	r24
 498:	4f 91       	pop	r20
 49a:	3f 91       	pop	r19
 49c:	2f 91       	pop	r18
 49e:	0f 90       	pop	r0
 4a0:	0f be       	out	0x3f, r0	; 63
 4a2:	0f 90       	pop	r0
 4a4:	1f 90       	pop	r1
 4a6:	18 95       	reti

000004a8 <__vector_2>:
 4a8:	1f 92       	push	r1
 4aa:	0f 92       	push	r0
 4ac:	0f b6       	in	r0, 0x3f	; 63
 4ae:	0f 92       	push	r0
 4b0:	11 24       	eor	r1, r1
 4b2:	2f 93       	push	r18
 4b4:	3f 93       	push	r19
 4b6:	4f 93       	push	r20
 4b8:	8f 93       	push	r24
 4ba:	9f 93       	push	r25
 4bc:	ef 93       	push	r30
 4be:	ff 93       	push	r31
 4c0:	15 bc       	out	0x25, r1	; 37
 4c2:	16 bc       	out	0x26, r1	; 38
 4c4:	a8 98       	cbi	0x15, 0	; 21
 4c6:	8a e0       	ldi	r24, 0x0A	; 10
 4c8:	8a 95       	dec	r24
 4ca:	f1 f7       	brne	.-4      	; 0x4c8 <__vector_2+0x20>
 4cc:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <MYPPNSR>
 4d0:	81 fd       	sbrc	r24, 1
 4d2:	27 c0       	rjmp	.+78     	; 0x522 <__vector_2+0x7a>
 4d4:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <MYPPNSR>
 4d8:	81 60       	ori	r24, 0x01	; 1
 4da:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <MYPPNSR>
 4de:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <G_plcRxBitCnt>
 4e2:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <G_plcRxBitCnt>
 4e6:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 4ea:	e6 95       	lsr	r30
 4ec:	e6 95       	lsr	r30
 4ee:	e6 95       	lsr	r30
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	e7 5e       	subi	r30, 0xE7	; 231
 4f4:	fe 4f       	sbci	r31, 0xFE	; 254
 4f6:	40 81       	ld	r20, Z
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	96 95       	lsr	r25
 4fc:	96 95       	lsr	r25
 4fe:	96 95       	lsr	r25
 500:	88 e0       	ldi	r24, 0x08	; 8
 502:	98 9f       	mul	r25, r24
 504:	20 19       	sub	r18, r0
 506:	31 09       	sbc	r19, r1
 508:	11 24       	eor	r1, r1
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	01 c0       	rjmp	.+2      	; 0x512 <__vector_2+0x6a>
 510:	88 0f       	add	r24, r24
 512:	2a 95       	dec	r18
 514:	ea f7       	brpl	.-6      	; 0x510 <__vector_2+0x68>
 516:	84 2b       	or	r24, r20
 518:	80 83       	st	Z, r24
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <G_preBitValue>
 520:	15 c0       	rjmp	.+42     	; 0x54c <__vector_2+0xa4>
 522:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <MYPPNSR>
 526:	8e 7f       	andi	r24, 0xFE	; 254
 528:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <MYPPNSR>
 52c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 530:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 534:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <G_plcRxBitCnt>
 538:	e6 95       	lsr	r30
 53a:	e6 95       	lsr	r30
 53c:	e6 95       	lsr	r30
 53e:	f0 e0       	ldi	r31, 0x00	; 0
 540:	e7 5e       	subi	r30, 0xE7	; 231
 542:	fe 4f       	sbci	r31, 0xFE	; 254
 544:	80 81       	ld	r24, Z
 546:	80 83       	st	Z, r24
 548:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <G_preBitValue>
 54c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <G_plcRxBitCnt>
 550:	8f 5f       	subi	r24, 0xFF	; 255
 552:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <G_plcRxBitCnt>
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	85 bd       	out	0x25, r24	; 37
 55a:	16 bc       	out	0x26, r1	; 38
 55c:	85 bb       	out	0x15, r24	; 21
 55e:	83 e0       	ldi	r24, 0x03	; 3
 560:	8c bb       	out	0x1c, r24	; 28
 562:	ff 91       	pop	r31
 564:	ef 91       	pop	r30
 566:	9f 91       	pop	r25
 568:	8f 91       	pop	r24
 56a:	4f 91       	pop	r20
 56c:	3f 91       	pop	r19
 56e:	2f 91       	pop	r18
 570:	0f 90       	pop	r0
 572:	0f be       	out	0x3f, r0	; 63
 574:	0f 90       	pop	r0
 576:	1f 90       	pop	r1
 578:	18 95       	reti

0000057a <__umulhisi3>:
 57a:	a2 9f       	mul	r26, r18
 57c:	b0 01       	movw	r22, r0
 57e:	b3 9f       	mul	r27, r19
 580:	c0 01       	movw	r24, r0
 582:	a3 9f       	mul	r26, r19
 584:	01 d0       	rcall	.+2      	; 0x588 <__umulhisi3+0xe>
 586:	b2 9f       	mul	r27, r18
 588:	70 0d       	add	r23, r0
 58a:	81 1d       	adc	r24, r1
 58c:	11 24       	eor	r1, r1
 58e:	91 1d       	adc	r25, r1
 590:	08 95       	ret

00000592 <eeprom_read_byte>:
 592:	f9 99       	sbic	0x1f, 1	; 31
 594:	fe cf       	rjmp	.-4      	; 0x592 <eeprom_read_byte>
 596:	12 bc       	out	0x22, r1	; 34
 598:	81 bd       	out	0x21, r24	; 33
 59a:	f8 9a       	sbi	0x1f, 0	; 31
 59c:	99 27       	eor	r25, r25
 59e:	80 b5       	in	r24, 0x20	; 32
 5a0:	08 95       	ret

000005a2 <eeprom_write_byte>:
 5a2:	26 2f       	mov	r18, r22

000005a4 <eeprom_write_r18>:
 5a4:	f9 99       	sbic	0x1f, 1	; 31
 5a6:	fe cf       	rjmp	.-4      	; 0x5a4 <eeprom_write_r18>
 5a8:	1f ba       	out	0x1f, r1	; 31
 5aa:	12 bc       	out	0x22, r1	; 34
 5ac:	81 bd       	out	0x21, r24	; 33
 5ae:	20 bd       	out	0x20, r18	; 32
 5b0:	0f b6       	in	r0, 0x3f	; 63
 5b2:	f8 94       	cli
 5b4:	fa 9a       	sbi	0x1f, 2	; 31
 5b6:	f9 9a       	sbi	0x1f, 1	; 31
 5b8:	0f be       	out	0x3f, r0	; 63
 5ba:	01 96       	adiw	r24, 0x01	; 1
 5bc:	08 95       	ret

000005be <_exit>:
 5be:	f8 94       	cli

000005c0 <__stop_program>:
 5c0:	ff cf       	rjmp	.-2      	; 0x5c0 <__stop_program>
